; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	e:\Program\c#\SharpDevelop5\src\AddIns\Analysis\Profiler\Hook\Profiler.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?ThreadNameChanged@CProfiler@@UAGJIKQA_W@Z	; CProfiler::ThreadNameChanged
PUBLIC	?ExceptionUnwindFunctionLeave@CProfiler@@UAGJXZ	; CProfiler::ExceptionUnwindFunctionLeave
PUBLIC	?ExceptionThrown@CProfiler@@UAGJI@Z		; CProfiler::ExceptionThrown
PUBLIC	?ThreadAssignedToOSThread@CProfiler@@UAGJIK@Z	; CProfiler::ThreadAssignedToOSThread
PUBLIC	?ThreadDestroyed@CProfiler@@UAGJI@Z		; CProfiler::ThreadDestroyed
PUBLIC	?ThreadCreated@CProfiler@@UAGJI@Z		; CProfiler::ThreadCreated
PUBLIC	?FunctionUnloadStarted@CProfiler@@UAGJI@Z	; CProfiler::FunctionUnloadStarted
PUBLIC	?Shutdown@CProfiler@@UAGJXZ			; CProfiler::Shutdown
PUBLIC	?Initialize@CProfiler@@UAGJPAUIUnknown@@@Z	; CProfiler::Initialize
PUBLIC	?Release@CProfiler@@UAGKXZ			; CProfiler::Release
PUBLIC	?AddRef@CProfiler@@UAGKXZ			; CProfiler::AddRef
PUBLIC	?QueryInterface@CProfiler@@UAGJABU_GUID@@PAPAX@Z ; CProfiler::QueryInterface
PUBLIC	??0StackEntry@@QAE@PAUFunctionInfo@@_K@Z	; StackEntry::StackEntry
PUBLIC	?hasAtLeastTwoElements@?$LightweightStack@UStackEntry@@@@QAE_NXZ ; LightweightStack<StackEntry>::hasAtLeastTwoElements
PUBLIC	?belowTop@?$LightweightStack@UStackEntry@@@@QAEAAUStackEntry@@XZ ; LightweightStack<StackEntry>::belowTop
PUBLIC	?Enlarge@?$LightweightStack@UStackEntry@@@@QAEXXZ ; LightweightStack<StackEntry>::Enlarge
PUBLIC	?push@?$LightweightStack@UStackEntry@@@@QAEXABUStackEntry@@@Z ; LightweightStack<StackEntry>::push
PUBLIC	?empty@?$LightweightStack@UStackEntry@@@@QAE_NXZ ; LightweightStack<StackEntry>::empty
PUBLIC	?top@?$LightweightStack@UStackEntry@@@@QAEAAUStackEntry@@XZ ; LightweightStack<StackEntry>::top
PUBLIC	?pop@?$LightweightStack@UStackEntry@@@@QAEXXZ	; LightweightStack<StackEntry>::pop
PUBLIC	?max_size@?$allocator@U?$pair@$$CBIH@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int const ,int> >::max_size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::max_size
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIH@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node::_Node
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIH@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Buynode
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Insert
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Dec
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator--
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator--
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,bool>
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIH@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::insert
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lbound
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::lower_bound
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::find
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBIH@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator*
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBIH@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator*
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBIH@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator->
PUBLIC	??0?$pair@IH@std@@QAE@ABIABH@Z			; std::pair<unsigned int,int>::pair<unsigned int,int>
PUBLIC	??$?0IH@?$pair@$$CBIH@std@@QAE@ABU?$pair@IH@1@@Z ; std::pair<unsigned int const ,int>::pair<unsigned int const ,int><unsigned int,int>
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::size
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::const_iterator
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::insert
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::operator*
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator::operator*
PUBLIC	??0?$pair@$$CBKPAVThreadInfo@@@std@@QAE@ABKABQAVThreadInfo@@@Z ; std::pair<unsigned long const ,ThreadInfo *>::pair<unsigned long const ,ThreadInfo *>
PUBLIC	??A?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAEAAPAVThreadInfo@@ABK@Z ; std::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::operator[]
PUBLIC	??0CriticalSection@@QAE@XZ			; CriticalSection::CriticalSection
PUBLIC	??0?$allocator@U?$pair@$$CBIH@std@@@std@@QAE@XZ	; std::allocator<std::pair<unsigned int const ,int> >::allocator<std::pair<unsigned int const ,int> >
PUBLIC	??$?0U?$pair@$$CBIH@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,int> >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIH@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,int> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,int> > >
PUBLIC	??0?$allocator@U?$pair@$$CBIH@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,int> >::allocator<std::pair<unsigned int const ,int> >
PUBLIC	??0?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>
PUBLIC	??$?0U?$pair@$$CBIH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node><std::pair<unsigned int const ,int> >
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
PUBLIC	??$?0U?$pair@$$CBIH@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *><std::pair<unsigned int const ,int> >
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::allocate
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>::construct
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Buynode
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Init
PUBLIC	??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
PUBLIC	??0?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ ; std::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >
PUBLIC	??0?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,ThreadInfo *> >::allocator<std::pair<unsigned int const ,ThreadInfo *> >
PUBLIC	??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,ThreadInfo *> >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >
PUBLIC	??0?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,ThreadInfo *> >::allocator<std::pair<unsigned int const ,ThreadInfo *> >
PUBLIC	??0?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0>::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0>
PUBLIC	??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node><std::pair<unsigned int const ,ThreadInfo *> >
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >
PUBLIC	??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *><std::pair<unsigned int const ,ThreadInfo *> >
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *>
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *>::construct
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Buynode
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Init
PUBLIC	??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >
PUBLIC	??0?$map@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >::map<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,ThreadInfo *> >::allocator<std::pair<unsigned long const ,ThreadInfo *> >
PUBLIC	??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned long const ,ThreadInfo *> >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,ThreadInfo *> >::allocator<std::pair<unsigned long const ,ThreadInfo *> >
PUBLIC	??0?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0>::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0>
PUBLIC	??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node><std::pair<unsigned long const ,ThreadInfo *> >
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >
PUBLIC	??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *><std::pair<unsigned long const ,ThreadInfo *> >
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *>
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *>::construct
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Buynode
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Init
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >
PUBLIC	??0?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >
PUBLIC	??0?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,HandlerInfo> >::allocator<std::pair<unsigned int const ,HandlerInfo> >
PUBLIC	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
PUBLIC	??0_Container_base_aux@std@@QAE@XZ		; std::_Container_base_aux::_Container_base_aux
PUBLIC	??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ; std::_Allocate<std::_Aux_cont>
PUBLIC	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
PUBLIC	??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,HandlerInfo> >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,HandlerInfo> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,HandlerInfo> > >
PUBLIC	??0?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,HandlerInfo> >::allocator<std::pair<unsigned int const ,HandlerInfo> >
PUBLIC	??0?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0>::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0>
PUBLIC	??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node><std::pair<unsigned int const ,HandlerInfo> >
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >
PUBLIC	??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *><std::pair<unsigned int const ,HandlerInfo> >
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node>::allocate
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *>
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *>::construct
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Buynode
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Init
PUBLIC	??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >
PUBLIC	??0?$map@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> > >::map<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> > >
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,ThreadInfo *> >::max_size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::max_size
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node>::allocate
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVThreadInfo@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node::_Node
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVThreadInfo@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Buynode
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::_Dec
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::operator--
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator::operator--
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,bool>
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::insert
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Lbound
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::lower_bound
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::find
PUBLIC	??0?$pair@KPAVThreadInfo@@@std@@QAE@ABKABQAVThreadInfo@@@Z ; std::pair<unsigned long,ThreadInfo *>::pair<unsigned long,ThreadInfo *>
PUBLIC	??$?0KPAVThreadInfo@@@?$pair@$$CBKPAVThreadInfo@@@std@@QAE@ABU?$pair@KPAVThreadInfo@@@1@@Z ; std::pair<unsigned long const ,ThreadInfo *>::pair<unsigned long const ,ThreadInfo *><unsigned long,ThreadInfo *>
PUBLIC	?_Kfn@?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBIH@2@@Z ; std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>::_Kfn
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBIH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Myval
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Key
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator>
PUBLIC	?_Eqrange@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Eqrange
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::equal_range
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator>
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator++
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,unsigned int>
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,unsigned int>
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEIABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	?max_size@?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int const ,ThreadInfo *> >::max_size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::max_size
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node>::allocate
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIPAVThreadInfo@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node::_Node
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIPAVThreadInfo@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Buynode
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Insert
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::_Dec
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::operator--
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator--
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,bool>
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::insert
PUBLIC	??0ThreadInfo@@QAE@XZ				; ThreadInfo::ThreadInfo
PUBLIC	??0?$pair@IPAVThreadInfo@@@std@@QAE@ABIABQAVThreadInfo@@@Z ; std::pair<unsigned int,ThreadInfo *>::pair<unsigned int,ThreadInfo *>
PUBLIC	??$?0IPAVThreadInfo@@@?$pair@$$CBIPAVThreadInfo@@@std@@QAE@ABU?$pair@IPAVThreadInfo@@@1@@Z ; std::pair<unsigned int const ,ThreadInfo *>::pair<unsigned int const ,ThreadInfo *><unsigned int,ThreadInfo *>
PUBLIC	?Enter@CriticalSection@@QAEXXZ			; CriticalSection::Enter
PUBLIC	?Leave@CriticalSection@@QAEXXZ			; CriticalSection::Leave
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator>
PUBLIC	?_Eqrange@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Eqrange
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::equal_range
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator>
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator++
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,unsigned int>
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,unsigned int>
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::erase
PUBLIC	??R?$less@I@std@@QBE_NABI0@Z			; std::less<unsigned int>::operator()
PUBLIC	?_Kfn@?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ; std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0>::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Key
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Lbound
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::lower_bound
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::find
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0>::_Kfn
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVThreadInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Myval
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Key
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator>
PUBLIC	?_Eqrange@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Eqrange
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::equal_range
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator>
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator::operator++
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,unsigned int>
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,unsigned int>
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::erase
PUBLIC	??1ThreadInfo@@QAE@XZ				; ThreadInfo::~ThreadInfo
PUBLIC	??_GThreadInfo@@QAEPAXI@Z			; ThreadInfo::`scalar deleting destructor'
PUBLIC	?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Aux_cont::_Getcont
PUBLIC	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBIPAVThreadInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Myval
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBIPAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::operator*
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBIPAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator*
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBIPAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator->
PUBLIC	??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@ ; `string'
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	??_R0PAX@8					; void * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAD@84
PUBLIC	__CT??_R0PAX@84
PUBLIC	__CTA2PAD
PUBLIC	__TI2PAD
PUBLIC	?nextPosFunctionID@@3JC				; nextPosFunctionID
PUBLIC	??_C@_1BM@IMNIDHAD@?$AAm?$AAa?$AAp?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAI?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EA@LIAAHHAL@?$AAm?$AAa?$AAp?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA0?$AA?5?$AA?$CC?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CD?$AA?$CF?$AAd?$AA?$CC?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_0BF@IEBMFIMJ@COR_ENABLE_PROFILING?$AA@	; `string'
PUBLIC	??_C@_1CA@CPAJBOA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IA@ICOEBLFH@?$AAF?$AAA?$AAT?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AA?4?$AAN?$AAE?$AAT?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_1DK@JNGEKABN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GE@MBLADCNK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?0?$AA?5?$AAl?$AAe?$AAa?$AAv?$AAe?$AA?5?$AAa@ ; `string'
PUBLIC	??_C@_1EG@BIFPEPFJ@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5?$AAp?$AAr?$AAo?$AAf?$AAi?$AAl?$AAi@ ; `string'
PUBLIC	??_C@_1BI@LJPPCMFK@?$AAS?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?4?$AA?4?$AA?4?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BB@EIHAAPLC@SharedMemoryName?$AA@	; `string'
PUBLIC	??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@		; `string'
PUBLIC	??_C@_0FF@CHALMHHG@Could?5not?5find?5environment?5varia@ ; `string'
PUBLIC	??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@	; `string'
PUBLIC	??_C@_09OHDMFPFI@MutexName?$AA@			; `string'
PUBLIC	??_C@_0EO@MELDENFF@Could?5not?5find?5environment?5varia@ ; `string'
PUBLIC	??_C@_0BA@DKCEJMG@AccessEventName?$AA@		; `string'
PUBLIC	??_C@_0FE@HNFKMMLK@Could?5not?5find?5environment?5varia@ ; `string'
PUBLIC	??_C@_1FK@PMAJBODM@?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?9?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi@ ; `string'
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_7CProfiler@@6B@				; CProfiler::`vftable'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	_IID_ICorProfilerCallback:BYTE
EXTRN	_IID_ICorProfilerCallback2:BYTE
EXTRN	__imp__InitializeCriticalSectionAndSpinCount@8:PROC
EXTRN	__imp__SetEnvironmentVariableA@8:PROC
EXTRN	_IID_ICorProfilerInfo:BYTE
EXTRN	_IID_ICorProfilerInfo2:BYTE
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__OpenMutexA@12:PROC
EXTRN	__imp__GetEnvironmentVariableA@12:PROC
EXTRN	__imp__vswprintf_s:PROC
EXTRN	__imp_?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	__imp_?what@exception@std@@UBEPBDXZ:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	__imp_??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
?nextPosFunctionID@@3JC DD 01H DUP (?)			; nextPosFunctionID
;	COMDAT ??_7CProfiler@@6B@
CONST	SEGMENT
??_7CProfiler@@6B@ DD FLAT:?QueryInterface@CProfiler@@UAGJABU_GUID@@PAPAX@Z ; CProfiler::`vftable'
	DD	FLAT:?AddRef@CProfiler@@UAGKXZ
	DD	FLAT:?Release@CProfiler@@UAGKXZ
	DD	FLAT:?Initialize@CProfiler@@UAGJPAUIUnknown@@@Z
	DD	FLAT:?Shutdown@CProfiler@@UAGJXZ
	DD	FLAT:?AppDomainCreationStarted@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?AppDomainCreationFinished@CCorProfilerCallbackImpl@@UAGJIJ@Z
	DD	FLAT:?AppDomainShutdownStarted@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?AppDomainShutdownFinished@CCorProfilerCallbackImpl@@UAGJIJ@Z
	DD	FLAT:?AssemblyLoadStarted@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?AssemblyLoadFinished@CCorProfilerCallbackImpl@@UAGJIJ@Z
	DD	FLAT:?AssemblyUnloadStarted@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?AssemblyUnloadFinished@CCorProfilerCallbackImpl@@UAGJIJ@Z
	DD	FLAT:?ModuleLoadStarted@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ModuleLoadFinished@CProfiler@@UAGJIJ@Z
	DD	FLAT:?ModuleUnloadStarted@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ModuleUnloadFinished@CCorProfilerCallbackImpl@@UAGJIJ@Z
	DD	FLAT:?ModuleAttachedToAssembly@CCorProfilerCallbackImpl@@UAGJII@Z
	DD	FLAT:?ClassLoadStarted@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ClassLoadFinished@CCorProfilerCallbackImpl@@UAGJIJ@Z
	DD	FLAT:?ClassUnloadStarted@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ClassUnloadFinished@CCorProfilerCallbackImpl@@UAGJIJ@Z
	DD	FLAT:?FunctionUnloadStarted@CProfiler@@UAGJI@Z
	DD	FLAT:?JITCompilationStarted@CProfiler@@UAGJIH@Z
	DD	FLAT:?JITCompilationFinished@CCorProfilerCallbackImpl@@UAGJIJH@Z
	DD	FLAT:?JITCachedFunctionSearchStarted@CCorProfilerCallbackImpl@@UAGJIPAH@Z
	DD	FLAT:?JITCachedFunctionSearchFinished@CCorProfilerCallbackImpl@@UAGJIW4__MIDL___MIDL_itf_corprof_0000_0004@@@Z
	DD	FLAT:?JITFunctionPitched@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?JITInlining@CCorProfilerCallbackImpl@@UAGJIIPAH@Z
	DD	FLAT:?ThreadCreated@CProfiler@@UAGJI@Z
	DD	FLAT:?ThreadDestroyed@CProfiler@@UAGJI@Z
	DD	FLAT:?ThreadAssignedToOSThread@CProfiler@@UAGJIK@Z
	DD	FLAT:?RemotingClientInvocationStarted@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?RemotingClientSendingMessage@CCorProfilerCallbackImpl@@UAGJPAU_GUID@@H@Z
	DD	FLAT:?RemotingClientReceivingReply@CCorProfilerCallbackImpl@@UAGJPAU_GUID@@H@Z
	DD	FLAT:?RemotingClientInvocationFinished@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?RemotingServerReceivingMessage@CCorProfilerCallbackImpl@@UAGJPAU_GUID@@H@Z
	DD	FLAT:?RemotingServerInvocationStarted@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?RemotingServerInvocationReturned@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?RemotingServerSendingReply@CCorProfilerCallbackImpl@@UAGJPAU_GUID@@H@Z
	DD	FLAT:?UnmanagedToManagedTransition@CCorProfilerCallbackImpl@@UAGJIW4__MIDL___MIDL_itf_corprof_0000_0005@@@Z
	DD	FLAT:?ManagedToUnmanagedTransition@CCorProfilerCallbackImpl@@UAGJIW4__MIDL___MIDL_itf_corprof_0000_0005@@@Z
	DD	FLAT:?RuntimeSuspendStarted@CCorProfilerCallbackImpl@@UAGJW4__MIDL___MIDL_itf_corprof_0000_0006@@@Z
	DD	FLAT:?RuntimeSuspendFinished@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?RuntimeSuspendAborted@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?RuntimeResumeStarted@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?RuntimeResumeFinished@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?RuntimeThreadSuspended@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?RuntimeThreadResumed@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?MovedReferences@CCorProfilerCallbackImpl@@UAGJKQAI0QAK@Z
	DD	FLAT:?ObjectAllocated@CCorProfilerCallbackImpl@@UAGJII@Z
	DD	FLAT:?ObjectsAllocatedByClass@CCorProfilerCallbackImpl@@UAGJKQAIQAK@Z
	DD	FLAT:?ObjectReferences@CCorProfilerCallbackImpl@@UAGJIIKQAI@Z
	DD	FLAT:?RootReferences@CCorProfilerCallbackImpl@@UAGJKQAI@Z
	DD	FLAT:?ExceptionThrown@CProfiler@@UAGJI@Z
	DD	FLAT:?ExceptionSearchFunctionEnter@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ExceptionSearchFunctionLeave@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?ExceptionSearchFilterEnter@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ExceptionSearchFilterLeave@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?ExceptionSearchCatcherFound@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ExceptionOSHandlerEnter@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ExceptionOSHandlerLeave@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ExceptionUnwindFunctionEnter@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ExceptionUnwindFunctionLeave@CProfiler@@UAGJXZ
	DD	FLAT:?ExceptionUnwindFinallyEnter@CCorProfilerCallbackImpl@@UAGJI@Z
	DD	FLAT:?ExceptionUnwindFinallyLeave@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?ExceptionCatcherEnter@CCorProfilerCallbackImpl@@UAGJII@Z
	DD	FLAT:?ExceptionCatcherLeave@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?COMClassicVTableCreated@CCorProfilerCallbackImpl@@UAGJIABU_GUID@@PAXK@Z
	DD	FLAT:?COMClassicVTableDestroyed@CCorProfilerCallbackImpl@@UAGJIABU_GUID@@PAX@Z
	DD	FLAT:?ExceptionCLRCatcherFound@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?ExceptionCLRCatcherExecute@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?ThreadNameChanged@CProfiler@@UAGJIKQA_W@Z
	DD	FLAT:?GarbageCollectionStarted@CCorProfilerCallbackImpl@@UAGJHQAHW4__MIDL___MIDL_itf_corprof_0011_0006@@@Z
	DD	FLAT:?SurvivingReferences@CCorProfilerCallbackImpl@@UAGJKQAIQAK@Z
	DD	FLAT:?GarbageCollectionFinished@CCorProfilerCallbackImpl@@UAGJXZ
	DD	FLAT:?FinalizeableObjectQueued@CCorProfilerCallbackImpl@@UAGJKI@Z
	DD	FLAT:?RootReferences2@CCorProfilerCallbackImpl@@UAGJKQAIQAW4__MIDL___MIDL_itf_corprof_0011_0001@@QAW4__MIDL___MIDL_itf_corprof_0011_0002@@0@Z
	DD	FLAT:?HandleCreated@CCorProfilerCallbackImpl@@UAGJII@Z
	DD	FLAT:?HandleDestroyed@CCorProfilerCallbackImpl@@UAGJI@Z
CONST	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@PMAJBODM@?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?9?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi@
CONST	SEGMENT
??_C@_1FK@PMAJBODM@?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?9?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi@ DB 'e'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, '-', 00H, 'T', 00H
	DB	'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	' ', 00H, 'a', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, 'y', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'm'
	DB	00H, 'a', 00H, 'p', 00H, '!', 00H, '-', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@HNFKMMLK@Could?5not?5find?5environment?5varia@
CONST	SEGMENT
??_C@_0FE@HNFKMMLK@Could?5not?5find?5environment?5varia@ DB 'Could not fi'
	DB	'nd environment variable ''AccessEventName'', please restart t'
	DB	'he profiler!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DKCEJMG@AccessEventName?$AA@
CONST	SEGMENT
??_C@_0BA@DKCEJMG@AccessEventName?$AA@ DB 'AccessEventName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@MELDENFF@Could?5not?5find?5environment?5varia@
CONST	SEGMENT
??_C@_0EO@MELDENFF@Could?5not?5find?5environment?5varia@ DB 'Could not fi'
	DB	'nd environment variable ''MutexName'', please restart the pro'
	DB	'filer!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09OHDMFPFI@MutexName?$AA@
CONST	SEGMENT
??_C@_09OHDMFPFI@MutexName?$AA@ DB 'MutexName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@
CONST	SEGMENT
??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@ DB 'Unknown error!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@CHALMHHG@Could?5not?5find?5environment?5varia@
CONST	SEGMENT
??_C@_0FF@CHALMHHG@Could?5not?5find?5environment?5varia@ DB 'Could not fi'
	DB	'nd environment variable ''SharedMemoryName'', please restart '
	DB	'the profiler!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
CONST	SEGMENT
??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@ DB 'Profiler Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EIHAAPLC@SharedMemoryName?$AA@
CONST	SEGMENT
??_C@_0BB@EIHAAPLC@SharedMemoryName?$AA@ DB 'SharedMemoryName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@LJPPCMFK@?$AAS?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?4?$AA?4?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@LJPPCMFK@?$AAS?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?4?$AA?4?$AA?4?$AA?$AA@ DB 'S'
	DB	00H, 'h', 00H, 'u', 00H, 't', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	'n', 00H, '.', 00H, '.', 00H, '.', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@BIFPEPFJ@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5?$AAp?$AAr?$AAo?$AAf?$AAi?$AAl?$AAi@
CONST	SEGMENT
??_C@_1EG@BIFPEPFJ@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5?$AAp?$AAr?$AAo?$AAf?$AAi?$AAl?$AAi@ DB 'S'
	DB	00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'f', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'y', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'r'
	DB	00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@MBLADCNK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?0?$AA?5?$AAl?$AAe?$AAa?$AAv?$AAe?$AA?5?$AAa@
CONST	SEGMENT
??_C@_1GE@MBLADCNK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?0?$AA?5?$AAl?$AAe?$AAa?$AAv?$AAe?$AA?5?$AAa@ DB 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'l', 00H, 'e'
	DB	00H, 'a', 00H, 'v', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, ' ', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'c'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'h', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, 's', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@JNGEKABN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@JNGEKABN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AA@ DB 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's'
	DB	00H, 'k', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@ICOEBLFH@?$AAF?$AAA?$AAT?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AA?4?$AAN?$AAE?$AAT?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1IA@ICOEBLFH@?$AAF?$AAA?$AAT?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AA?4?$AAN?$AAE?$AAT?$AA?5?$AAv?$AAe@ DB 'F'
	DB	00H, 'A', 00H, 'T', 00H, 'A', 00H, 'L', 00H, ' ', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ':', 00H, ' ', 00H, 'U'
	DB	00H, 'n', 00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H
	DB	'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '.', 00H, 'N'
	DB	00H, 'E', 00H, 'T', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'n', 00H, 'e'
	DB	00H, 'e', 00H, 'd', 00H, 's', 00H, ' ', 00H, 't', 00H, 'o', 00H
	DB	' ', 00H, 'b', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 't', 00H, ' '
	DB	00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	'2', 00H, '.', 00H, '0', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@CPAJBOA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@CPAJBOA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IEBMFIMJ@COR_ENABLE_PROFILING?$AA@
CONST	SEGMENT
??_C@_0BF@IEBMFIMJ@COR_ENABLE_PROFILING?$AA@ DB 'COR_ENABLE_PROFILING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LIAAHHAL@?$AAm?$AAa?$AAp?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA0?$AA?5?$AA?$CC?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CD?$AA?$CF?$AAd?$AA?$CC?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@LIAAHHAL@?$AAm?$AAa?$AAp?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA0?$AA?5?$AA?$CC?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CD?$AA?$CF?$AAd?$AA?$CC?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$AA@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, '0'
	DB	00H, ' ', 00H, '"', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, '#', 00H, '%', 00H, 'd', 00H, '"', 00H, ' '
	DB	00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@IMNIDHAD@?$AAm?$AAa?$AAp?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAI?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@IMNIDHAD@?$AAm?$AAa?$AAp?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAI?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AA@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H
	DB	'%', 00H, 'I', 00H, 'd', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT __TI2PAD
xdata$x	SEGMENT
__TI2PAD DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2PAD
xdata$x	ENDS
;	COMDAT __CTA2PAD
xdata$x	SEGMENT
__CTA2PAD DD	02H
	DD	FLAT:__CT??_R0PAD@84
	DD	FLAT:__CT??_R0PAX@84
xdata$x	ENDS
;	COMDAT __CT??_R0PAX@84
xdata$x	SEGMENT
__CT??_R0PAX@84 DD 01H
	DD	FLAT:??_R0PAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CT??_R0PAD@84
xdata$x	SEGMENT
__CT??_R0PAD@84 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAX@8
_DATA	SEGMENT
??_R0PAX@8 DD	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAX', 00H
_DATA	ENDS
;	COMDAT ??_R0PAD@8
_DATA	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
_DATA	ENDS
;	COMDAT ??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
CONST	SEGMENT
??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@ DB 'Couldn''t in'
	DB	'itialize critical section', 00H		; `string'
	ORG $+1
_g_tkCorEncodeToken DD 02000000H
	DD	01000000H
	DD	01b000000H
	DD	072000000H
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator>, COMDAT
; ___$ReturnUdt$ = eax

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);
; 955  : 	}

	ret	0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator>, COMDAT
; ___$ReturnUdt$ = eax

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);
; 955  : 	}

	ret	0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator>, COMDAT
; ___$ReturnUdt$ = eax

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);
; 955  : 	}

	ret	0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,HandlerInfo> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,HandlerInfo> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned long const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned long const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIH@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIH@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,int> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIH@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,int> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node><std::pair<unsigned int const ,HandlerInfo> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node><std::pair<unsigned int const ,HandlerInfo> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node><std::pair<unsigned long const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node><std::pair<unsigned long const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node><std::pair<unsigned int const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node><std::pair<unsigned int const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node><std::pair<unsigned int const ,int> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node><std::pair<unsigned int const ,int> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *><std::pair<unsigned int const ,HandlerInfo> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIVHandlerInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *><std::pair<unsigned int const ,HandlerInfo> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *><std::pair<unsigned long const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBKPAVThreadInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *><std::pair<unsigned long const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *><std::pair<unsigned int const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIPAVThreadInfo@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *><std::pair<unsigned int const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIH@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIH@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *><std::pair<unsigned int const ,int> >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIH@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *><std::pair<unsigned int const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$?0IPAVThreadInfo@@@?$pair@$$CBIPAVThreadInfo@@@std@@QAE@ABU?$pair@IPAVThreadInfo@@@1@@Z
_TEXT	SEGMENT
??$?0IPAVThreadInfo@@@?$pair@$$CBIPAVThreadInfo@@@std@@QAE@ABU?$pair@IPAVThreadInfo@@@1@@Z PROC ; std::pair<unsigned int const ,ThreadInfo *>::pair<unsigned int const ,ThreadInfo *><unsigned int,ThreadInfo *>, COMDAT
; _this$ = eax
; __Right$ = ecx

; 49   : 		{	// construct from compatible pair

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx

; 50   : 		}

	ret	0
??$?0IPAVThreadInfo@@@?$pair@$$CBIPAVThreadInfo@@@std@@QAE@ABU?$pair@IPAVThreadInfo@@@1@@Z ENDP ; std::pair<unsigned int const ,ThreadInfo *>::pair<unsigned int const ,ThreadInfo *><unsigned int,ThreadInfo *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0KPAVThreadInfo@@@?$pair@$$CBKPAVThreadInfo@@@std@@QAE@ABU?$pair@KPAVThreadInfo@@@1@@Z
_TEXT	SEGMENT
??$?0KPAVThreadInfo@@@?$pair@$$CBKPAVThreadInfo@@@std@@QAE@ABU?$pair@KPAVThreadInfo@@@1@@Z PROC ; std::pair<unsigned long const ,ThreadInfo *>::pair<unsigned long const ,ThreadInfo *><unsigned long,ThreadInfo *>, COMDAT
; _this$ = eax
; __Right$ = ecx

; 49   : 		{	// construct from compatible pair

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx

; 50   : 		}

	ret	0
??$?0KPAVThreadInfo@@@?$pair@$$CBKPAVThreadInfo@@@std@@QAE@ABU?$pair@KPAVThreadInfo@@@1@@Z ENDP ; std::pair<unsigned long const ,ThreadInfo *>::pair<unsigned long const ,ThreadInfo *><unsigned long,ThreadInfo *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0IH@?$pair@$$CBIH@std@@QAE@ABU?$pair@IH@1@@Z
_TEXT	SEGMENT
??$?0IH@?$pair@$$CBIH@std@@QAE@ABU?$pair@IH@1@@Z PROC	; std::pair<unsigned int const ,int>::pair<unsigned int const ,int><unsigned int,int>, COMDAT
; _this$ = eax
; __Right$ = ecx

; 49   : 		{	// construct from compatible pair

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx

; 50   : 		}

	ret	0
??$?0IH@?$pair@$$CBIH@std@@QAE@ABU?$pair@IH@1@@Z ENDP	; std::pair<unsigned int const ,int>::pair<unsigned int const ,int><unsigned int,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVThreadInfo@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVThreadInfo@@@2@D@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node::_Node, COMDAT
; _this$ = eax
; __Val$ = ecx

; 38   : 			{	// construct a node with value

	mov	edx, DWORD PTR __Larg$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR __Rarg$[esp-4]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+16], ecx
	xor	cl, cl
	mov	BYTE PTR [eax+20], cl
	mov	BYTE PTR [eax+21], cl

; 39   : 			}

	ret	12					; 0000000cH
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVThreadInfo@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node::_Node
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIPAVThreadInfo@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
??0_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIPAVThreadInfo@@@2@D@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node::_Node, COMDAT
; _this$ = eax
; __Val$ = ecx

; 38   : 			{	// construct a node with value

	mov	edx, DWORD PTR __Larg$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR __Rarg$[esp-4]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+16], ecx
	xor	cl, cl
	mov	BYTE PTR [eax+20], cl
	mov	BYTE PTR [eax+21], cl

; 39   : 			}

	ret	12					; 0000000cH
??0_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIPAVThreadInfo@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node::_Node
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIH@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
??0_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIH@2@D@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node::_Node, COMDAT
; _this$ = eax
; __Val$ = ecx

; 38   : 			{	// construct a node with value

	mov	edx, DWORD PTR __Larg$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR __Rarg$[esp-4]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+16], ecx
	xor	cl, cl
	mov	BYTE PTR [eax+20], cl
	mov	BYTE PTR [eax+21], cl

; 39   : 			}

	ret	12					; 0000000cH
??0_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIH@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node::_Node
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator>, COMDAT
; __Val1$ = edx
; __Val2$ = ecx

; 42   : 		{	// construct from specified values

	mov	eax, DWORD PTR _this$[esp-4]
	push	esi
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], ecx
	pop	esi

; 43   : 		}

	ret	4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator>, COMDAT
; __Val1$ = edx
; __Val2$ = ecx

; 42   : 		{	// construct from specified values

	mov	eax, DWORD PTR _this$[esp-4]
	push	esi
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], ecx
	pop	esi

; 43   : 		}

	ret	4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@1@0@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator>, COMDAT
; __Val1$ = edx
; __Val2$ = ecx

; 42   : 		{	// construct from specified values

	mov	eax, DWORD PTR _this$[esp-4]
	push	esi
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], ecx
	pop	esi

; 43   : 		}

	ret	4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned long const ,ThreadInfo *> >::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,ThreadInfo *> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned int const ,ThreadInfo *> >::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned int const ,ThreadInfo *> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBIH@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBIH@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned int const ,int> >::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CBIH@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned int const ,int> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned int const ,HandlerInfo> >::allocator<std::pair<unsigned int const ,HandlerInfo> >, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned int const ,HandlerInfo> >::allocator<std::pair<unsigned int const ,HandlerInfo> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned long const ,ThreadInfo *> >::allocator<std::pair<unsigned long const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,ThreadInfo *> >::allocator<std::pair<unsigned long const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::max_size, COMDAT

; 606  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 607  : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::size, COMDAT
; _this$ = eax

; 601  : 		return (_Mysize);

	mov	eax, DWORD PTR [eax+28]

; 602  : 		}

	ret	0
?size@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVThreadInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVThreadInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Myval, COMDAT
; __Pnode$ = eax

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	add	eax, 12					; 0000000cH

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVThreadInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Myval
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned int const ,ThreadInfo *> >::allocator<std::pair<unsigned int const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned int const ,ThreadInfo *> >::allocator<std::pair<unsigned int const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::max_size, COMDAT

; 606  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 607  : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBIPAVThreadInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
?_Myval@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBIPAVThreadInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Myval, COMDAT
; __Pnode$ = eax

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	add	eax, 12					; 0000000cH

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBIPAVThreadInfo@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Myval
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIH@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBIH@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned int const ,int> >::allocator<std::pair<unsigned int const ,int> >, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBIH@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned int const ,int> >::allocator<std::pair<unsigned int const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::max_size, COMDAT

; 606  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 607  : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBIH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
?_Myval@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBIH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Myval, COMDAT
; __Pnode$ = eax

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	add	eax, 12					; 0000000cH

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBIH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Myval
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,bool>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 42   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax+4], ecx
	mov	cl, BYTE PTR [edx]
	mov	BYTE PTR [eax+8], cl

; 43   : 		}

	ret	4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,bool>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,bool>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 42   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax+4], ecx
	mov	cl, BYTE PTR [edx]
	mov	BYTE PTR [eax+8], cl

; 43   : 		}

	ret	4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,bool>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVThreadInfo@@@std@@QAE@ABKABQAVThreadInfo@@@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@$$CBKPAVThreadInfo@@@std@@QAE@ABKABQAVThreadInfo@@@Z PROC ; std::pair<unsigned long const ,ThreadInfo *>::pair<unsigned long const ,ThreadInfo *>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 42   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 43   : 		}

	ret	4
??0?$pair@$$CBKPAVThreadInfo@@@std@@QAE@ABKABQAVThreadInfo@@@Z ENDP ; std::pair<unsigned long const ,ThreadInfo *>::pair<unsigned long const ,ThreadInfo *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@1@AB_N@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,bool>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 42   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax+4], ecx
	mov	cl, BYTE PTR [edx]
	mov	BYTE PTR [eax+8], cl

; 43   : 		}

	ret	4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,bool>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned int const ,HandlerInfo> >::allocator<std::pair<unsigned int const ,HandlerInfo> >, COMDAT
; _this$ = eax

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned int const ,HandlerInfo> >::allocator<std::pair<unsigned int const ,HandlerInfo> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\functional
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
??R?$less@K@std@@QBE_NABK0@Z PROC			; std::less<unsigned long>::operator(), COMDAT
; __Left$ = eax
; __Right$ = edx

; 143  : 		return (_Left < _Right);

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edx]
	sbb	eax, eax
	neg	eax

; 144  : 		}

	ret	0
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned long const ,ThreadInfo *> >::allocator<std::pair<unsigned long const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,ThreadInfo *> >::allocator<std::pair<unsigned long const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
?_Kfn@?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVThreadInfo@@@2@@Z PROC ; std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0>::_Kfn, COMDAT
; __Val$ = eax

; 65   : 		return (_Val.first);
; 66   : 		}

	ret	0
?_Kfn@?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
?_Key@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Key, COMDAT
; __Pnode$ = eax

; 162  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

	add	eax, 12					; 0000000cH

; 163  : 		}

	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Key
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned int const ,ThreadInfo *> >::allocator<std::pair<unsigned int const ,ThreadInfo *> >, COMDAT
; _this$ = eax

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned int const ,ThreadInfo *> >::allocator<std::pair<unsigned int const ,ThreadInfo *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIPAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
?_Kfn@?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIPAVThreadInfo@@@2@@Z PROC ; std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0>::_Kfn, COMDAT
; __Val$ = eax

; 65   : 		return (_Val.first);
; 66   : 		}

	ret	0
?_Kfn@?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ENDP ; std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
?_Key@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Key, COMDAT
; __Pnode$ = eax

; 162  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

	add	eax, 12					; 0000000cH

; 163  : 		}

	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Key
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\functional
_TEXT	ENDS
;	COMDAT ??R?$less@I@std@@QBE_NABI0@Z
_TEXT	SEGMENT
??R?$less@I@std@@QBE_NABI0@Z PROC			; std::less<unsigned int>::operator(), COMDAT
; __Left$ = eax
; __Right$ = edx

; 143  : 		return (_Left < _Right);

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edx]
	sbb	eax, eax
	neg	eax

; 144  : 		}

	ret	0
??R?$less@I@std@@QBE_NABI0@Z ENDP			; std::less<unsigned int>::operator()
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIH@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBIH@std@@@std@@QAE@XZ PROC	; std::allocator<std::pair<unsigned int const ,int> >::allocator<std::pair<unsigned int const ,int> >, COMDAT
; _this$ = eax

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBIH@std@@@std@@QAE@XZ ENDP	; std::allocator<std::pair<unsigned int const ,int> >::allocator<std::pair<unsigned int const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBIH@2@@Z
_TEXT	SEGMENT
?_Kfn@?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBIH@2@@Z PROC ; std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>::_Kfn, COMDAT
; __Val$ = eax

; 65   : 		return (_Val.first);
; 66   : 		}

	ret	0
?_Kfn@?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBIH@2@@Z ENDP ; std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
?_Key@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Key, COMDAT
; __Pnode$ = eax

; 162  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

	add	eax, 12					; 0000000cH

; 163  : 		}

	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Key
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@IPAVThreadInfo@@@std@@QAE@ABIABQAVThreadInfo@@@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@IPAVThreadInfo@@@std@@QAE@ABIABQAVThreadInfo@@@Z PROC ; std::pair<unsigned int,ThreadInfo *>::pair<unsigned int,ThreadInfo *>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 42   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 43   : 		}

	ret	4
??0?$pair@IPAVThreadInfo@@@std@@QAE@ABIABQAVThreadInfo@@@Z ENDP ; std::pair<unsigned int,ThreadInfo *>::pair<unsigned int,ThreadInfo *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@KPAVThreadInfo@@@std@@QAE@ABKABQAVThreadInfo@@@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@KPAVThreadInfo@@@std@@QAE@ABKABQAVThreadInfo@@@Z PROC ; std::pair<unsigned long,ThreadInfo *>::pair<unsigned long,ThreadInfo *>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 42   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 43   : 		}

	ret	4
??0?$pair@KPAVThreadInfo@@@std@@QAE@ABKABQAVThreadInfo@@@Z ENDP ; std::pair<unsigned long,ThreadInfo *>::pair<unsigned long,ThreadInfo *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@IH@std@@QAE@ABIABH@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@IH@std@@QAE@ABIABH@Z PROC			; std::pair<unsigned int,int>::pair<unsigned int,int>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 42   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 43   : 		}

	ret	4
??0?$pair@IH@std@@QAE@ABIABH@Z ENDP			; std::pair<unsigned int,int>::pair<unsigned int,int>
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\lightweightstack.h
_TEXT	ENDS
;	COMDAT ?pop@?$LightweightStack@UStackEntry@@@@QAEXXZ
_TEXT	SEGMENT
?pop@?$LightweightStack@UStackEntry@@@@QAEXXZ PROC	; LightweightStack<StackEntry>::pop, COMDAT
; _this$ = eax

; 88   : 		assert(!empty());
; 89   : 		topPointer--;

	add	DWORD PTR [eax+4], -24			; ffffffe8H

; 90   : 	}

	ret	0
?pop@?$LightweightStack@UStackEntry@@@@QAEXXZ ENDP	; LightweightStack<StackEntry>::pop
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?belowTop@?$LightweightStack@UStackEntry@@@@QAEAAUStackEntry@@XZ
_TEXT	SEGMENT
?belowTop@?$LightweightStack@UStackEntry@@@@QAEAAUStackEntry@@XZ PROC ; LightweightStack<StackEntry>::belowTop, COMDAT
; _this$ = eax

; 75   : 		assert(size() >= 2);
; 76   : 		return *(topPointer - 1);

	mov	eax, DWORD PTR [eax+4]
	sub	eax, 24					; 00000018H

; 77   : 	}

	ret	0
?belowTop@?$LightweightStack@UStackEntry@@@@QAEAAUStackEntry@@XZ ENDP ; LightweightStack<StackEntry>::belowTop
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?top@?$LightweightStack@UStackEntry@@@@QAEAAUStackEntry@@XZ
_TEXT	SEGMENT
?top@?$LightweightStack@UStackEntry@@@@QAEAAUStackEntry@@XZ PROC ; LightweightStack<StackEntry>::top, COMDAT
; _this$ = eax

; 70   : 		assert(!empty());
; 71   : 		return *topPointer;

	mov	eax, DWORD PTR [eax+4]

; 72   : 	}

	ret	0
?top@?$LightweightStack@UStackEntry@@@@QAEAAUStackEntry@@XZ ENDP ; LightweightStack<StackEntry>::top
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?hasAtLeastTwoElements@?$LightweightStack@UStackEntry@@@@QAE_NXZ
_TEXT	SEGMENT
?hasAtLeastTwoElements@?$LightweightStack@UStackEntry@@@@QAE_NXZ PROC ; LightweightStack<StackEntry>::hasAtLeastTwoElements, COMDAT
; _this$ = eax

; 62   : 		return topPointer > array;

	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [eax], ecx
	sbb	eax, eax
	neg	eax

; 63   : 	}

	ret	0
?hasAtLeastTwoElements@?$LightweightStack@UStackEntry@@@@QAE_NXZ ENDP ; LightweightStack<StackEntry>::hasAtLeastTwoElements
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?empty@?$LightweightStack@UStackEntry@@@@QAE_NXZ
_TEXT	SEGMENT
?empty@?$LightweightStack@UStackEntry@@@@QAE_NXZ PROC	; LightweightStack<StackEntry>::empty, COMDAT
; _this$ = eax

; 58   : 		return topPointer < array;

	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR [eax]
	sbb	eax, eax
	neg	eax

; 59   : 	}

	ret	0
?empty@?$LightweightStack@UStackEntry@@@@QAE_NXZ ENDP	; LightweightStack<StackEntry>::empty
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\profiler.cpp
_TEXT	ENDS
;	COMDAT ?ExceptionThrown@CProfiler@@UAGJI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?ExceptionThrown@CProfiler@@UAGJI@Z PROC		; CProfiler::ExceptionThrown, COMDAT

; 503  : 	DebugWriteLine(L"ExceptionThrown");
; 504  :     return S_OK;

	xor	eax, eax

; 505  : }

	ret	8
?ExceptionThrown@CProfiler@@UAGJI@Z ENDP		; CProfiler::ExceptionThrown
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1ThreadInfo@@QAE@XZ
_TEXT	SEGMENT
??1ThreadInfo@@QAE@XZ PROC				; ThreadInfo::~ThreadInfo, COMDAT
; _this$ = ecx
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
??1ThreadInfo@@QAE@XZ ENDP				; ThreadInfo::~ThreadInfo
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GThreadInfo@@QAEPAXI@Z
_TEXT	SEGMENT
??_GThreadInfo@@QAEPAXI@Z PROC				; ThreadInfo::`scalar deleting destructor', COMDAT
; _this$ = esi
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, esi
	ret	0
??_GThreadInfo@@QAEPAXI@Z ENDP				; ThreadInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SetEventMask@CProfiler@@AAEJXZ			; CProfiler::SetEventMask
; Function compile flags: /Ogtpy
;	COMDAT ?SetEventMask@CProfiler@@AAEJXZ
_TEXT	SEGMENT
?SetEventMask@CProfiler@@AAEJXZ PROC			; CProfiler::SetEventMask, COMDAT
; _this$ = edx

; 392  : 	DWORD eventMask = COR_PRF_MONITOR_ENTERLEAVE | COR_PRF_MONITOR_THREADS | 
; 393  : 		COR_PRF_MONITOR_FUNCTION_UNLOADS | COR_PRF_MONITOR_CLR_EXCEPTIONS |
; 394  : 		COR_PRF_MONITOR_EXCEPTIONS;
; 395  : 	if (sharedMemoryHeader->trackEvents)

	mov	eax, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	cmp	BYTE PTR [eax+50], 0
	mov	ecx, 16781889				; 01001241H
	je	SHORT $LN1@SetEventMa

; 396  : 		eventMask = eventMask | COR_PRF_MONITOR_MODULE_LOADS | COR_PRF_MONITOR_JIT_COMPILATION;

	mov	ecx, 16781925				; 01001265H
$LN1@SetEventMa:

; 397  : 	return pICorProfilerInfo->SetEventMask(eventMask);

	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax]
	push	ecx
	push	eax
	mov	eax, DWORD PTR [edx+64]
	call	eax

; 398  : }

	ret	0
?SetEventMask@CProfiler@@AAEJXZ ENDP			; CProfiler::SetEventMask
_TEXT	ENDS
PUBLIC	?getNewPosFunctionID@@YAHXZ			; getNewPosFunctionID
; Function compile flags: /Ogtpy
;	COMDAT ?getNewPosFunctionID@@YAHXZ
_TEXT	SEGMENT
?getNewPosFunctionID@@YAHXZ PROC			; getNewPosFunctionID, COMDAT

; 170  : int getNewPosFunctionID() {

	push	esi
	push	edi
	npad	14
$LL3@getNewPosF:

; 171  : 	const int step = 5;
; 172  : 	// Simple continuous assignment of IDs leads to problems with the
; 173  : 	// linear probing in FunctionInfo, so we use multiples of 'step' as IDs.
; 174  : 	// The step should not be a multiple of 2 (otherwise parts of the hash table could not be used)!
; 175  : 	LONG oldID;
; 176  : 	LONG newID;
; 177  : 	do {
; 178  : 		oldID = nextPosFunctionID;

	mov	edx, DWORD PTR ?nextPosFunctionID@@3JC	; nextPosFunctionID

; 179  : 		newID = ((oldID + step) & 0x7FFFFFFF); // x % 2^31

	lea	ecx, DWORD PTR [edx+5]
	and	ecx, 2147483647				; 7fffffffH

; 180  : 	} while (InterlockedCompareExchange(&nextPosFunctionID, newID, oldID) != oldID);

	mov	esi, ecx
	mov	edi, OFFSET ?nextPosFunctionID@@3JC	; nextPosFunctionID
	mov	eax, edx
	lock	 cmpxchg DWORD PTR [edi], esi
	cmp	eax, edx
	jne	SHORT $LL3@getNewPosF
	pop	edi

; 181  : 	return newID;

	mov	eax, ecx
	pop	esi

; 182  : }

	ret	0
?getNewPosFunctionID@@YAHXZ ENDP			; getNewPosFunctionID
_TEXT	ENDS
PUBLIC	?DetachFromThread@@YAXPAUThreadLocalData@@@Z	; DetachFromThread
; Function compile flags: /Ogtpy
;	COMDAT ?DetachFromThread@@YAXPAUThreadLocalData@@@Z
_TEXT	SEGMENT
_tsc$99135 = -8						; size = 8
?DetachFromThread@@YAXPAUThreadLocalData@@@Z PROC	; DetachFromThread, COMDAT
; _data$ = ecx

; 124  : void DetachFromThread(ThreadLocalData *data) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi

; 125  : 	if (data != nullptr) {

	test	ecx, ecx
	je	SHORT $LN1@DetachFrom

; 126  : 		DebugWriteLine(L"DetachFromThread %d", data->threadID);
; 127  : 		ULONGLONG tsc = __rdtsc();

	rdtsc
	mov	DWORD PTR _tsc$99135[esp+28], edx

; 128  : 		while (!data->stack.empty()) {

	mov	edx, DWORD PTR [ecx+24]
	cmp	edx, DWORD PTR [ecx+20]
	jb	SHORT $LN1@DetachFrom
$LN2@DetachFrom:

; 129  : 			StackEntry &stackTop = data->stack.top();

	mov	edi, DWORD PTR [ecx+24]

; 130  : 			stackTop.function->TimeSpent += (tsc - stackTop.startTime);

	mov	esi, DWORD PTR [edi]
	mov	ebx, DWORD PTR _tsc$99135[esp+28]
	mov	edx, eax
	sub	edx, DWORD PTR [edi+8]
	sbb	ebx, DWORD PTR [edi+12]
	add	DWORD PTR [esi+8], edx
	adc	DWORD PTR [esi+12], ebx

; 131  : 			data->stack.pop();

	add	DWORD PTR [ecx+24], -24			; ffffffe8H
	mov	edx, DWORD PTR [ecx+24]
	cmp	edx, DWORD PTR [ecx+20]
	jae	SHORT $LN2@DetachFrom
$LN1@DetachFrom:

; 132  : 		}
; 133  : 	}
; 134  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?DetachFromThread@@YAXPAUThreadLocalData@@@Z ENDP	; DetachFromThread
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Release@CProfiler@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@CProfiler@@UAGKXZ PROC				; CProfiler::Release, COMDAT

; 37   : 	return 1;

	mov	eax, 1

; 38   : }

	ret	4
?Release@CProfiler@@UAGKXZ ENDP				; CProfiler::Release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddRef@CProfiler@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@CProfiler@@UAGKXZ PROC				; CProfiler::AddRef, COMDAT

; 33   : 	return 1;

	mov	eax, 1

; 34   : }

	ret	4
?AddRef@CProfiler@@UAGKXZ ENDP				; CProfiler::AddRef
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\global.h
_TEXT	ENDS
;	COMDAT ??0ThreadInfo@@QAE@XZ
_TEXT	SEGMENT
??0ThreadInfo@@QAE@XZ PROC				; ThreadInfo::ThreadInfo, COMDAT
; _this$ = esi

; 81   : 		ThreadInfo()

	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ

; 82   : 		{
; 83   : 			this->unmanagedThreadId = 0;

	mov	DWORD PTR [esi], 0

; 84   : 			this->managedThreadId = nullptr;

	mov	DWORD PTR [esi+4], 0

; 85   : 		}

	mov	eax, esi
	ret	0
??0ThreadInfo@@QAE@XZ ENDP				; ThreadInfo::ThreadInfo
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0StackEntry@@QAE@PAUFunctionInfo@@_K@Z
_TEXT	SEGMENT
_startTime$ = 8						; size = 8
??0StackEntry@@QAE@PAUFunctionInfo@@_K@Z PROC		; StackEntry::StackEntry, COMDAT
; _this$ = eax
; _function$ = ecx

; 53   : 	StackEntry(FunctionInfo * function, ULONGLONG startTime) : function(function), startTime(startTime), frameCount(1) {}

	mov	edx, DWORD PTR _startTime$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _startTime$[esp]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], 1
	ret	8
??0StackEntry@@QAE@PAUFunctionInfo@@_K@Z ENDP		; StackEntry::StackEntry
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\criticalsection.h
_TEXT	ENDS
;	COMDAT ?Leave@CriticalSection@@QAEXXZ
_TEXT	SEGMENT
?Leave@CriticalSection@@QAEXXZ PROC			; CriticalSection::Leave, COMDAT
; _this$ = eax

; 41   : 		LeaveCriticalSection(&criticalSection);

	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 42   : 	}

	ret	0
?Leave@CriticalSection@@QAEXXZ ENDP			; CriticalSection::Leave
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Enter@CriticalSection@@QAEXXZ
_TEXT	SEGMENT
?Enter@CriticalSection@@QAEXXZ PROC			; CriticalSection::Enter, COMDAT
; _this$ = eax

; 38   : 		EnterCriticalSection(&criticalSection);

	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4

; 39   : 	}

	ret	0
?Enter@CriticalSection@@QAEXXZ ENDP			; CriticalSection::Enter
_TEXT	ENDS
EXTRN	__CxxThrowException@8:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??0CriticalSection@@QAE@XZ
_TEXT	SEGMENT
$T122263 = -4						; size = 4
??0CriticalSection@@QAE@XZ PROC				; CriticalSection::CriticalSection, COMDAT

; 30   : 	CriticalSection() {

	push	ecx

; 31   : 		if (!InitializeCriticalSectionAndSpinCount(&criticalSection, 0x80000400))
; 32   : 			throw "Couldn't initialize critical section";

	push	OFFSET __TI2PAD
	lea	eax, DWORD PTR $T122263[esp+8]
	push	eax
	mov	DWORD PTR $T122263[esp+12], OFFSET ??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	call	__CxxThrowException@8
$LN8@CriticalSe:
$LN7@CriticalSe:
	int	3
??0CriticalSection@@QAE@XZ ENDP				; CriticalSection::CriticalSection
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0_Container_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
??0_Container_base_aux@std@@QAE@XZ PROC			; std::_Container_base_aux::_Container_base_aux, COMDAT
; _this$ = eax

; 380  : 		{
; 381  : 		// Do nothing: _Container_base_aux_alloc_real() will construct the aux object.
; 382  : 		}

	ret	0
??0_Container_base_aux@std@@QAE@XZ ENDP			; std::_Container_base_aux::_Container_base_aux
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ PROC ; std::_Aux_cont::_Getcont, COMDAT
; _this$ = eax

; 369  : 		return _Mycontainer;

	mov	eax, DWORD PTR [eax]

; 370  : 		}

	ret	0
?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ENDP ; std::_Aux_cont::_Getcont
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z PROC	; std::_Aux_cont::_Aux_cont, COMDAT
; _this$ = eax
; __Pcont$ = ecx

; 364  : 	explicit _Aux_cont(const _Container_base_aux * const _Pcont)

	mov	DWORD PTR [eax], ecx
	ret	0
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ENDP	; std::_Aux_cont::_Aux_cont
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = -4						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = esi

; 371  : 		{	// construct from message string

	push	ecx
	lea	eax, DWORD PTR __Message$[esp+4]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __Message$[esp+8], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	eax, esi
	pop	ecx
	ret	0
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z
_TEXT	SEGMENT
$T124291 = -16						; size = 4
$T124283 = -12						; size = 12
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z PROC ; std::_Allocate<std::_Aux_cont>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	sub	esp, 16					; 00000010H
	cmp	eax, 4
	jae	SHORT $LN1@Allocate@4

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T124291[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T124283[esp+20]
	mov	DWORD PTR $T124291[esp+20], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T124283[esp+20]
	push	ecx
	mov	DWORD PTR $T124283[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@Allocate@4:
$LN1@Allocate@4:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 16					; 00000010H
	ret	0
$LN12@Allocate@4:
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Aux_cont>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *>, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	eax, eax
	je	SHORT $LN3@Construct@2
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@2:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T124314 = -16						; size = 4
$T124306 = -12						; size = 12
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	sub	esp, 16					; 00000010H
	cmp	eax, 32					; 00000020H
	jae	SHORT $LN1@Allocate@5

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T124314[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T124306[esp+20]
	mov	DWORD PTR $T124314[esp+20], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T124306[esp+20]
	push	ecx
	mov	DWORD PTR $T124306[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@Allocate@5:
$LN1@Allocate@5:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	shl	ecx, 5
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 16					; 00000010H
	ret	0
$LN12@Allocate@5:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *>, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	eax, eax
	je	SHORT $LN3@Construct@3
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@3:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *>, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	eax, eax
	je	SHORT $LN3@Construct@4
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@4:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	eax, eax
	je	SHORT $LN3@Construct@5
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@5:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T124355 = -16						; size = 4
$T124347 = -12						; size = 12
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	sub	esp, 16					; 00000010H
	cmp	eax, 24					; 00000018H
	jae	SHORT $LN1@Allocate@6

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T124355[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T124347[esp+20]
	mov	DWORD PTR $T124355[esp+20], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T124347[esp+20]
	push	ecx
	mov	DWORD PTR $T124347[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@Allocate@6:
$LN1@Allocate@6:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*2]
	add	edx, edx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 16					; 00000010H
	ret	0
$LN12@Allocate@6:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T124369 = -16						; size = 4
$T124361 = -12						; size = 12
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	sub	esp, 16					; 00000010H
	cmp	eax, 24					; 00000018H
	jae	SHORT $LN1@Allocate@7

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T124369[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T124361[esp+20]
	mov	DWORD PTR $T124369[esp+20], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T124361[esp+20]
	push	ecx
	mov	DWORD PTR $T124361[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@Allocate@7:
$LN1@Allocate@7:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*2]
	add	edx, edx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 16					; 00000010H
	ret	0
$LN12@Allocate@7:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T124383 = -16						; size = 4
$T124375 = -12						; size = 12
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	sub	esp, 16					; 00000010H
	cmp	eax, 24					; 00000018H
	jae	SHORT $LN1@Allocate@8

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T124383[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T124375[esp+20]
	mov	DWORD PTR $T124383[esp+20], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T124375[esp+20]
	push	ecx
	mov	DWORD PTR $T124375[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@Allocate@8:
$LN1@Allocate@8:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*2]
	add	edx, edx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 16					; 00000010H
	ret	0
$LN12@Allocate@8:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z
_TEXT	SEGMENT
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z PROC ; std::allocator<std::_Aux_cont>::allocate, COMDAT

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 146  : 		}

	ret	0
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ENDP ; std::allocator<std::_Aux_cont>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,HandlerInfo> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,HandlerInfo> > >, COMDAT
; _this$ = esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
$LN3@Container_:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,HandlerInfo> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,HandlerInfo> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >, COMDAT
; _this$ = esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_@2
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
$LN3@Container_@2:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >, COMDAT
; _this$ = esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_@3
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
$LN3@Container_@3:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIH@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIH@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,int> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,int> > >, COMDAT
; _this$ = esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_@4
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
$LN3@Container_@4:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIH@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,int> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,int> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *>::construct, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	test	eax, eax
	je	SHORT $LN5@construct@2
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@2:

; 156  : 		}

	ret	0
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node *>::construct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node>::allocate, COMDAT

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 146  : 		}

	ret	0
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Node>::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *>::construct, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	test	eax, eax
	je	SHORT $LN5@construct@3
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@3:

; 156  : 		}

	ret	0
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node *>::construct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *>::construct, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	test	eax, eax
	je	SHORT $LN5@construct@4
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@4:

; 156  : 		}

	ret	0
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node *>::construct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>::construct, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	test	eax, eax
	je	SHORT $LN5@construct@5
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@5:

; 156  : 		}

	ret	0
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Buynode, COMDAT

; 1384 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1385 : 		int _Linkcnt = 0;
; 1386 : 
; 1387 : 		_TRY_BEGIN
; 1388 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

	test	eax, eax
	je	SHORT $LN27@Buynode
	mov	DWORD PTR [eax], 0
$LN27@Buynode:

; 1389 : 		++_Linkcnt;
; 1390 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN37@Buynode
	mov	DWORD PTR [ecx], 0
$LN37@Buynode:

; 1391 : 		++_Linkcnt;
; 1392 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN47@Buynode
	mov	DWORD PTR [ecx], 0
$LN47@Buynode:

; 1393 : 		_CATCH_ALL
; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1399 : 		_RERAISE;
; 1400 : 		_CATCH_END
; 1401 : 		_Color(_Wherenode) = _Black;

	mov	BYTE PTR [eax+28], 1

; 1402 : 		_Isnil(_Wherenode) = false;

	mov	BYTE PTR [eax+29], 0

; 1403 : 		return (_Wherenode);
; 1404 : 		}

	ret	0
?_Buynode@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Buynode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node>::allocate, COMDAT

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 146  : 		}

	ret	0
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Node>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Buynode, COMDAT

; 1384 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1385 : 		int _Linkcnt = 0;
; 1386 : 
; 1387 : 		_TRY_BEGIN
; 1388 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

	test	eax, eax
	je	SHORT $LN27@Buynode@2
	mov	DWORD PTR [eax], 0
$LN27@Buynode@2:

; 1389 : 		++_Linkcnt;
; 1390 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN37@Buynode@2
	mov	DWORD PTR [ecx], 0
$LN37@Buynode@2:

; 1391 : 		++_Linkcnt;
; 1392 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN47@Buynode@2
	mov	DWORD PTR [ecx], 0
$LN47@Buynode@2:

; 1393 : 		_CATCH_ALL
; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1399 : 		_RERAISE;
; 1400 : 		_CATCH_END
; 1401 : 		_Color(_Wherenode) = _Black;

	mov	BYTE PTR [eax+20], 1

; 1402 : 		_Isnil(_Wherenode) = false;

	mov	BYTE PTR [eax+21], 0

; 1403 : 		return (_Wherenode);
; 1404 : 		}

	ret	0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Buynode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node>::allocate, COMDAT

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 146  : 		}

	ret	0
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Node>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Buynode, COMDAT

; 1384 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1385 : 		int _Linkcnt = 0;
; 1386 : 
; 1387 : 		_TRY_BEGIN
; 1388 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

	test	eax, eax
	je	SHORT $LN27@Buynode@3
	mov	DWORD PTR [eax], 0
$LN27@Buynode@3:

; 1389 : 		++_Linkcnt;
; 1390 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN37@Buynode@3
	mov	DWORD PTR [ecx], 0
$LN37@Buynode@3:

; 1391 : 		++_Linkcnt;
; 1392 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN47@Buynode@3
	mov	DWORD PTR [ecx], 0
$LN47@Buynode@3:

; 1393 : 		_CATCH_ALL
; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1399 : 		_RERAISE;
; 1400 : 		_CATCH_END
; 1401 : 		_Color(_Wherenode) = _Black;

	mov	BYTE PTR [eax+20], 1

; 1402 : 		_Isnil(_Wherenode) = false;

	mov	BYTE PTR [eax+21], 0

; 1403 : 		return (_Wherenode);
; 1404 : 		}

	ret	0
?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Buynode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::allocate, COMDAT

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 146  : 		}

	ret	0
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Buynode, COMDAT

; 1384 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1385 : 		int _Linkcnt = 0;
; 1386 : 
; 1387 : 		_TRY_BEGIN
; 1388 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

	test	eax, eax
	je	SHORT $LN27@Buynode@4
	mov	DWORD PTR [eax], 0
$LN27@Buynode@4:

; 1389 : 		++_Linkcnt;
; 1390 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN37@Buynode@4
	mov	DWORD PTR [ecx], 0
$LN37@Buynode@4:

; 1391 : 		++_Linkcnt;
; 1392 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN47@Buynode@4
	mov	DWORD PTR [ecx], 0
$LN47@Buynode@4:

; 1393 : 		_CATCH_ALL
; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1399 : 		_RERAISE;
; 1400 : 		_CATCH_END
; 1401 : 		_Color(_Wherenode) = _Black;

	mov	BYTE PTR [eax+20], 1

; 1402 : 		_Isnil(_Wherenode) = false;

	mov	BYTE PTR [eax+21], 0

; 1403 : 		return (_Wherenode);
; 1404 : 		}

	ret	0
?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVThreadInfo@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVThreadInfo@@@2@D@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Buynode, COMDAT
; __Val$ = esi

; 1409 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new

; 1410 : 		_TRY_BEGIN
; 1411 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

	xor	ecx, ecx
	add	esp, 4
	cmp	eax, ecx
	je	SHORT $LN4@Buynode@5
	mov	edx, DWORD PTR __Larg$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR __Rarg$[esp-4]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+16], edx
	mov	BYTE PTR [eax+20], cl
	mov	BYTE PTR [eax+21], cl
$LN4@Buynode@5:

; 1412 : 		_CATCH_ALL
; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1414 : 		_RERAISE;
; 1415 : 		_CATCH_END
; 1416 : 		return (_Wherenode);
; 1417 : 		}

	ret	12					; 0000000cH
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVThreadInfo@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIPAVThreadInfo@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIPAVThreadInfo@@@2@D@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Buynode, COMDAT
; __Val$ = esi

; 1409 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new

; 1410 : 		_TRY_BEGIN
; 1411 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

	xor	ecx, ecx
	add	esp, 4
	cmp	eax, ecx
	je	SHORT $LN4@Buynode@6
	mov	edx, DWORD PTR __Larg$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR __Rarg$[esp-4]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+16], edx
	mov	BYTE PTR [eax+20], cl
	mov	BYTE PTR [eax+21], cl
$LN4@Buynode@6:

; 1412 : 		_CATCH_ALL
; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1414 : 		_RERAISE;
; 1415 : 		_CATCH_END
; 1416 : 		return (_Wherenode);
; 1417 : 		}

	ret	12					; 0000000cH
?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIPAVThreadInfo@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIH@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIH@2@D@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Buynode, COMDAT
; __Val$ = esi

; 1409 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new

; 1410 : 		_TRY_BEGIN
; 1411 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

	xor	ecx, ecx
	add	esp, 4
	cmp	eax, ecx
	je	SHORT $LN4@Buynode@7
	mov	edx, DWORD PTR __Larg$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR __Rarg$[esp-4]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+16], edx
	mov	BYTE PTR [eax+20], cl
	mov	BYTE PTR [eax+21], cl
$LN4@Buynode@7:

; 1412 : 		_CATCH_ALL
; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1414 : 		_RERAISE;
; 1415 : 		_CATCH_END
; 1416 : 		return (_Wherenode);
; 1417 : 		}

	ret	12					; 0000000cH
?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIH@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\lightweightstack.h
;	COMDAT ?Enlarge@?$LightweightStack@UStackEntry@@@@QAEXXZ
_TEXT	SEGMENT
?Enlarge@?$LightweightStack@UStackEntry@@@@QAEXXZ PROC	; LightweightStack<StackEntry>::Enlarge, COMDAT
; _this$ = esi

; 36   : 		ptrdiff_t capacity = (arrayEnd - array);

	mov	ecx, DWORD PTR [esi+8]
	push	ebx
	push	ebp
	push	edi
	mov	edi, DWORD PTR [esi]
	sub	ecx, edi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx

; 37   : 		ptrdiff_t newCapacity = 2 * capacity;
; 38   : 		ptrdiff_t topIndex = topPointer - array;

	mov	edx, DWORD PTR [esi+4]
	sub	edx, edi
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	lea	ebx, DWORD PTR [ecx+ecx]

; 39   : 		T *newArray = (T *)stackAllocator.malloc(newCapacity * sizeof(T));

	lea	ebx, DWORD PTR [ebx+ebx*2]
	sar	edx, 2
	add	ebx, ebx
	mov	edi, edx
	add	ebx, ebx
	shr	edi, 31					; 0000001fH
	add	ebx, ebx
	add	edi, edx
	mov	ebp, ebx
	mov	eax, OFFSET ?stackAllocator@@3UfastAllocator@@A+4
	lock	 xadd	 DWORD PTR [eax], ebp
	mov	edx, DWORD PTR ?stackAllocator@@3UfastAllocator@@A+8
	sub	edx, ebp
	xor	eax, eax
	cmp	edx, ebx

; 40   : 		memcpy(newArray, array, capacity * sizeof(T));

	mov	edx, DWORD PTR [esi]
	setle	al
	lea	ecx, DWORD PTR [ecx+ecx*2]
	add	ecx, ecx
	add	ecx, ecx
	add	ecx, ecx
	push	ecx
	push	edx
	dec	eax
	and	ebp, eax
	push	ebp
	call	_memcpy
	add	esp, 12					; 0000000cH

; 41   : 		stackAllocator.free(array, capacity * sizeof(T));
; 42   : 		array = newArray;
; 43   : 		arrayEnd = newArray + newCapacity;
; 44   : 		topPointer = newArray + topIndex;

	lea	eax, DWORD PTR [edi+edi*2]
	add	ebx, ebp
	pop	edi
	lea	ecx, DWORD PTR [ebp+eax*8]
	mov	DWORD PTR [esi], ebp
	pop	ebp
	mov	DWORD PTR [esi+8], ebx
	mov	DWORD PTR [esi+4], ecx
	pop	ebx

; 45   : 	}

	ret	0
?Enlarge@?$LightweightStack@UStackEntry@@@@QAEXXZ ENDP	; LightweightStack<StackEntry>::Enlarge
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?push@?$LightweightStack@UStackEntry@@@@QAEXABUStackEntry@@@Z
_TEXT	SEGMENT
?push@?$LightweightStack@UStackEntry@@@@QAEXABUStackEntry@@@Z PROC ; LightweightStack<StackEntry>::push, COMDAT
; _this$ = eax
; _value$ = edi

; 79   : 	void push(const T& value) {

	push	esi
	mov	esi, eax

; 80   : 		++topPointer;

	add	DWORD PTR [esi+4], 24			; 00000018H
	mov	eax, DWORD PTR [esi+4]

; 81   : 		if (topPointer == arrayEnd)

	cmp	eax, DWORD PTR [esi+8]
	jne	SHORT $LN1@push

; 82   : 			Enlarge();

	call	?Enlarge@?$LightweightStack@UStackEntry@@@@QAEXXZ ; LightweightStack<StackEntry>::Enlarge
$LN1@push:

; 83   : 		assert(topPointer < arrayEnd);
; 84   : 		*topPointer = value;

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [edi+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [edi+20]
	mov	DWORD PTR [eax+20], edx
	pop	esi

; 85   : 	}

	ret	0
?push@?$LightweightStack@UStackEntry@@@@QAEXABUStackEntry@@@Z ENDP ; LightweightStack<StackEntry>::push
_TEXT	ENDS
PUBLIC	?Deactivate@CProfiler@@QAEXXZ			; CProfiler::Deactivate
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\profiler.cpp
;	COMDAT ?Deactivate@CProfiler@@QAEXXZ
_TEXT	SEGMENT
?Deactivate@CProfiler@@QAEXXZ PROC			; CProfiler::Deactivate, COMDAT

; 519  : 	ThreadLocalData *data = getThreadLocalData();

	mov	eax, DWORD PTR ?tls_index@@3KA		; tls_index
	push	eax
	call	DWORD PTR __imp__TlsGetValue@4

; 520  : 	data->active = false;

	mov	BYTE PTR [eax+8], 0

; 521  : }

	ret	0
?Deactivate@CProfiler@@QAEXXZ ENDP			; CProfiler::Deactivate
_TEXT	ENDS
PUBLIC	?Activate@CProfiler@@QAEXXZ			; CProfiler::Activate
; Function compile flags: /Ogtpy
;	COMDAT ?Activate@CProfiler@@QAEXXZ
_TEXT	SEGMENT
?Activate@CProfiler@@QAEXXZ PROC			; CProfiler::Activate, COMDAT

; 514  : 	ThreadLocalData *data = getThreadLocalData();

	mov	eax, DWORD PTR ?tls_index@@3KA		; tls_index
	push	eax
	call	DWORD PTR __imp__TlsGetValue@4

; 515  : 	data->active = true;

	mov	BYTE PTR [eax+8], 1

; 516  : }

	ret	0
?Activate@CProfiler@@QAEXXZ ENDP			; CProfiler::Activate
_TEXT	ENDS
PUBLIC	?MovedRootChild@CProfiler@@QAEXPAUFunctionInfo@@@Z ; CProfiler::MovedRootChild
; Function compile flags: /Ogtpy
;	COMDAT ?MovedRootChild@CProfiler@@QAEXPAUFunctionInfo@@@Z
_TEXT	SEGMENT
_newRootChild$ = 8					; size = 4
?MovedRootChild@CProfiler@@QAEXPAUFunctionInfo@@@Z PROC	; CProfiler::MovedRootChild, COMDAT

; 236  : void CProfiler::MovedRootChild(FunctionInfo *newRootChild) {

	push	ebx
	mov	ebx, DWORD PTR _newRootChild$[esp]
	push	esi
	push	edi

; 237  : 	rootElementCriticalSection.Enter();

	push	OFFSET ?profiler@@3VCProfiler@@A+44
	call	DWORD PTR __imp__EnterCriticalSection@4

; 238  : 	sharedMemoryHeader->RootFuncInfo->AddOrUpdateChild(newRootChild);

	mov	eax, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	mov	edx, DWORD PTR [eax+36]
	mov	edi, DWORD PTR [ebx]
	mov	esi, DWORD PTR [edx+20]
	mov	eax, edi
	and	eax, esi
	mov	ecx, DWORD PTR [edx+eax*4+24]
	test	ecx, ecx
	je	SHORT $LN14@MovedRootC
	npad	5
$LL8@MovedRootC:
	cmp	DWORD PTR [ecx], edi
	je	SHORT $LN14@MovedRootC
	inc	eax
	and	eax, esi
	mov	ecx, DWORD PTR [edx+eax*4+24]
	test	ecx, ecx
	jne	SHORT $LL8@MovedRootC
$LN14@MovedRootC:
	pop	edi
	pop	esi
	mov	DWORD PTR [edx+eax*4+24], ebx
	pop	ebx

; 239  : 	rootElementCriticalSection.Leave();

	mov	DWORD PTR _newRootChild$[esp-4], OFFSET ?profiler@@3VCProfiler@@A+44
	jmp	DWORD PTR __imp__LeaveCriticalSection@4
?MovedRootChild@CProfiler@@QAEXPAUFunctionInfo@@@Z ENDP	; CProfiler::MovedRootChild
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?QueryInterface@CProfiler@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?QueryInterface@CProfiler@@UAGJABU_GUID@@PAPAX@Z PROC	; CProfiler::QueryInterface, COMDAT

; 40   : HRESULT CProfiler::QueryInterface(const IID &riid, LPVOID *ppv) {

	push	esi

; 41   :   *ppv = nullptr;
; 42   :   if(IsEqualIID(riid, IID_IUnknown) ||
; 43   : 	 IsEqualIID(riid, IID_ICorProfilerCallback) ||
; 44   : 	 IsEqualIID(riid, IID_ICorProfilerCallback2)) {

	mov	esi, DWORD PTR _riid$[esp]
	push	edi
	mov	edi, DWORD PTR _ppv$[esp+4]
	mov	ecx, OFFSET _IID_IUnknown
	mov	edx, esi
	mov	DWORD PTR [edi], 0
	call	_IsEqualGUID
	test	eax, eax
	jne	SHORT $LN1@QueryInter
	mov	ecx, OFFSET _IID_ICorProfilerCallback
	mov	edx, esi
	call	_IsEqualGUID
	test	eax, eax
	jne	SHORT $LN1@QueryInter
	mov	ecx, OFFSET _IID_ICorProfilerCallback2
	mov	edx, esi
	call	_IsEqualGUID
	test	eax, eax
	jne	SHORT $LN1@QueryInter
	pop	edi

; 49   :   }
; 50   :   return E_NOINTERFACE;

	mov	eax, -2147467262			; 80004002H
	pop	esi

; 51   : }

	ret	12					; 0000000cH
$LN1@QueryInter:

; 45   : 
; 46   :     *ppv = this;  

	mov	eax, DWORD PTR _this$[esp+4]
	mov	DWORD PTR [edi], eax
	pop	edi

; 47   : 
; 48   :     return S_OK;

	xor	eax, eax
	pop	esi

; 51   : }

	ret	12					; 0000000cH
?QueryInterface@CProfiler@@UAGJABU_GUID@@PAPAX@Z ENDP	; CProfiler::QueryInterface
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 110  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Message$ = 12						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT

; 105  : 		{	// construct from message string

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, DWORD PTR _this$[esp+12]
	mov	ecx, esi
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	eax, DWORD PTR __Message$[esp+12]
	mov	DWORD PTR __$EHRec$[esp+24], 0
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 106  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@
	mov	eax, esi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp-4]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ PROC ; std::_Iterator_base_aux::_Getmycont, COMDAT
; _this$ = eax

; 458  : 		return _Myaux ? _Myaux->_Getcont() : 0;

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@Getmycont
	mov	eax, DWORD PTR [eax]

; 459  : 		}

	ret	0
$LN3@Getmycont:

; 458  : 		return _Myaux ? _Myaux->_Getcont() : 0;

	xor	eax, eax

; 459  : 		}

	ret	0
?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ENDP ; std::_Iterator_base_aux::_Getmycont
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
__Al$ = 12						; size = 1
??0?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0>::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0>, COMDAT
; _this$ = esi

; 39   : 		{	// construct with specified comparator

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Tmap_trait
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 40   : 		}

	mov	eax, esi
	ret	8

; 39   : 		{	// construct with specified comparator

$LN8@Tmap_trait:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 40   : 		}

	mov	eax, esi
	ret	8
??0?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0>::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
__Al$ = 12						; size = 1
??0?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0>::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0>, COMDAT
; _this$ = esi

; 39   : 		{	// construct with specified comparator

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Tmap_trait@2
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 40   : 		}

	mov	eax, esi
	ret	8

; 39   : 		{	// construct with specified comparator

$LN8@Tmap_trait@2:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 40   : 		}

	mov	eax, esi
	ret	8
??0?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0>::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
__Al$ = 12						; size = 1
??0?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0>::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0>, COMDAT
; _this$ = esi

; 39   : 		{	// construct with specified comparator

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Tmap_trait@3
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 40   : 		}

	mov	eax, esi
	ret	8

; 39   : 		{	// construct with specified comparator

$LN8@Tmap_trait@3:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 40   : 		}

	mov	eax, esi
	ret	8
??0?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0>::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
__Al$ = 12						; size = 1
??0?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>, COMDAT
; _this$ = esi

; 39   : 		{	// construct with specified comparator

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Tmap_trait@4
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 40   : 		}

	mov	eax, esi
	ret	8

; 39   : 		{	// construct with specified comparator

$LN8@Tmap_trait@4:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 40   : 		}

	mov	eax, esi
	ret	8
??0?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >, COMDAT
; _this$ = esi

; 52   : 		{	// construct traits from _Parg and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@Tree_nod
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 53   : 		}

	mov	eax, esi
	ret	4

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN13@Tree_nod:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 53   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >, COMDAT
; _this$ = esi

; 52   : 		{	// construct traits from _Parg and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@Tree_nod@2
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 53   : 		}

	mov	eax, esi
	ret	4

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN13@Tree_nod@2:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 53   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >, COMDAT
; _this$ = esi

; 52   : 		{	// construct traits from _Parg and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@Tree_nod@3
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 53   : 		}

	mov	eax, esi
	ret	4

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN13@Tree_nod@3:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 53   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >, COMDAT
; _this$ = esi

; 52   : 		{	// construct traits from _Parg and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@Tree_nod@4
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 53   : 		}

	mov	eax, esi
	ret	4

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN13@Tree_nod@4:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 53   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = esi

; 321  : 
; 322  :  #if _HAS_ITERATOR_DEBUGGING
; 323  : 			if (this->_Mycont == 0
; 324  : 				|| _Ptr == 0)
; 325  : 				{
; 326  : 				_DEBUG_ERROR("map/set iterator not decrementable");
; 327  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 328  : 				}
; 329  :  #else
; 330  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	cmp	DWORD PTR [esi], 0
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	jne	SHORT $LN12@Dec@2
	call	edi
$LN12@Dec@2:

; 331  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 332  : 
; 333  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LN9@Dec@2

; 334  : 			{
; 335  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+4], eax

; 336  :    				if (_Isnil(_Ptr))

	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LN1@Dec@2
$LN52@Dec@2:

; 337  : #if _HAS_ITERATOR_DEBUGGING
; 338  : 				{
; 339  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 340  : 					_SCL_SECURE_OUT_OF_RANGE;
; 341  : 				}
; 342  : #elif _SECURE_SCL
; 343  : 				{
; 344  :     				_SCL_SECURE_OUT_OF_RANGE;

	call	edi
	pop	edi

; 373  : 				}
; 374  : 			}

	ret	0
$LN9@Dec@2:

; 345  : 				}
; 346  : #else
; 347  : 				return;	// begin() shouldn't be incremented, don't move
; 348  : #endif
; 349  : 			}
; 350  : 			else if (!_Isnil(_Left(_Ptr)))

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN49@Dec@2

; 351  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN30@Dec@2
	npad	8
$LL31@Dec@2:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL31@Dec@2
$LN30@Dec@2:
	mov	DWORD PTR [esi+4], ecx
	pop	edi

; 373  : 				}
; 374  : 			}

	ret	0
$LN49@Dec@2:

; 352  : 			else
; 353  : 				{	// climb looking for left subtree
; 354  : 				_Nodeptr _Pnode;
; 355  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 356  : 					&& _Ptr == _Left(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN3@Dec@2
	npad	7
$LL4@Dec@2:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Dec@2

; 357  : 					_Ptr = _Pnode;	// ==> parent while left subtree

	mov	DWORD PTR [esi+4], eax
	mov	edx, eax
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL4@Dec@2
$LN3@Dec@2:

; 358  : 				if (_Isnil(_Ptr))

	mov	ecx, DWORD PTR [esi+4]
	cmp	BYTE PTR [ecx+21], 0

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move
; 370  :  #endif
; 371  : 				else

	jne	SHORT $LN52@Dec@2

; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [esi+4], eax
$LN1@Dec@2:
	pop	edi

; 373  : 				}
; 374  : 			}

	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = esi

; 321  : 
; 322  :  #if _HAS_ITERATOR_DEBUGGING
; 323  : 			if (this->_Mycont == 0
; 324  : 				|| _Ptr == 0)
; 325  : 				{
; 326  : 				_DEBUG_ERROR("map/set iterator not decrementable");
; 327  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 328  : 				}
; 329  :  #else
; 330  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	cmp	DWORD PTR [esi], 0
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	jne	SHORT $LN12@Dec@3
	call	edi
$LN12@Dec@3:

; 331  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 332  : 
; 333  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LN9@Dec@3

; 334  : 			{
; 335  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+4], eax

; 336  :    				if (_Isnil(_Ptr))

	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LN1@Dec@3
$LN52@Dec@3:

; 337  : #if _HAS_ITERATOR_DEBUGGING
; 338  : 				{
; 339  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 340  : 					_SCL_SECURE_OUT_OF_RANGE;
; 341  : 				}
; 342  : #elif _SECURE_SCL
; 343  : 				{
; 344  :     				_SCL_SECURE_OUT_OF_RANGE;

	call	edi
	pop	edi

; 373  : 				}
; 374  : 			}

	ret	0
$LN9@Dec@3:

; 345  : 				}
; 346  : #else
; 347  : 				return;	// begin() shouldn't be incremented, don't move
; 348  : #endif
; 349  : 			}
; 350  : 			else if (!_Isnil(_Left(_Ptr)))

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN49@Dec@3

; 351  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN30@Dec@3
	npad	8
$LL31@Dec@3:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL31@Dec@3
$LN30@Dec@3:
	mov	DWORD PTR [esi+4], ecx
	pop	edi

; 373  : 				}
; 374  : 			}

	ret	0
$LN49@Dec@3:

; 352  : 			else
; 353  : 				{	// climb looking for left subtree
; 354  : 				_Nodeptr _Pnode;
; 355  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 356  : 					&& _Ptr == _Left(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN3@Dec@3
	npad	7
$LL4@Dec@3:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Dec@3

; 357  : 					_Ptr = _Pnode;	// ==> parent while left subtree

	mov	DWORD PTR [esi+4], eax
	mov	edx, eax
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL4@Dec@3
$LN3@Dec@3:

; 358  : 				if (_Isnil(_Ptr))

	mov	ecx, DWORD PTR [esi+4]
	cmp	BYTE PTR [ecx+21], 0

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move
; 370  :  #endif
; 371  : 				else

	jne	SHORT $LN52@Dec@3

; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [esi+4], eax
$LN1@Dec@3:
	pop	edi

; 373  : 				}
; 374  : 			}

	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = esi

; 321  : 
; 322  :  #if _HAS_ITERATOR_DEBUGGING
; 323  : 			if (this->_Mycont == 0
; 324  : 				|| _Ptr == 0)
; 325  : 				{
; 326  : 				_DEBUG_ERROR("map/set iterator not decrementable");
; 327  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 328  : 				}
; 329  :  #else
; 330  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	cmp	DWORD PTR [esi], 0
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	jne	SHORT $LN12@Dec@4
	call	edi
$LN12@Dec@4:

; 331  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 332  : 
; 333  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LN9@Dec@4

; 334  : 			{
; 335  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+4], eax

; 336  :    				if (_Isnil(_Ptr))

	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LN1@Dec@4
$LN52@Dec@4:

; 337  : #if _HAS_ITERATOR_DEBUGGING
; 338  : 				{
; 339  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 340  : 					_SCL_SECURE_OUT_OF_RANGE;
; 341  : 				}
; 342  : #elif _SECURE_SCL
; 343  : 				{
; 344  :     				_SCL_SECURE_OUT_OF_RANGE;

	call	edi
	pop	edi

; 373  : 				}
; 374  : 			}

	ret	0
$LN9@Dec@4:

; 345  : 				}
; 346  : #else
; 347  : 				return;	// begin() shouldn't be incremented, don't move
; 348  : #endif
; 349  : 			}
; 350  : 			else if (!_Isnil(_Left(_Ptr)))

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN49@Dec@4

; 351  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN30@Dec@4
	npad	8
$LL31@Dec@4:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL31@Dec@4
$LN30@Dec@4:
	mov	DWORD PTR [esi+4], ecx
	pop	edi

; 373  : 				}
; 374  : 			}

	ret	0
$LN49@Dec@4:

; 352  : 			else
; 353  : 				{	// climb looking for left subtree
; 354  : 				_Nodeptr _Pnode;
; 355  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 356  : 					&& _Ptr == _Left(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN3@Dec@4
	npad	7
$LL4@Dec@4:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Dec@4

; 357  : 					_Ptr = _Pnode;	// ==> parent while left subtree

	mov	DWORD PTR [esi+4], eax
	mov	edx, eax
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL4@Dec@4
$LN3@Dec@4:

; 358  : 				if (_Isnil(_Ptr))

	mov	ecx, DWORD PTR [esi+4]
	cmp	BYTE PTR [ecx+21], 0

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move
; 370  :  #endif
; 371  : 				else

	jne	SHORT $LN52@Dec@4

; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [esi+4], eax
$LN1@Dec@4:
	pop	edi

; 373  : 				}
; 374  : 			}

	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >, COMDAT
; _this$ = esi

; 78   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@Tree_ptr
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 79   : 		}

	mov	eax, esi
	ret	4

; 78   : 		{	// construct base, and allocator from _Al

$LN18@Tree_ptr:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 79   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_ptr@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >, COMDAT
; _this$ = esi

; 78   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@Tree_ptr@2
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 79   : 		}

	mov	eax, esi
	ret	4

; 78   : 		{	// construct base, and allocator from _Al

$LN18@Tree_ptr@2:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 79   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >, COMDAT
; _this$ = esi

; 78   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@Tree_ptr@3
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 79   : 		}

	mov	eax, esi
	ret	4

; 78   : 		{	// construct base, and allocator from _Al

$LN18@Tree_ptr@3:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 79   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_ptr@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >, COMDAT
; _this$ = esi

; 78   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@Tree_ptr@4
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 79   : 		}

	mov	eax, esi
	ret	4

; 78   : 		{	// construct base, and allocator from _Al

$LN18@Tree_ptr@4:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 79   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_ptr@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = eax

; 286  : 			{	// predecrement

	push	esi
	mov	esi, eax

; 287  : 			_Dec();

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::_Dec

; 288  : 			return (*this);

	mov	eax, esi
	pop	esi

; 289  : 			}

	ret	0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = esi

; 250  : 
; 251  :  #if _HAS_ITERATOR_DEBUGGING
; 252  : 			if (this->_Mycont == 0
; 253  : 				|| _Ptr == 0
; 254  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 255  : 				{
; 256  : 				_DEBUG_ERROR("map/set iterator not dereferencable");
; 257  : 				_SCL_SECURE_OUT_OF_RANGE;
; 258  : 				}
; 259  :  #else
; 260  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	test	eax, eax
	jne	SHORT $LN21@operator@21
	call	edi

; 261  : 			_SCL_SECURE_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN15@operator@21
$LN21@operator@21:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN16@operator@21
$LN15@operator@21:
	xor	eax, eax
$LN16@operator@21:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN3@operator@21
	call	edi
$LN3@operator@21:

; 262  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 263  : 
; 264  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH
	pop	edi

; 265  : 			}

	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = eax

; 217  : 			{	// construct with null node pointer

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0

; 218  : 			}

	ret	0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = eax

; 286  : 			{	// predecrement

	push	esi
	mov	esi, eax

; 287  : 			_Dec();

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::_Dec

; 288  : 			return (*this);

	mov	eax, esi
	pop	esi

; 289  : 			}

	ret	0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBIPAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBIPAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = esi

; 250  : 
; 251  :  #if _HAS_ITERATOR_DEBUGGING
; 252  : 			if (this->_Mycont == 0
; 253  : 				|| _Ptr == 0
; 254  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 255  : 				{
; 256  : 				_DEBUG_ERROR("map/set iterator not dereferencable");
; 257  : 				_SCL_SECURE_OUT_OF_RANGE;
; 258  : 				}
; 259  :  #else
; 260  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	test	eax, eax
	jne	SHORT $LN21@operator@22
	call	edi

; 261  : 			_SCL_SECURE_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN15@operator@22
$LN21@operator@22:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN16@operator@22
$LN15@operator@22:
	xor	eax, eax
$LN16@operator@22:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN3@operator@22
	call	edi
$LN3@operator@22:

; 262  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 263  : 
; 264  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH
	pop	edi

; 265  : 			}

	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBIPAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator--, COMDAT
; _this$ = eax

; 286  : 			{	// predecrement

	push	esi
	mov	esi, eax

; 287  : 			_Dec();

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Dec

; 288  : 			return (*this);

	mov	eax, esi
	pop	esi

; 289  : 			}

	ret	0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator--
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBIH@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBIH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator*, COMDAT
; _this$ = esi

; 250  : 
; 251  :  #if _HAS_ITERATOR_DEBUGGING
; 252  : 			if (this->_Mycont == 0
; 253  : 				|| _Ptr == 0
; 254  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 255  : 				{
; 256  : 				_DEBUG_ERROR("map/set iterator not dereferencable");
; 257  : 				_SCL_SECURE_OUT_OF_RANGE;
; 258  : 				}
; 259  :  #else
; 260  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	test	eax, eax
	jne	SHORT $LN21@operator@23
	call	edi

; 261  : 			_SCL_SECURE_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN15@operator@23
$LN21@operator@23:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN16@operator@23
$LN15@operator@23:
	xor	eax, eax
$LN16@operator@23:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN3@operator@23
	call	edi
$LN3@operator@23:

; 262  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 263  : 
; 264  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH
	pop	edi

; 265  : 			}

	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBIH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >, COMDAT
; _this$ = esi

; 97   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN23@Tree_val
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 98   : 		}

	mov	eax, esi
	ret	4

; 97   : 		{	// construct base, and allocator from _Al

$LN23@Tree_val:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 98   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_val@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Init, COMDAT
; _this$ = esi

; 1178 : 		_Myhead = _Buynode();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Buynode
	mov	DWORD PTR [esi+24], eax

; 1179 : 		_Isnil(_Myhead) = true;

	mov	BYTE PTR [eax+29], 1

; 1180 : 		_Root() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax

; 1181 : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax

; 1182 : 		_Mysize = 0;

	mov	DWORD PTR [esi+28], 0

; 1183 : 		}

	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Init
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >, COMDAT
; _this$ = esi

; 97   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN23@Tree_val@2
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 98   : 		}

	mov	eax, esi
	ret	4

; 97   : 		{	// construct base, and allocator from _Al

$LN23@Tree_val@2:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 98   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_val@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Lbound, COMDAT
; _this$ = eax
; __Keyval$ = edx

; 1264 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [eax+24]
	mov	ecx, DWORD PTR [eax+4]

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN3@Lbound@2
	mov	edx, DWORD PTR [edx]
	npad	2
$LL4@Lbound@2:

; 1268 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	cmp	DWORD PTR [ecx+12], edx
	jae	SHORT $LN2@Lbound@2

; 1269 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]

; 1270 : 			else

	jmp	SHORT $LN1@Lbound@2
$LN2@Lbound@2:

; 1271 : 				{	// _Pnode not less than _Keyval, remember it
; 1272 : 				_Wherenode = _Pnode;

	mov	eax, ecx

; 1273 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]
$LN1@Lbound@2:

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL4@Lbound@2
$LN3@Lbound@2:

; 1274 : 				}
; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate
; 1277 : 		}

	ret	0
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Lbound
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Init, COMDAT
; _this$ = esi

; 1178 : 		_Myhead = _Buynode();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Buynode
	mov	DWORD PTR [esi+24], eax

; 1179 : 		_Isnil(_Myhead) = true;

	mov	BYTE PTR [eax+21], 1

; 1180 : 		_Root() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax

; 1181 : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax

; 1182 : 		_Mysize = 0;

	mov	DWORD PTR [esi+28], 0

; 1183 : 		}

	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Init
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
__Keyval$ = 12						; size = 4
?_Eqrange@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Eqrange, COMDAT
; ___$ReturnUdt$ = eax

; 1132 : 		{	// find leftmost node not less than _Keyval

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]

; 1133 : 		_Nodeptr _Pnode = _Root();

	mov	edx, DWORD PTR [ebp+24]
	mov	ecx, DWORD PTR [edx+4]

; 1134 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1135 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails
; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	push	esi
	push	edi
	mov	ebx, edx
	jne	SHORT $LN8@Eqrange
	mov	esi, DWORD PTR __Keyval$[esp+12]
	mov	edi, DWORD PTR [esi]
	npad	4
$LL9@Eqrange:

; 1138 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	mov	esi, DWORD PTR [ecx+12]
	cmp	esi, edi
	jae	SHORT $LN7@Eqrange

; 1139 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]

; 1140 : 			else

	jmp	SHORT $LN6@Eqrange
$LN7@Eqrange:

; 1141 : 				{	// _Pnode not less than _Keyval, remember it
; 1142 : 				if (_Isnil(_Hinode)
; 1143 : 						&& _DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN5@Eqrange
	cmp	edi, esi
	jae	SHORT $LN5@Eqrange

; 1144 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

	mov	edx, ecx
$LN5@Eqrange:

; 1145 : 				_Lonode = _Pnode;

	mov	ebx, ecx

; 1146 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]
$LN6@Eqrange:

; 1134 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1135 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails
; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL9@Eqrange
$LN8@Eqrange:

; 1147 : 				}
; 1148 : 
; 1149 : 		_Pnode = _Isnil(_Hinode) ? _Root()
; 1150 : 			: _Left(_Hinode);	// continue scan for upper bound

	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN12@Eqrange
	mov	ecx, DWORD PTR [ebp+24]
	mov	ecx, DWORD PTR [ecx+4]
	jmp	SHORT $LN13@Eqrange
$LN12@Eqrange:
	mov	ecx, DWORD PTR [edx]
$LN13@Eqrange:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN3@Eqrange
	mov	esi, DWORD PTR __Keyval$[esp+12]
	mov	esi, DWORD PTR [esi]
	npad	2
$LL4@Eqrange:

; 1152 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	esi, DWORD PTR [ecx+12]
	jae	SHORT $LN2@Eqrange

; 1153 : 				{	// _Pnode greater than _Keyval, remember it
; 1154 : 				_Hinode = _Pnode;

	mov	edx, ecx

; 1155 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]

; 1156 : 				}
; 1157 : 			else

	jmp	SHORT $LN1@Eqrange
$LN2@Eqrange:

; 1158 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]
$LN1@Eqrange:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL4@Eqrange
$LN3@Eqrange:

; 1159 : 
; 1160 : 		iterator _First = _TREE_ITERATOR(_Lonode);

	mov	ecx, DWORD PTR [ebp]

; 1161 : 		iterator _Last = _TREE_ITERATOR(_Hinode);
; 1162 : 		return (_Pairii(_First, _Last));
; 1163 : 		}

	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	pop	ebx
	ret	8
?_Eqrange@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Eqrange
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >, COMDAT
; _this$ = esi

; 97   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN23@Tree_val@3
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 98   : 		}

	mov	eax, esi
	ret	4

; 97   : 		{	// construct base, and allocator from _Al

$LN23@Tree_val@3:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 98   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_val@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABI@Z
_TEXT	SEGMENT
?_Lbound@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Lbound, COMDAT
; _this$ = eax
; __Keyval$ = edx

; 1264 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [eax+24]
	mov	ecx, DWORD PTR [eax+4]

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN3@Lbound@3
	mov	edx, DWORD PTR [edx]
	npad	2
$LL4@Lbound@3:

; 1268 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	cmp	DWORD PTR [ecx+12], edx
	jae	SHORT $LN2@Lbound@3

; 1269 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]

; 1270 : 			else

	jmp	SHORT $LN1@Lbound@3
$LN2@Lbound@3:

; 1271 : 				{	// _Pnode not less than _Keyval, remember it
; 1272 : 				_Wherenode = _Pnode;

	mov	eax, ecx

; 1273 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]
$LN1@Lbound@3:

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL4@Lbound@3
$LN3@Lbound@3:

; 1274 : 				}
; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate
; 1277 : 		}

	ret	0
?_Lbound@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Lbound
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Init, COMDAT
; _this$ = esi

; 1178 : 		_Myhead = _Buynode();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Buynode
	mov	DWORD PTR [esi+24], eax

; 1179 : 		_Isnil(_Myhead) = true;

	mov	BYTE PTR [eax+21], 1

; 1180 : 		_Root() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax

; 1181 : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax

; 1182 : 		_Mysize = 0;

	mov	DWORD PTR [esi+28], 0

; 1183 : 		}

	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Init
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
__Keyval$ = 12						; size = 4
?_Eqrange@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Eqrange, COMDAT
; ___$ReturnUdt$ = eax

; 1132 : 		{	// find leftmost node not less than _Keyval

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]

; 1133 : 		_Nodeptr _Pnode = _Root();

	mov	edx, DWORD PTR [ebp+24]
	mov	ecx, DWORD PTR [edx+4]

; 1134 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1135 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails
; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	push	esi
	push	edi
	mov	ebx, edx
	jne	SHORT $LN8@Eqrange@2
	mov	esi, DWORD PTR __Keyval$[esp+12]
	mov	edi, DWORD PTR [esi]
	npad	4
$LL9@Eqrange@2:

; 1138 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	mov	esi, DWORD PTR [ecx+12]
	cmp	esi, edi
	jae	SHORT $LN7@Eqrange@2

; 1139 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]

; 1140 : 			else

	jmp	SHORT $LN6@Eqrange@2
$LN7@Eqrange@2:

; 1141 : 				{	// _Pnode not less than _Keyval, remember it
; 1142 : 				if (_Isnil(_Hinode)
; 1143 : 						&& _DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN5@Eqrange@2
	cmp	edi, esi
	jae	SHORT $LN5@Eqrange@2

; 1144 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

	mov	edx, ecx
$LN5@Eqrange@2:

; 1145 : 				_Lonode = _Pnode;

	mov	ebx, ecx

; 1146 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]
$LN6@Eqrange@2:

; 1134 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1135 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails
; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL9@Eqrange@2
$LN8@Eqrange@2:

; 1147 : 				}
; 1148 : 
; 1149 : 		_Pnode = _Isnil(_Hinode) ? _Root()
; 1150 : 			: _Left(_Hinode);	// continue scan for upper bound

	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN12@Eqrange@2
	mov	ecx, DWORD PTR [ebp+24]
	mov	ecx, DWORD PTR [ecx+4]
	jmp	SHORT $LN13@Eqrange@2
$LN12@Eqrange@2:
	mov	ecx, DWORD PTR [edx]
$LN13@Eqrange@2:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN3@Eqrange@2
	mov	esi, DWORD PTR __Keyval$[esp+12]
	mov	esi, DWORD PTR [esi]
	npad	2
$LL4@Eqrange@2:

; 1152 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	esi, DWORD PTR [ecx+12]
	jae	SHORT $LN2@Eqrange@2

; 1153 : 				{	// _Pnode greater than _Keyval, remember it
; 1154 : 				_Hinode = _Pnode;

	mov	edx, ecx

; 1155 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]

; 1156 : 				}
; 1157 : 			else

	jmp	SHORT $LN1@Eqrange@2
$LN2@Eqrange@2:

; 1158 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]
$LN1@Eqrange@2:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL4@Eqrange@2
$LN3@Eqrange@2:

; 1159 : 
; 1160 : 		iterator _First = _TREE_ITERATOR(_Lonode);

	mov	ecx, DWORD PTR [ebp]

; 1161 : 		iterator _Last = _TREE_ITERATOR(_Hinode);
; 1162 : 		return (_Pairii(_First, _Last));
; 1163 : 		}

	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	pop	ebx
	ret	8
?_Eqrange@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Eqrange
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >, COMDAT
; _this$ = esi

; 97   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN23@Tree_val@4
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 98   : 		}

	mov	eax, esi
	ret	4

; 97   : 		{	// construct base, and allocator from _Al

$LN23@Tree_val@4:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 98   : 		}

	mov	eax, esi
	ret	4
??0?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIH@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABI@Z
_TEXT	SEGMENT
?_Lbound@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lbound, COMDAT
; _this$ = eax
; __Keyval$ = edx

; 1264 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [eax+24]
	mov	ecx, DWORD PTR [eax+4]

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN3@Lbound@4
	mov	edx, DWORD PTR [edx]
	npad	2
$LL4@Lbound@4:

; 1268 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	cmp	DWORD PTR [ecx+12], edx
	jae	SHORT $LN2@Lbound@4

; 1269 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]

; 1270 : 			else

	jmp	SHORT $LN1@Lbound@4
$LN2@Lbound@4:

; 1271 : 				{	// _Pnode not less than _Keyval, remember it
; 1272 : 				_Wherenode = _Pnode;

	mov	eax, ecx

; 1273 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]
$LN1@Lbound@4:

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL4@Lbound@4
$LN3@Lbound@4:

; 1274 : 				}
; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate
; 1277 : 		}

	ret	0
?_Lbound@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lbound
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Init, COMDAT
; _this$ = esi

; 1178 : 		_Myhead = _Buynode();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Buynode
	mov	DWORD PTR [esi+24], eax

; 1179 : 		_Isnil(_Myhead) = true;

	mov	BYTE PTR [eax+21], 1

; 1180 : 		_Root() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax

; 1181 : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax

; 1182 : 		_Mysize = 0;

	mov	DWORD PTR [esi+28], 0

; 1183 : 		}

	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Init
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
__Keyval$ = 12						; size = 4
?_Eqrange@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Eqrange, COMDAT
; ___$ReturnUdt$ = eax

; 1132 : 		{	// find leftmost node not less than _Keyval

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]

; 1133 : 		_Nodeptr _Pnode = _Root();

	mov	edx, DWORD PTR [ebp+24]
	mov	ecx, DWORD PTR [edx+4]

; 1134 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1135 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails
; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	push	esi
	push	edi
	mov	ebx, edx
	jne	SHORT $LN8@Eqrange@3
	mov	esi, DWORD PTR __Keyval$[esp+12]
	mov	edi, DWORD PTR [esi]
	npad	4
$LL9@Eqrange@3:

; 1138 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	mov	esi, DWORD PTR [ecx+12]
	cmp	esi, edi
	jae	SHORT $LN7@Eqrange@3

; 1139 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]

; 1140 : 			else

	jmp	SHORT $LN6@Eqrange@3
$LN7@Eqrange@3:

; 1141 : 				{	// _Pnode not less than _Keyval, remember it
; 1142 : 				if (_Isnil(_Hinode)
; 1143 : 						&& _DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN5@Eqrange@3
	cmp	edi, esi
	jae	SHORT $LN5@Eqrange@3

; 1144 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

	mov	edx, ecx
$LN5@Eqrange@3:

; 1145 : 				_Lonode = _Pnode;

	mov	ebx, ecx

; 1146 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]
$LN6@Eqrange@3:

; 1134 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1135 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails
; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL9@Eqrange@3
$LN8@Eqrange@3:

; 1147 : 				}
; 1148 : 
; 1149 : 		_Pnode = _Isnil(_Hinode) ? _Root()
; 1150 : 			: _Left(_Hinode);	// continue scan for upper bound

	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN12@Eqrange@3
	mov	ecx, DWORD PTR [ebp+24]
	mov	ecx, DWORD PTR [ecx+4]
	jmp	SHORT $LN13@Eqrange@3
$LN12@Eqrange@3:
	mov	ecx, DWORD PTR [edx]
$LN13@Eqrange@3:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN3@Eqrange@3
	mov	esi, DWORD PTR __Keyval$[esp+12]
	mov	esi, DWORD PTR [esi]
	npad	2
$LL4@Eqrange@3:

; 1152 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	esi, DWORD PTR [ecx+12]
	jae	SHORT $LN2@Eqrange@3

; 1153 : 				{	// _Pnode greater than _Keyval, remember it
; 1154 : 				_Hinode = _Pnode;

	mov	edx, ecx

; 1155 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]

; 1156 : 				}
; 1157 : 			else

	jmp	SHORT $LN1@Eqrange@3
$LN2@Eqrange@3:

; 1158 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]
$LN1@Eqrange@3:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL4@Eqrange@3
$LN3@Eqrange@3:

; 1159 : 
; 1160 : 		iterator _First = _TREE_ITERATOR(_Lonode);

	mov	ecx, DWORD PTR [ebp]

; 1161 : 		iterator _Last = _TREE_ITERATOR(_Hinode);
; 1162 : 		return (_Pairii(_First, _Last));
; 1163 : 		}

	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	pop	ebx
	ret	8
?_Eqrange@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Eqrange
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator::operator--, COMDAT
; _this$ = eax

; 487  : 			{	// predecrement

	push	esi
	mov	esi, eax

; 488  : 			--(*(const_iterator *)this);

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::_Dec

; 489  : 			return (*this);

	mov	eax, esi
	pop	esi

; 490  : 			}

	ret	0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator::operator--
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator::operator*, COMDAT
; _this$ = esi

; 465  : 			return ((reference)**(const_iterator *)this);

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	test	eax, eax
	jne	SHORT $LN23@operator@24
	call	edi
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN17@operator@24
$LN23@operator@24:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN18@operator@24
$LN17@operator@24:
	xor	eax, eax
$LN18@operator@24:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN5@operator@24
	call	edi
$LN5@operator@24:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH
	pop	edi

; 466  : 			}

	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator--, COMDAT
; _this$ = eax

; 487  : 			{	// predecrement

	push	esi
	mov	esi, eax

; 488  : 			--(*(const_iterator *)this);

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::_Dec

; 489  : 			return (*this);

	mov	eax, esi
	pop	esi

; 490  : 			}

	ret	0
??Fiterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator--
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBIPAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBIPAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator*, COMDAT
; _this$ = esi

; 465  : 			return ((reference)**(const_iterator *)this);

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	test	eax, eax
	jne	SHORT $LN23@operator@25
	call	edi
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN17@operator@25
$LN23@operator@25:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN18@operator@25
$LN17@operator@25:
	xor	eax, eax
$LN18@operator@25:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN5@operator@25
	call	edi
$LN5@operator@25:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH
	pop	edi

; 466  : 			}

	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBIPAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator--, COMDAT
; _this$ = eax

; 487  : 			{	// predecrement

	push	esi
	mov	esi, eax

; 488  : 			--(*(const_iterator *)this);

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Dec

; 489  : 			return (*this);

	mov	eax, esi
	pop	esi

; 490  : 			}

	ret	0
??Fiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator--
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBIH@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBIH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator*, COMDAT
; _this$ = esi

; 465  : 			return ((reference)**(const_iterator *)this);

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	test	eax, eax
	jne	SHORT $LN23@operator@26
	call	edi
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN17@operator@26
$LN23@operator@26:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN18@operator@26
$LN17@operator@26:
	xor	eax, eax
$LN18@operator@26:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN5@operator@26
	call	edi
$LN5@operator@26:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH
	pop	edi

; 466  : 			}

	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBIH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator*
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >, COMDAT

; 509  : 		{	// construct empty tree

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, DWORD PTR _this$[esp+12]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN28@Tree
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN29@Tree
$LN28@Tree:
	xor	eax, eax
$LN29@Tree:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0

; 510  : 		_Init();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Buynode

; 511  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR [esi+24], eax
	mov	BYTE PTR [eax+29], 1
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax
	mov	DWORD PTR [esi+28], 0
	mov	eax, esi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
?equal_range@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::equal_range, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Keyval$ = eax

; 1023 : 		{	// find range equivalent to _Keyval in mutable tree

	push	ecx

; 1024 : 		return (_Eqrange(_Keyval));

	push	eax
	push	ecx
	mov	eax, esi
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Eqrange
	mov	eax, esi
	pop	ecx

; 1025 : 		}

	ret	0
?equal_range@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::equal_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::lower_bound, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = eax

; 1004 : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

	mov	edx, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [edx+4]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN5@lower_boun@2
	push	edi
	mov	edi, DWORD PTR __Keyval$[esp]
	mov	edi, DWORD PTR [edi]
$LL6@lower_boun@2:
	cmp	DWORD PTR [ecx+12], edi
	jae	SHORT $LN4@lower_boun@2
	mov	ecx, DWORD PTR [ecx+8]
	jmp	SHORT $LN3@lower_boun@2
$LN4@lower_boun@2:
	mov	edx, ecx
	mov	ecx, DWORD PTR [ecx]
$LN3@lower_boun@2:
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL6@lower_boun@2
	pop	edi
$LN5@lower_boun@2:
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 1005 : 		}

	ret	4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::lower_bound
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >, COMDAT

; 509  : 		{	// construct empty tree

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, DWORD PTR _this$[esp+12]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN28@Tree@2
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN29@Tree@2
$LN28@Tree@2:
	xor	eax, eax
$LN29@Tree@2:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0

; 510  : 		_Init();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Buynode

; 511  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR [esi+24], eax
	mov	BYTE PTR [eax+21], 1
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax
	mov	DWORD PTR [esi+28], 0
	mov	eax, esi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z
_TEXT	SEGMENT
?equal_range@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::equal_range, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Keyval$ = eax

; 1023 : 		{	// find range equivalent to _Keyval in mutable tree

	push	ecx

; 1024 : 		return (_Eqrange(_Keyval));

	push	eax
	push	ecx
	mov	eax, esi
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Eqrange
	mov	eax, esi
	pop	ecx

; 1025 : 		}

	ret	0
?equal_range@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::equal_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::lower_bound, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = eax

; 1004 : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

	mov	edx, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [edx+4]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN5@lower_boun@3
	push	edi
	mov	edi, DWORD PTR __Keyval$[esp]
	mov	edi, DWORD PTR [edi]
$LL6@lower_boun@3:
	cmp	DWORD PTR [ecx+12], edi
	jae	SHORT $LN4@lower_boun@3
	mov	ecx, DWORD PTR [ecx+8]
	jmp	SHORT $LN3@lower_boun@3
$LN4@lower_boun@3:
	mov	edx, ecx
	mov	ecx, DWORD PTR [ecx]
$LN3@lower_boun@3:
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL6@lower_boun@3
	pop	edi
$LN5@lower_boun@3:
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 1005 : 		}

	ret	4
?lower_bound@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::lower_bound
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >, COMDAT

; 509  : 		{	// construct empty tree

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, DWORD PTR _this$[esp+12]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN28@Tree@3
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN29@Tree@3
$LN28@Tree@3:
	xor	eax, eax
$LN29@Tree@3:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0

; 510  : 		_Init();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Buynode

; 511  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR [esi+24], eax
	mov	BYTE PTR [eax+21], 1
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax
	mov	DWORD PTR [esi+28], 0
	mov	eax, esi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z
_TEXT	SEGMENT
?equal_range@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::equal_range, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Keyval$ = eax

; 1023 : 		{	// find range equivalent to _Keyval in mutable tree

	push	ecx

; 1024 : 		return (_Eqrange(_Keyval));

	push	eax
	push	ecx
	mov	eax, esi
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Eqrange
	mov	eax, esi
	pop	ecx

; 1025 : 		}

	ret	0
?equal_range@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::equal_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::lower_bound, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = eax

; 1004 : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

	mov	edx, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [edx+4]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN5@lower_boun@4
	push	edi
	mov	edi, DWORD PTR __Keyval$[esp]
	mov	edi, DWORD PTR [edi]
$LL6@lower_boun@4:
	cmp	DWORD PTR [ecx+12], edi
	jae	SHORT $LN4@lower_boun@4
	mov	ecx, DWORD PTR [ecx+8]
	jmp	SHORT $LN3@lower_boun@4
$LN4@lower_boun@4:
	mov	edx, ecx
	mov	ecx, DWORD PTR [ecx]
$LN3@lower_boun@4:
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL6@lower_boun@4
	pop	edi
$LN5@lower_boun@4:
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 1005 : 		}

	ret	4
?lower_bound@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::lower_bound
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >, COMDAT

; 509  : 		{	// construct empty tree

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, DWORD PTR _this$[esp+12]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN28@Tree@4
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN29@Tree@4
$LN28@Tree@4:
	xor	eax, eax
$LN29@Tree@4:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0

; 510  : 		_Init();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Buynode

; 511  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR [esi+24], eax
	mov	BYTE PTR [eax+21], 1
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax
	mov	DWORD PTR [esi+28], 0
	mov	eax, esi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBIPAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBIPAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator->, COMDAT
; _this$ = esi

; 470  : 			return (&**this);

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	test	eax, eax
	jne	SHORT $LN25@operator@27
	call	edi
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN19@operator@27
$LN25@operator@27:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN20@operator@27
$LN19@operator@27:
	xor	eax, eax
$LN20@operator@27:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN7@operator@27
	call	edi
$LN7@operator@27:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH
	pop	edi

; 471  : 			}

	ret	0
??Citerator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBIPAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBIH@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBIH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator->, COMDAT
; _this$ = esi

; 470  : 			return (&**this);

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	test	eax, eax
	jne	SHORT $LN25@operator@28
	call	edi
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN19@operator@28
$LN25@operator@28:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN20@operator@28
$LN19@operator@28:
	xor	eax, eax
$LN20@operator@28:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN7@operator@28
	call	edi
$LN7@operator@28:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH
	pop	edi

; 471  : 			}

	ret	0
??Citerator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBIH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
__Where$ = -20						; size = 8
$T139699 = -12						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::find, COMDAT
; _this$ = edi

; 978  : 		iterator _Where = lower_bound(_Keyval);

	mov	ecx, DWORD PTR [edi+24]
	mov	eax, DWORD PTR [ecx+4]
	sub	esp, 24					; 00000018H
	cmp	BYTE PTR [eax+21], 0
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR __Keyval$[esp+28]
	push	esi
	mov	esi, ecx
	jne	SHORT $LN9@find@2
	mov	ecx, DWORD PTR [ebp]
	npad	5
$LL10@find@2:
	cmp	DWORD PTR [eax+12], ecx
	jae	SHORT $LN8@find@2
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN7@find@2
$LN8@find@2:
	mov	esi, eax
	mov	eax, DWORD PTR [eax]
$LN7@find@2:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@find@2
$LN9@find@2:
	mov	eax, DWORD PTR [edi]

; 979  : 		return (_Where == end()
; 980  : 			|| _DEBUG_LT_PRED(this->comp,
; 981  : 				_Keyval, _Key(_Where._Mynode()))
; 982  : 					? end() : _Where);

	mov	ebx, DWORD PTR [edi+24]
	mov	DWORD PTR __Where$[esp+40], esi
	mov	DWORD PTR __Where$[esp+36], eax
	test	eax, eax
	je	SHORT $LN68@find@2
	cmp	eax, eax
	je	SHORT $LN67@find@2
$LN68@find@2:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN67@find@2:
	cmp	esi, ebx
	je	SHORT $LN3@find@2
	mov	eax, DWORD PTR [ebp]
	cmp	eax, DWORD PTR [esi+12]
	jb	SHORT $LN3@find@2
	lea	eax, DWORD PTR __Where$[esp+36]
	jmp	SHORT $LN4@find@2
$LN3@find@2:
	mov	ecx, DWORD PTR [edi+24]
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR $T139699[esp+40], ecx
	mov	DWORD PTR $T139699[esp+36], edx
	lea	eax, DWORD PTR $T139699[esp+36]
$LN4@find@2:
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[esp+32]
	mov	eax, DWORD PTR [eax+4]

; 983  : 		}

	pop	esi
	pop	ebp
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx], edx
	mov	eax, ecx
	pop	ebx
	add	esp, 24					; 00000018H
	ret	8
?find@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::find
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z
_TEXT	SEGMENT
__Where$ = -20						; size = 8
$T140041 = -12						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::find, COMDAT
; _this$ = edi

; 978  : 		iterator _Where = lower_bound(_Keyval);

	mov	ecx, DWORD PTR [edi+24]
	mov	eax, DWORD PTR [ecx+4]
	sub	esp, 24					; 00000018H
	cmp	BYTE PTR [eax+21], 0
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR __Keyval$[esp+28]
	push	esi
	mov	esi, ecx
	jne	SHORT $LN9@find@3
	mov	ecx, DWORD PTR [ebp]
	npad	5
$LL10@find@3:
	cmp	DWORD PTR [eax+12], ecx
	jae	SHORT $LN8@find@3
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN7@find@3
$LN8@find@3:
	mov	esi, eax
	mov	eax, DWORD PTR [eax]
$LN7@find@3:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@find@3
$LN9@find@3:
	mov	eax, DWORD PTR [edi]

; 979  : 		return (_Where == end()
; 980  : 			|| _DEBUG_LT_PRED(this->comp,
; 981  : 				_Keyval, _Key(_Where._Mynode()))
; 982  : 					? end() : _Where);

	mov	ebx, DWORD PTR [edi+24]
	mov	DWORD PTR __Where$[esp+40], esi
	mov	DWORD PTR __Where$[esp+36], eax
	test	eax, eax
	je	SHORT $LN68@find@3
	cmp	eax, eax
	je	SHORT $LN67@find@3
$LN68@find@3:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN67@find@3:
	cmp	esi, ebx
	je	SHORT $LN3@find@3
	mov	eax, DWORD PTR [ebp]
	cmp	eax, DWORD PTR [esi+12]
	jb	SHORT $LN3@find@3
	lea	eax, DWORD PTR __Where$[esp+36]
	jmp	SHORT $LN4@find@3
$LN3@find@3:
	mov	ecx, DWORD PTR [edi+24]
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR $T140041[esp+40], ecx
	mov	DWORD PTR $T140041[esp+36], edx
	lea	eax, DWORD PTR $T140041[esp+36]
$LN4@find@3:
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[esp+32]
	mov	eax, DWORD PTR [eax+4]

; 983  : 		}

	pop	esi
	pop	ebp
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx], edx
	mov	eax, ecx
	pop	ebx
	add	esp, 24					; 00000018H
	ret	8
?find@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::find
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z
_TEXT	SEGMENT
__Where$ = -20						; size = 8
$T140383 = -12						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::find, COMDAT
; _this$ = edi

; 978  : 		iterator _Where = lower_bound(_Keyval);

	mov	ecx, DWORD PTR [edi+24]
	mov	eax, DWORD PTR [ecx+4]
	sub	esp, 24					; 00000018H
	cmp	BYTE PTR [eax+21], 0
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR __Keyval$[esp+28]
	push	esi
	mov	esi, ecx
	jne	SHORT $LN9@find@4
	mov	ecx, DWORD PTR [ebp]
	npad	5
$LL10@find@4:
	cmp	DWORD PTR [eax+12], ecx
	jae	SHORT $LN8@find@4
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN7@find@4
$LN8@find@4:
	mov	esi, eax
	mov	eax, DWORD PTR [eax]
$LN7@find@4:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@find@4
$LN9@find@4:
	mov	eax, DWORD PTR [edi]

; 979  : 		return (_Where == end()
; 980  : 			|| _DEBUG_LT_PRED(this->comp,
; 981  : 				_Keyval, _Key(_Where._Mynode()))
; 982  : 					? end() : _Where);

	mov	ebx, DWORD PTR [edi+24]
	mov	DWORD PTR __Where$[esp+40], esi
	mov	DWORD PTR __Where$[esp+36], eax
	test	eax, eax
	je	SHORT $LN68@find@4
	cmp	eax, eax
	je	SHORT $LN67@find@4
$LN68@find@4:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN67@find@4:
	cmp	esi, ebx
	je	SHORT $LN3@find@4
	mov	eax, DWORD PTR [ebp]
	cmp	eax, DWORD PTR [esi+12]
	jb	SHORT $LN3@find@4
	lea	eax, DWORD PTR __Where$[esp+36]
	jmp	SHORT $LN4@find@4
$LN3@find@4:
	mov	ecx, DWORD PTR [edi+24]
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR $T140383[esp+40], ecx
	mov	DWORD PTR $T140383[esp+36], edx
	lea	eax, DWORD PTR $T140383[esp+36]
$LN4@find@4:
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[esp+32]
	mov	eax, DWORD PTR [eax+4]

; 983  : 		}

	pop	esi
	pop	ebp
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx], edx
	mov	eax, ecx
	pop	ebx
	add	esp, 24					; 00000018H
	ret	8
?find@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::find
_TEXT	ENDS
PUBLIC	?InitializeCommunication@CProfiler@@AAEHXZ	; CProfiler::InitializeCommunication
;	COMDAT xdata$x
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\eventwaithandle.cpp
xdata$x	SEGMENT
__unwindtable$?InitializeCommunication@CProfiler@@AAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitializeCommunication@CProfiler@@AAEHXZ$1
__ehfuncinfo$?InitializeCommunication@CProfiler@@AAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitializeCommunication@CProfiler@@AAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\profiler.cpp
xdata$x	ENDS
;	COMDAT ?InitializeCommunication@CProfiler@@AAEHXZ
_TEXT	SEGMENT
$T140727 = -212						; size = 4
_accessEventName$ = -208				; size = 62
_mutexName$ = -144					; size = 61
_sharedMemName$ = -80					; size = 68
__$EHRec$ = -12						; size = 12
?InitializeCommunication@CProfiler@@AAEHXZ PROC		; CProfiler::InitializeCommunication, COMDAT
; _this$ = edi

; 311  : int CProfiler::InitializeCommunication() {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?InitializeCommunication@CProfiler@@AAEHXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 200				; 000000c8H
	push	ebx

; 312  : 	DebugWriteLine(L"Looking for Shared Memory...");
; 313  : 	TCHAR sharedMemName[68];
; 314  : 	memset(sharedMemName, 0, sizeof(sharedMemName));

	push	68					; 00000044H
	lea	eax, DWORD PTR _sharedMemName$[esp+220]
	push	0
	push	eax
	call	_memset

; 315  : 	if (GetEnvironmentVariable("SharedMemoryName", sharedMemName, 68) == 0) {

	mov	ebx, DWORD PTR __imp__GetEnvironmentVariableA@12
	add	esp, 12					; 0000000cH
	push	68					; 00000044H
	lea	ecx, DWORD PTR _sharedMemName$[esp+220]
	push	ecx
	push	OFFSET ??_C@_0BB@EIHAAPLC@SharedMemoryName?$AA@
	call	ebx
	test	eax, eax
	jne	SHORT $LN10@Initialize

; 316  : 		DebugWriteLine(L"Getting environment variable failed");
; 317  : 		if (GetLastError() == ERROR_ENVVAR_NOT_FOUND)

	call	DWORD PTR __imp__GetLastError@0

; 318  : 			MessageBox(nullptr, TEXT("Could not find environment variable 'SharedMemoryName', please restart the profiler!"), TEXT("Profiler Error"), MB_OK);

	push	0
	push	OFFSET ??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
	cmp	eax, 203				; 000000cbH
	jne	SHORT $LN9@Initialize
	push	OFFSET ??_C@_0FF@CHALMHHG@Could?5not?5find?5environment?5varia@

; 319  : 		else
; 320  : 			MessageBox(nullptr, TEXT("Unknown error!"), TEXT("Profiler Error"), MB_OK);

	push	0
	call	DWORD PTR __imp__MessageBoxA@16

; 321  : 
; 322  : 		return 1;

	mov	eax, 1
	pop	ebx

; 372  : 
; 373  : 	return 0;
; 374  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+212]
	mov	DWORD PTR fs:0, ecx
	add	esp, 212				; 000000d4H
	ret	0
$LN9@Initialize:

; 319  : 		else
; 320  : 			MessageBox(nullptr, TEXT("Unknown error!"), TEXT("Profiler Error"), MB_OK);

	push	OFFSET ??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@
	push	0
	call	DWORD PTR __imp__MessageBoxA@16

; 321  : 
; 322  : 		return 1;

	mov	eax, 1
	pop	ebx

; 372  : 
; 373  : 	return 0;
; 374  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+212]
	mov	DWORD PTR fs:0, ecx
	add	esp, 212				; 000000d4H
	ret	0
$LN10@Initialize:
	push	esi

; 323  : 	}
; 324  : 
; 325  : 	DebugWriteLine(L"Got Shared Memory...");
; 326  : 	this->sharedMemory = new CSharedMemory(sharedMemName);

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN13@Initialize
	lea	eax, DWORD PTR _sharedMemName$[esp+220]
	call	??0CSharedMemory@@QAE@PAD@Z		; CSharedMemory::CSharedMemory
	jmp	SHORT $LN14@Initialize
$LN13@Initialize:
	xor	eax, eax
$LN14@Initialize:
	mov	DWORD PTR [edi+12], eax

; 327  : 	sharedMemoryHeader = (SharedMemoryHeader*)sharedMemory->GetStartPtr();

	mov	edx, DWORD PTR [eax+8]

; 328  : 	
; 329  : 	this->nativeToManagedBuffer = new CCircularBuffer((byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->NativeToManagedBufferOffset);

	push	20					; 00000014H
	mov	DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A, edx ; sharedMemoryHeader
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T140727[esp+220], esi
	mov	DWORD PTR __$EHRec$[esp+228], 0
	test	esi, esi
	je	SHORT $LN15@Initialize
	mov	eax, DWORD PTR [edi+12]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	mov	eax, DWORD PTR [edx+12]
	add	eax, ecx
	call	??0CCircularBuffer@@QAE@PAX@Z		; CCircularBuffer::CCircularBuffer
	jmp	SHORT $LN16@Initialize
$LN15@Initialize:
	xor	eax, eax
$LN16@Initialize:
	mov	DWORD PTR __$EHRec$[esp+228], -1

; 330  : 	
; 331  : 	sharedMemoryHeader->TargetPointer = this->sharedMemory->GetStartPtr();

	mov	edx, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	mov	DWORD PTR [edi+16], eax
	mov	eax, DWORD PTR [edi+12]
	mov	ecx, DWORD PTR [eax+8]

; 332  : 	
; 333  : 	TCHAR mutexName[61];
; 334  : 	memset(mutexName, 0, sizeof(mutexName));

	push	61					; 0000003dH
	lea	eax, DWORD PTR _mutexName$[esp+224]
	push	0
	push	eax
	mov	DWORD PTR [edx+32], ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 335  : 	
; 336  : 	if (GetEnvironmentVariable("MutexName", mutexName, 61) == 0) {

	push	61					; 0000003dH
	lea	ecx, DWORD PTR _mutexName$[esp+224]
	push	ecx
	push	OFFSET ??_C@_09OHDMFPFI@MutexName?$AA@
	call	ebx
	test	eax, eax
	jne	SHORT $LN7@Initialize

; 337  : 		DebugWriteLine(L"Getting environment variable failed");
; 338  : 		if (GetLastError() == ERROR_ENVVAR_NOT_FOUND)

	call	DWORD PTR __imp__GetLastError@0

; 339  : 			MessageBox(nullptr, TEXT("Could not find environment variable 'MutexName', please restart the profiler!"), TEXT("Profiler Error"), MB_OK);

	push	0
	push	OFFSET ??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
	cmp	eax, 203				; 000000cbH
	jne	$LN2@Initialize
	push	OFFSET ??_C@_0EO@MELDENFF@Could?5not?5find?5environment?5varia@

; 365  : 		else
; 366  : 			MessageBox(nullptr, TEXT("Unknown error!"), TEXT("Profiler Error"), MB_OK);

	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	pop	esi

; 367  : 
; 368  : 		return 1;

	mov	eax, 1
	pop	ebx

; 372  : 
; 373  : 	return 0;
; 374  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+212]
	mov	DWORD PTR fs:0, ecx
	add	esp, 212				; 000000d4H
	ret	0
$LN7@Initialize:

; 340  : 		else
; 341  : 			MessageBox(nullptr, TEXT("Unknown error!"), TEXT("Profiler Error"), MB_OK);
; 342  : 
; 343  : 		return 1;
; 344  : 	}
; 345  : 
; 346  : 	HANDLE mutex = OpenMutex(MUTEX_ALL_ACCESS, false, mutexName);

	lea	edx, DWORD PTR _mutexName$[esp+220]
	push	edx
	push	0
	push	2031617					; 001f0001H
	call	DWORD PTR __imp__OpenMutexA@12
	mov	esi, eax

; 347  : 
; 348  : 	if (mutex == nullptr) {

	test	esi, esi

; 349  : 		DebugWriteLine(L"Failed to access mutex: %d!", GetLastError());
; 350  : 
; 351  : 		return 1;

	je	$LN40@Initialize

; 352  : 	}
; 353  : 	
; 354  : 	DebugWriteLine(L"Mutex opened successfully!");
; 355  : 
; 356  : 	allThreadLocalDatas = new LightweightList(mutex);

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@Initialize
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], esi
	jmp	SHORT $LN18@Initialize
$LN17@Initialize:
	xor	eax, eax
$LN18@Initialize:

; 357  : 
; 358  : 	TCHAR accessEventName[62];
; 359  : 	memset(accessEventName, 0, sizeof(accessEventName));

	push	62					; 0000003eH
	mov	DWORD PTR ?allThreadLocalDatas@@3PAVLightweightList@@A, eax ; allThreadLocalDatas
	lea	eax, DWORD PTR _accessEventName$[esp+224]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 360  : 
; 361  : 	if (GetEnvironmentVariable("AccessEventName", accessEventName, 62) == 0) {

	push	62					; 0000003eH
	lea	ecx, DWORD PTR _accessEventName$[esp+224]
	push	ecx
	push	OFFSET ??_C@_0BA@DKCEJMG@AccessEventName?$AA@
	call	ebx
	test	eax, eax
	jne	SHORT $LN3@Initialize

; 362  : 		DebugWriteLine(L"Getting environment variable failed");
; 363  : 		if (GetLastError() == ERROR_ENVVAR_NOT_FOUND)

	call	DWORD PTR __imp__GetLastError@0

; 364  : 			MessageBox(nullptr, TEXT("Could not find environment variable 'AccessEventName', please restart the profiler!"), TEXT("Profiler Error"), MB_OK);

	push	0
	push	OFFSET ??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
	cmp	eax, 203				; 000000cbH
	jne	SHORT $LN2@Initialize
	push	OFFSET ??_C@_0FE@HNFKMMLK@Could?5not?5find?5environment?5varia@

; 365  : 		else
; 366  : 			MessageBox(nullptr, TEXT("Unknown error!"), TEXT("Profiler Error"), MB_OK);

	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	pop	esi

; 367  : 
; 368  : 		return 1;

	mov	eax, 1
	pop	ebx

; 372  : 
; 373  : 	return 0;
; 374  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+212]
	mov	DWORD PTR fs:0, ecx
	add	esp, 212				; 000000d4H
	ret	0
$LN2@Initialize:

; 365  : 		else
; 366  : 			MessageBox(nullptr, TEXT("Unknown error!"), TEXT("Profiler Error"), MB_OK);

	push	OFFSET ??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
$LN40@Initialize:
	pop	esi

; 367  : 
; 368  : 		return 1;

	mov	eax, 1
	pop	ebx

; 372  : 
; 373  : 	return 0;
; 374  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+212]
	mov	DWORD PTR fs:0, ecx
	add	esp, 212				; 000000d4H
	ret	0
$LN3@Initialize:

; 369  : 	}
; 370  : 
; 371  : 	this->accessEventHandle = new CEventWaitHandle(accessEventName);

	push	8
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN19@Initialize
	lea	edx, DWORD PTR _accessEventName$[esp+220]
	mov	eax, edx
	push	eax
	push	0
	push	1048578					; 00100002H
	mov	DWORD PTR [esi], edx
	call	DWORD PTR __imp__OpenEventA@12
	mov	DWORD PTR [esi+4], eax
	jmp	SHORT $LN20@Initialize
$LN19@Initialize:
	xor	esi, esi
$LN20@Initialize:

; 372  : 
; 373  : 	return 0;
; 374  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+220]
	mov	DWORD PTR [edi+140], esi
	pop	esi
	xor	eax, eax
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 212				; 000000d4H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitializeCommunication@CProfiler@@AAEHXZ$1:
	mov	eax, DWORD PTR $T140727[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InitializeCommunication@CProfiler@@AAEHXZ:
	mov	eax, OFFSET __ehfuncinfo$?InitializeCommunication@CProfiler@@AAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitializeCommunication@CProfiler@@AAEHXZ ENDP		; CProfiler::InitializeCommunication
PUBLIC	?EnterLock@CProfiler@@QAEXPAUThreadLocalData@@@Z ; CProfiler::EnterLock
; Function compile flags: /Ogtpy
;	COMDAT ?EnterLock@CProfiler@@QAEXPAUThreadLocalData@@@Z
_TEXT	SEGMENT
?EnterLock@CProfiler@@QAEXPAUThreadLocalData@@@Z PROC	; CProfiler::EnterLock, COMDAT
; _data$ = eax

; 63   : void CProfiler::EnterLock(ThreadLocalData *data) {

	push	esi

; 64   : 	data->inLock = 1;

	mov	esi, eax
	add	esi, 4
	mov	DWORD PTR [esi], 1

; 65   : 	_ReadWriteBarrier(); _mm_mfence();

	mfence

; 66   : 
; 67   : 	while (sharedMemoryHeader->ExclusiveAccess == 1)

	mov	eax, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, 1
	jne	SHORT $LN1@EnterLock
	push	edi
	mov	edi, DWORD PTR __imp__WaitForSingleObject@8
	npad	13
$LL2@EnterLock:

; 68   : 	{
; 69   : 		data->inLock = 0;

	mov	DWORD PTR [esi], 0

; 70   : 		this->accessEventHandle->Wait();

	mov	edx, DWORD PTR ?profiler@@3VCProfiler@@A+140
	mov	eax, DWORD PTR [edx+4]
	push	-1
	push	eax
	call	edi

; 71   : 		data->inLock = 1;

	mov	DWORD PTR [esi], 1

; 72   : 		_ReadWriteBarrier(); _mm_mfence();

	mfence
	mov	ecx, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, 1
	je	SHORT $LL2@EnterLock
	pop	edi
$LN1@EnterLock:
	pop	esi

; 73   : 	}
; 74   : }

	ret	0
?EnterLock@CProfiler@@QAEXPAUThreadLocalData@@@Z ENDP	; CProfiler::EnterLock
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator::operator++, COMDAT
; _this$ = eax

; 474  : 			{	// preincrement

	push	esi
	mov	esi, eax

; 475  : 			++(*(const_iterator *)this);

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::_Inc

; 476  : 			return (*this);

	mov	eax, esi
	pop	esi

; 477  : 			}

	ret	0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator++, COMDAT
; _this$ = eax

; 474  : 			{	// preincrement

	push	esi
	mov	esi, eax

; 475  : 			++(*(const_iterator *)this);

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::_Inc

; 476  : 			return (*this);

	mov	eax, esi
	pop	esi

; 477  : 			}

	ret	0
??Eiterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator++, COMDAT
; _this$ = eax

; 474  : 			{	// preincrement

	push	esi
	mov	esi, eax

; 475  : 			++(*(const_iterator *)this);

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc

; 476  : 			return (*this);

	mov	eax, esi
	pop	esi

; 477  : 			}

	ret	0
??Eiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
___formal$ = 24						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,unsigned int>, COMDAT
; __Off$ = edi

; 1831 : 	{	// add to _Off distance between bidirectional iterators (redundant)

	push	esi
	mov	esi, DWORD PTR __imp___invalid_parameter_noinfo
$LN66@Distance2:
	mov	ecx, DWORD PTR __First$[esp+4]
	npad	5

; 1832 : 	for (; _First != _Last; ++_First)

$LL12@Distance2:
	mov	eax, DWORD PTR __First$[esp]
	test	eax, eax
	je	SHORT $LN53@Distance2
	cmp	eax, DWORD PTR __Last$[esp]
	je	SHORT $LN52@Distance2
$LN53@Distance2:
	call	esi
	mov	ecx, DWORD PTR __First$[esp+4]
$LN52@Distance2:
	cmp	ecx, DWORD PTR __Last$[esp+4]
	je	SHORT $LN1@Distance2

; 1833 : 		++_Off;

	inc	DWORD PTR [edi]
	cmp	DWORD PTR __First$[esp], 0
	jne	SHORT $LN18@Distance2
	call	esi
	mov	ecx, DWORD PTR __First$[esp+4]
$LN18@Distance2:

; 1832 : 	for (; _First != _Last; ++_First)

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LN15@Distance2
	call	esi
	jmp	SHORT $LN66@Distance2
$LN15@Distance2:
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN63@Distance2
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN32@Distance2
$LL33@Distance2:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL33@Distance2
$LN32@Distance2:
	mov	DWORD PTR __First$[esp+4], ecx
	jmp	SHORT $LL12@Distance2
$LN63@Distance2:
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN10@Distance2
	npad	1
$LL11@Distance2:
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN10@Distance2
	mov	ecx, eax
	mov	DWORD PTR __First$[esp+4], ecx
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL11@Distance2
$LN10@Distance2:
	mov	ecx, eax
	mov	DWORD PTR __First$[esp+4], ecx
	jmp	SHORT $LL12@Distance2
$LN1@Distance2:
	pop	esi

; 1834 : 	}

	ret	0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
___formal$ = 24						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,unsigned int>, COMDAT
; __Off$ = edi

; 1831 : 	{	// add to _Off distance between bidirectional iterators (redundant)

	push	esi
	mov	esi, DWORD PTR __imp___invalid_parameter_noinfo
$LN66@Distance2@2:
	mov	ecx, DWORD PTR __First$[esp+4]
	npad	5

; 1832 : 	for (; _First != _Last; ++_First)

$LL12@Distance2@2:
	mov	eax, DWORD PTR __First$[esp]
	test	eax, eax
	je	SHORT $LN53@Distance2@2
	cmp	eax, DWORD PTR __Last$[esp]
	je	SHORT $LN52@Distance2@2
$LN53@Distance2@2:
	call	esi
	mov	ecx, DWORD PTR __First$[esp+4]
$LN52@Distance2@2:
	cmp	ecx, DWORD PTR __Last$[esp+4]
	je	SHORT $LN1@Distance2@2

; 1833 : 		++_Off;

	inc	DWORD PTR [edi]
	cmp	DWORD PTR __First$[esp], 0
	jne	SHORT $LN18@Distance2@2
	call	esi
	mov	ecx, DWORD PTR __First$[esp+4]
$LN18@Distance2@2:

; 1832 : 	for (; _First != _Last; ++_First)

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LN15@Distance2@2
	call	esi
	jmp	SHORT $LN66@Distance2@2
$LN15@Distance2@2:
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN63@Distance2@2
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN32@Distance2@2
$LL33@Distance2@2:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL33@Distance2@2
$LN32@Distance2@2:
	mov	DWORD PTR __First$[esp+4], ecx
	jmp	SHORT $LL12@Distance2@2
$LN63@Distance2@2:
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN10@Distance2@2
	npad	1
$LL11@Distance2@2:
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN10@Distance2@2
	mov	ecx, eax
	mov	DWORD PTR __First$[esp+4], ecx
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL11@Distance2@2
$LN10@Distance2@2:
	mov	ecx, eax
	mov	DWORD PTR __First$[esp+4], ecx
	jmp	SHORT $LL12@Distance2@2
$LN1@Distance2@2:
	pop	esi

; 1834 : 	}

	ret	0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
___formal$ = 24						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,unsigned int>, COMDAT
; __Off$ = edi

; 1831 : 	{	// add to _Off distance between bidirectional iterators (redundant)

	push	esi
	mov	esi, DWORD PTR __imp___invalid_parameter_noinfo
$LN66@Distance2@3:
	mov	ecx, DWORD PTR __First$[esp+4]
	npad	5

; 1832 : 	for (; _First != _Last; ++_First)

$LL12@Distance2@3:
	mov	eax, DWORD PTR __First$[esp]
	test	eax, eax
	je	SHORT $LN53@Distance2@3
	cmp	eax, DWORD PTR __Last$[esp]
	je	SHORT $LN52@Distance2@3
$LN53@Distance2@3:
	call	esi
	mov	ecx, DWORD PTR __First$[esp+4]
$LN52@Distance2@3:
	cmp	ecx, DWORD PTR __Last$[esp+4]
	je	SHORT $LN1@Distance2@3

; 1833 : 		++_Off;

	inc	DWORD PTR [edi]
	cmp	DWORD PTR __First$[esp], 0
	jne	SHORT $LN18@Distance2@3
	call	esi
	mov	ecx, DWORD PTR __First$[esp+4]
$LN18@Distance2@3:

; 1832 : 	for (; _First != _Last; ++_First)

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LN15@Distance2@3
	call	esi
	jmp	SHORT $LN66@Distance2@3
$LN15@Distance2@3:
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN63@Distance2@3
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN32@Distance2@3
$LL33@Distance2@3:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL33@Distance2@3
$LN32@Distance2@3:
	mov	DWORD PTR __First$[esp+4], ecx
	jmp	SHORT $LL12@Distance2@3
$LN63@Distance2@3:
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN10@Distance2@3
	npad	1
$LL11@Distance2@3:
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN10@Distance2@3
	mov	ecx, eax
	mov	DWORD PTR __First$[esp+4], ecx
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL11@Distance2@3
$LN10@Distance2@3:
	mov	ecx, eax
	mov	DWORD PTR __First$[esp+4], ecx
	jmp	SHORT $LL12@Distance2@3
$LN1@Distance2@3:
	pop	esi

; 1834 : 	}

	ret	0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T152545 = -4						; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,unsigned int>, COMDAT
; __Off$ = edi

; 1866 : 	{	// add to _Off distance between iterators

	push	ecx

; 1867 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	eax, DWORD PTR $T152545[esp+4]
	mov	ecx, DWORD PTR __Last$[esp+4]
	mov	edx, DWORD PTR __Last$[esp]
	push	eax
	mov	eax, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+8]
	push	edx
	push	eax
	push	ecx
	call	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,unsigned int>

; 1868 : 	}

	add	esp, 24					; 00000018H
	ret	0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T152553 = -4						; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,unsigned int>, COMDAT
; __Off$ = edi

; 1866 : 	{	// add to _Off distance between iterators

	push	ecx

; 1867 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	eax, DWORD PTR $T152553[esp+4]
	mov	ecx, DWORD PTR __Last$[esp+4]
	mov	edx, DWORD PTR __Last$[esp]
	push	eax
	mov	eax, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+8]
	push	edx
	push	eax
	push	ecx
	call	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,unsigned int>

; 1868 : 	}

	add	esp, 24					; 00000018H
	ret	0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T152561 = -4						; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,unsigned int>, COMDAT
; __Off$ = edi

; 1866 : 	{	// add to _Off distance between iterators

	push	ecx

; 1867 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	eax, DWORD PTR $T152561[esp+4]
	mov	ecx, DWORD PTR __Last$[esp+4]
	mov	edx, DWORD PTR __Last$[esp]
	push	eax
	mov	eax, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+8]
	push	edx
	push	eax
	push	ecx
	call	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,unsigned int>

; 1868 : 	}

	add	esp, 24					; 00000018H
	ret	0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,unsigned int>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z$0
__ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
$T152570 = -80						; size = 28
$T152569 = -52						; size = 40
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
__Addleft$ = 16						; size = 1
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert, COMDAT
; __Wherenode$ = ecx

; 1187 : 		{	// add node with value next to _Wherenode, to left if _Addnode

	push	-1
	push	__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 72					; 00000048H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+84]

; 1188 : 		if (max_size() - 1 <= _Mysize)

	cmp	DWORD PTR [ebx+28], 536870910		; 1ffffffeH
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	jb	SHORT $LN17@Insert@2

; 1189 : 			_THROW(length_error, "map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T152570[esp+104]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T152570[esp+100]
	push	eax
	lea	ecx, DWORD PTR $T152569[esp+104]
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+116], 0
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	edx, DWORD PTR $T152569[esp+104]
	push	edx
	call	__CxxThrowException@8
$LN381@Insert@2:
$LN17@Insert@2:

; 1190 : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1191 : 			_Val, _Red);

	mov	eax, DWORD PTR [ebx+24]
	mov	esi, DWORD PTR __Val$[esp+96]
	push	eax
	push	edi
	push	eax
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVThreadInfo@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Buynode

; 1192 : 
; 1193 : 		++_Mysize;
; 1194 : 		if (_Wherenode == _Myhead)

	mov	ecx, DWORD PTR [ebx+24]
	inc	DWORD PTR [ebx+28]
	mov	ebp, eax
	xor	al, al
	cmp	edi, ecx
	jne	SHORT $LN16@Insert@2

; 1195 : 			{	// first node in tree, just set head values
; 1196 : 			_Root() = _Newnode;

	mov	DWORD PTR [ecx+4], ebp

; 1197 : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

	mov	ecx, DWORD PTR [ebx+24]
	mov	DWORD PTR [ecx], ebp
	mov	edx, DWORD PTR [ebx+24]
	mov	DWORD PTR [edx+8], ebp
	jmp	SHORT $LN11@Insert@2
$LN16@Insert@2:

; 1198 : 			}
; 1199 : 		else if (_Addleft)

	cmp	BYTE PTR __Addleft$[esp+96], al
	je	SHORT $LN14@Insert@2

; 1200 : 			{	// add to left of _Wherenode
; 1201 : 			_Left(_Wherenode) = _Newnode;

	mov	DWORD PTR [edi], ebp

; 1202 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR [ebx+24]
	cmp	edi, DWORD PTR [ecx]
	jne	SHORT $LN11@Insert@2

; 1203 : 				_Lmost() = _Newnode;

	mov	DWORD PTR [ecx], ebp

; 1204 : 			}
; 1205 : 		else

	jmp	SHORT $LN11@Insert@2
$LN14@Insert@2:

; 1206 : 			{	// add to right of _Wherenode
; 1207 : 			_Right(_Wherenode) = _Newnode;

	mov	DWORD PTR [edi+8], ebp

; 1208 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR [ebx+24]
	cmp	edi, DWORD PTR [ecx+8]
	jne	SHORT $LN11@Insert@2

; 1209 : 				_Rmost() = _Newnode;

	mov	DWORD PTR [ecx+8], ebp
$LN11@Insert@2:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	mov	esi, DWORD PTR [ebp+4]
	lea	ecx, DWORD PTR [ebp+4]
	mov	edx, ebp
	cmp	BYTE PTR [esi+20], al
	jne	$LN9@Insert@2
	npad	1
$LL10@Insert@2:

; 1213 : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

	mov	esi, DWORD PTR [ecx]
	mov	edi, DWORD PTR [esi+4]
	cmp	esi, DWORD PTR [edi]
	jne	$LN8@Insert@2

; 1214 : 				{	// fixup red-red in left subtree
; 1215 : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

	mov	edi, DWORD PTR [edi+8]

; 1216 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [edi+20], al
	jne	SHORT $LN7@Insert@2

; 1217 : 					{	// parent has two red children, blacken both
; 1218 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	edx, esi
	mov	BYTE PTR [edx+20], 1

; 1219 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [edi+20], 1

; 1220 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], al

; 1221 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 1222 : 					}
; 1223 : 				else

	jmp	$LN311@Insert@2
$LN7@Insert@2:

; 1224 : 					{	// parent has red and black children
; 1225 : 					if (_Pnode == _Right(_Parent(_Pnode)))

	cmp	edx, DWORD PTR [esi+8]
	jne	SHORT $LN106@Insert@2

; 1226 : 						{	// rotate right child to left
; 1227 : 						_Pnode = _Parent(_Pnode);

	mov	edx, esi

; 1228 : 						_Lrotate(_Pnode);

	mov	esi, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [edx+8], ecx
	mov	ecx, DWORD PTR [esi]
	cmp	BYTE PTR [ecx+21], al
	jne	SHORT $LN105@Insert@2
	mov	DWORD PTR [ecx+4], edx
$LN105@Insert@2:
	mov	edi, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	edx, DWORD PTR [edi+4]
	jne	SHORT $LN104@Insert@2
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN101@Insert@2
$LN104@Insert@2:
	mov	edi, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [edi]
	jne	SHORT $LN102@Insert@2
	mov	DWORD PTR [edi], esi
	jmp	SHORT $LN101@Insert@2
$LN102@Insert@2:
	mov	DWORD PTR [edi+8], esi
$LN101@Insert@2:
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [ecx], esi
$LN106@Insert@2:

; 1229 : 						}
; 1230 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	esi, DWORD PTR [ecx]
	mov	BYTE PTR [esi+20], 1

; 1231 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	esi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [esi+4]
	mov	BYTE PTR [esi+20], al

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

	mov	ecx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]
	mov	edi, DWORD PTR [esi+8]
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR [esi+8]
	cmp	BYTE PTR [edi+21], al
	jne	SHORT $LN168@Insert@2
	mov	DWORD PTR [edi+4], ecx
$LN168@Insert@2:
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	ecx, DWORD PTR [edi+4]
	jne	SHORT $LN167@Insert@2
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [esi+8], ecx

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN380@Insert@2

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

$LN167@Insert@2:
	mov	edi, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN165@Insert@2
	mov	DWORD PTR [edi+8], esi
	mov	DWORD PTR [esi+8], ecx

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN380@Insert@2

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

$LN165@Insert@2:
	mov	DWORD PTR [edi], esi
	mov	DWORD PTR [esi+8], ecx

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN380@Insert@2
$LN8@Insert@2:

; 1236 : 				{	// fixup red-red in right subtree
; 1237 : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

	mov	edi, DWORD PTR [edi]

; 1238 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [edi+20], al
	jne	SHORT $LN3@Insert@2

; 1239 : 					{	// parent has two red children, blacken both
; 1240 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	edx, esi
	mov	BYTE PTR [edx+20], 1

; 1241 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [edi+20], 1

; 1242 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], al

; 1243 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 1244 : 					}
; 1245 : 				else

	jmp	$LN311@Insert@2
$LN3@Insert@2:

; 1246 : 					{	// parent has red and black children
; 1247 : 					if (_Pnode == _Left(_Parent(_Pnode)))

	cmp	edx, DWORD PTR [esi]
	jne	SHORT $LN248@Insert@2

; 1248 : 						{	// rotate left child to right
; 1249 : 						_Pnode = _Parent(_Pnode);

	mov	edx, esi

; 1250 : 						_Rrotate(_Pnode);

	mov	esi, DWORD PTR [edx]
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [esi+8]
	cmp	BYTE PTR [ecx+21], al
	jne	SHORT $LN247@Insert@2
	mov	DWORD PTR [ecx+4], edx
$LN247@Insert@2:
	mov	edi, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	edx, DWORD PTR [edi+4]
	jne	SHORT $LN246@Insert@2
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN243@Insert@2
$LN246@Insert@2:
	mov	edi, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [edi+8]
	jne	SHORT $LN244@Insert@2
	mov	DWORD PTR [edi+8], esi
	jmp	SHORT $LN243@Insert@2
$LN244@Insert@2:
	mov	DWORD PTR [edi], esi
$LN243@Insert@2:
	mov	DWORD PTR [esi+8], edx
	mov	DWORD PTR [ecx], esi
$LN248@Insert@2:

; 1251 : 						}
; 1252 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	esi, DWORD PTR [ecx]
	mov	BYTE PTR [esi+20], 1

; 1253 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	esi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [esi+4]
	mov	BYTE PTR [esi+20], al

; 1254 : 					_Lrotate(_Parent(_Parent(_Pnode)));

	mov	ecx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx+8]
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [ecx+8], edi
	mov	edi, DWORD PTR [esi]
	cmp	BYTE PTR [edi+21], al
	jne	SHORT $LN310@Insert@2
	mov	DWORD PTR [edi+4], ecx
$LN310@Insert@2:
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	ecx, DWORD PTR [edi+4]
	jne	SHORT $LN309@Insert@2
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN306@Insert@2
$LN309@Insert@2:
	mov	edi, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN307@Insert@2
	mov	DWORD PTR [edi], esi
	jmp	SHORT $LN306@Insert@2
$LN307@Insert@2:
	mov	DWORD PTR [edi+8], esi
$LN306@Insert@2:
	mov	DWORD PTR [esi], ecx
$LN380@Insert@2:
	mov	DWORD PTR [ecx+4], esi
$LN311@Insert@2:
	mov	esi, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [edx+4]
	cmp	BYTE PTR [esi+20], al
	je	$LL10@Insert@2
$LN9@Insert@2:

; 1255 : 					}
; 1256 : 				}
; 1257 : 
; 1258 : 		_Color(_Root()) = _Black;	// root is always black

	mov	edx, DWORD PTR [ebx+24]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+20], 1

; 1259 : 		return (_TREE_ITERATOR(_Newnode));

	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+96]

; 1260 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR __$EHRec$[esp+92]
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 84					; 00000054H
	ret	16					; 00000010H
$LN379@Insert@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z$0:
	lea	ecx, DWORD PTR $T152570[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z$0
__ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
$T153361 = -80						; size = 28
$T153360 = -52						; size = 40
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
__Addleft$ = 16						; size = 1
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Insert, COMDAT
; __Wherenode$ = ecx

; 1187 : 		{	// add node with value next to _Wherenode, to left if _Addnode

	push	-1
	push	__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 72					; 00000048H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+84]

; 1188 : 		if (max_size() - 1 <= _Mysize)

	cmp	DWORD PTR [ebx+28], 536870910		; 1ffffffeH
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	jb	SHORT $LN17@Insert@3

; 1189 : 			_THROW(length_error, "map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T153361[esp+104]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T153361[esp+100]
	push	eax
	lea	ecx, DWORD PTR $T153360[esp+104]
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+116], 0
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	edx, DWORD PTR $T153360[esp+104]
	push	edx
	call	__CxxThrowException@8
$LN381@Insert@3:
$LN17@Insert@3:

; 1190 : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1191 : 			_Val, _Red);

	mov	eax, DWORD PTR [ebx+24]
	mov	esi, DWORD PTR __Val$[esp+96]
	push	eax
	push	edi
	push	eax
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIPAVThreadInfo@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Buynode

; 1192 : 
; 1193 : 		++_Mysize;
; 1194 : 		if (_Wherenode == _Myhead)

	mov	ecx, DWORD PTR [ebx+24]
	inc	DWORD PTR [ebx+28]
	mov	ebp, eax
	xor	al, al
	cmp	edi, ecx
	jne	SHORT $LN16@Insert@3

; 1195 : 			{	// first node in tree, just set head values
; 1196 : 			_Root() = _Newnode;

	mov	DWORD PTR [ecx+4], ebp

; 1197 : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

	mov	ecx, DWORD PTR [ebx+24]
	mov	DWORD PTR [ecx], ebp
	mov	edx, DWORD PTR [ebx+24]
	mov	DWORD PTR [edx+8], ebp
	jmp	SHORT $LN11@Insert@3
$LN16@Insert@3:

; 1198 : 			}
; 1199 : 		else if (_Addleft)

	cmp	BYTE PTR __Addleft$[esp+96], al
	je	SHORT $LN14@Insert@3

; 1200 : 			{	// add to left of _Wherenode
; 1201 : 			_Left(_Wherenode) = _Newnode;

	mov	DWORD PTR [edi], ebp

; 1202 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR [ebx+24]
	cmp	edi, DWORD PTR [ecx]
	jne	SHORT $LN11@Insert@3

; 1203 : 				_Lmost() = _Newnode;

	mov	DWORD PTR [ecx], ebp

; 1204 : 			}
; 1205 : 		else

	jmp	SHORT $LN11@Insert@3
$LN14@Insert@3:

; 1206 : 			{	// add to right of _Wherenode
; 1207 : 			_Right(_Wherenode) = _Newnode;

	mov	DWORD PTR [edi+8], ebp

; 1208 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR [ebx+24]
	cmp	edi, DWORD PTR [ecx+8]
	jne	SHORT $LN11@Insert@3

; 1209 : 				_Rmost() = _Newnode;

	mov	DWORD PTR [ecx+8], ebp
$LN11@Insert@3:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	mov	esi, DWORD PTR [ebp+4]
	lea	ecx, DWORD PTR [ebp+4]
	mov	edx, ebp
	cmp	BYTE PTR [esi+20], al
	jne	$LN9@Insert@3
	npad	1
$LL10@Insert@3:

; 1213 : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

	mov	esi, DWORD PTR [ecx]
	mov	edi, DWORD PTR [esi+4]
	cmp	esi, DWORD PTR [edi]
	jne	$LN8@Insert@3

; 1214 : 				{	// fixup red-red in left subtree
; 1215 : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

	mov	edi, DWORD PTR [edi+8]

; 1216 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [edi+20], al
	jne	SHORT $LN7@Insert@3

; 1217 : 					{	// parent has two red children, blacken both
; 1218 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	edx, esi
	mov	BYTE PTR [edx+20], 1

; 1219 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [edi+20], 1

; 1220 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], al

; 1221 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 1222 : 					}
; 1223 : 				else

	jmp	$LN311@Insert@3
$LN7@Insert@3:

; 1224 : 					{	// parent has red and black children
; 1225 : 					if (_Pnode == _Right(_Parent(_Pnode)))

	cmp	edx, DWORD PTR [esi+8]
	jne	SHORT $LN106@Insert@3

; 1226 : 						{	// rotate right child to left
; 1227 : 						_Pnode = _Parent(_Pnode);

	mov	edx, esi

; 1228 : 						_Lrotate(_Pnode);

	mov	esi, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [edx+8], ecx
	mov	ecx, DWORD PTR [esi]
	cmp	BYTE PTR [ecx+21], al
	jne	SHORT $LN105@Insert@3
	mov	DWORD PTR [ecx+4], edx
$LN105@Insert@3:
	mov	edi, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	edx, DWORD PTR [edi+4]
	jne	SHORT $LN104@Insert@3
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN101@Insert@3
$LN104@Insert@3:
	mov	edi, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [edi]
	jne	SHORT $LN102@Insert@3
	mov	DWORD PTR [edi], esi
	jmp	SHORT $LN101@Insert@3
$LN102@Insert@3:
	mov	DWORD PTR [edi+8], esi
$LN101@Insert@3:
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [ecx], esi
$LN106@Insert@3:

; 1229 : 						}
; 1230 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	esi, DWORD PTR [ecx]
	mov	BYTE PTR [esi+20], 1

; 1231 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	esi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [esi+4]
	mov	BYTE PTR [esi+20], al

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

	mov	ecx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]
	mov	edi, DWORD PTR [esi+8]
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR [esi+8]
	cmp	BYTE PTR [edi+21], al
	jne	SHORT $LN168@Insert@3
	mov	DWORD PTR [edi+4], ecx
$LN168@Insert@3:
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	ecx, DWORD PTR [edi+4]
	jne	SHORT $LN167@Insert@3
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [esi+8], ecx

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN380@Insert@3

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

$LN167@Insert@3:
	mov	edi, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN165@Insert@3
	mov	DWORD PTR [edi+8], esi
	mov	DWORD PTR [esi+8], ecx

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN380@Insert@3

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

$LN165@Insert@3:
	mov	DWORD PTR [edi], esi
	mov	DWORD PTR [esi+8], ecx

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN380@Insert@3
$LN8@Insert@3:

; 1236 : 				{	// fixup red-red in right subtree
; 1237 : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

	mov	edi, DWORD PTR [edi]

; 1238 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [edi+20], al
	jne	SHORT $LN3@Insert@3

; 1239 : 					{	// parent has two red children, blacken both
; 1240 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	edx, esi
	mov	BYTE PTR [edx+20], 1

; 1241 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [edi+20], 1

; 1242 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], al

; 1243 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 1244 : 					}
; 1245 : 				else

	jmp	$LN311@Insert@3
$LN3@Insert@3:

; 1246 : 					{	// parent has red and black children
; 1247 : 					if (_Pnode == _Left(_Parent(_Pnode)))

	cmp	edx, DWORD PTR [esi]
	jne	SHORT $LN248@Insert@3

; 1248 : 						{	// rotate left child to right
; 1249 : 						_Pnode = _Parent(_Pnode);

	mov	edx, esi

; 1250 : 						_Rrotate(_Pnode);

	mov	esi, DWORD PTR [edx]
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [esi+8]
	cmp	BYTE PTR [ecx+21], al
	jne	SHORT $LN247@Insert@3
	mov	DWORD PTR [ecx+4], edx
$LN247@Insert@3:
	mov	edi, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	edx, DWORD PTR [edi+4]
	jne	SHORT $LN246@Insert@3
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN243@Insert@3
$LN246@Insert@3:
	mov	edi, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [edi+8]
	jne	SHORT $LN244@Insert@3
	mov	DWORD PTR [edi+8], esi
	jmp	SHORT $LN243@Insert@3
$LN244@Insert@3:
	mov	DWORD PTR [edi], esi
$LN243@Insert@3:
	mov	DWORD PTR [esi+8], edx
	mov	DWORD PTR [ecx], esi
$LN248@Insert@3:

; 1251 : 						}
; 1252 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	esi, DWORD PTR [ecx]
	mov	BYTE PTR [esi+20], 1

; 1253 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	esi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [esi+4]
	mov	BYTE PTR [esi+20], al

; 1254 : 					_Lrotate(_Parent(_Parent(_Pnode)));

	mov	ecx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx+8]
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [ecx+8], edi
	mov	edi, DWORD PTR [esi]
	cmp	BYTE PTR [edi+21], al
	jne	SHORT $LN310@Insert@3
	mov	DWORD PTR [edi+4], ecx
$LN310@Insert@3:
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	ecx, DWORD PTR [edi+4]
	jne	SHORT $LN309@Insert@3
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN306@Insert@3
$LN309@Insert@3:
	mov	edi, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN307@Insert@3
	mov	DWORD PTR [edi], esi
	jmp	SHORT $LN306@Insert@3
$LN307@Insert@3:
	mov	DWORD PTR [edi+8], esi
$LN306@Insert@3:
	mov	DWORD PTR [esi], ecx
$LN380@Insert@3:
	mov	DWORD PTR [ecx+4], esi
$LN311@Insert@3:
	mov	esi, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [edx+4]
	cmp	BYTE PTR [esi+20], al
	je	$LL10@Insert@3
$LN9@Insert@3:

; 1255 : 					}
; 1256 : 				}
; 1257 : 
; 1258 : 		_Color(_Root()) = _Black;	// root is always black

	mov	edx, DWORD PTR [ebx+24]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+20], 1

; 1259 : 		return (_TREE_ITERATOR(_Newnode));

	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+96]

; 1260 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR __$EHRec$[esp+92]
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 84					; 00000054H
	ret	16					; 00000010H
$LN379@Insert@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z$0:
	lea	ecx, DWORD PTR $T153361[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Insert
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z$0
__ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z
_TEXT	SEGMENT
$T154152 = -80						; size = 28
$T154151 = -52						; size = 40
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
__Addleft$ = 16						; size = 1
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Insert, COMDAT
; __Wherenode$ = ecx

; 1187 : 		{	// add node with value next to _Wherenode, to left if _Addnode

	push	-1
	push	__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 72					; 00000048H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+84]

; 1188 : 		if (max_size() - 1 <= _Mysize)

	cmp	DWORD PTR [ebx+28], 536870910		; 1ffffffeH
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	jb	SHORT $LN17@Insert@4

; 1189 : 			_THROW(length_error, "map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T154152[esp+104]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T154152[esp+100]
	push	eax
	lea	ecx, DWORD PTR $T154151[esp+104]
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+116], 0
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	edx, DWORD PTR $T154151[esp+104]
	push	edx
	call	__CxxThrowException@8
$LN381@Insert@4:
$LN17@Insert@4:

; 1190 : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1191 : 			_Val, _Red);

	mov	eax, DWORD PTR [ebx+24]
	mov	esi, DWORD PTR __Val$[esp+96]
	push	eax
	push	edi
	push	eax
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIH@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Buynode

; 1192 : 
; 1193 : 		++_Mysize;
; 1194 : 		if (_Wherenode == _Myhead)

	mov	ecx, DWORD PTR [ebx+24]
	inc	DWORD PTR [ebx+28]
	mov	ebp, eax
	xor	al, al
	cmp	edi, ecx
	jne	SHORT $LN16@Insert@4

; 1195 : 			{	// first node in tree, just set head values
; 1196 : 			_Root() = _Newnode;

	mov	DWORD PTR [ecx+4], ebp

; 1197 : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

	mov	ecx, DWORD PTR [ebx+24]
	mov	DWORD PTR [ecx], ebp
	mov	edx, DWORD PTR [ebx+24]
	mov	DWORD PTR [edx+8], ebp
	jmp	SHORT $LN11@Insert@4
$LN16@Insert@4:

; 1198 : 			}
; 1199 : 		else if (_Addleft)

	cmp	BYTE PTR __Addleft$[esp+96], al
	je	SHORT $LN14@Insert@4

; 1200 : 			{	// add to left of _Wherenode
; 1201 : 			_Left(_Wherenode) = _Newnode;

	mov	DWORD PTR [edi], ebp

; 1202 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR [ebx+24]
	cmp	edi, DWORD PTR [ecx]
	jne	SHORT $LN11@Insert@4

; 1203 : 				_Lmost() = _Newnode;

	mov	DWORD PTR [ecx], ebp

; 1204 : 			}
; 1205 : 		else

	jmp	SHORT $LN11@Insert@4
$LN14@Insert@4:

; 1206 : 			{	// add to right of _Wherenode
; 1207 : 			_Right(_Wherenode) = _Newnode;

	mov	DWORD PTR [edi+8], ebp

; 1208 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR [ebx+24]
	cmp	edi, DWORD PTR [ecx+8]
	jne	SHORT $LN11@Insert@4

; 1209 : 				_Rmost() = _Newnode;

	mov	DWORD PTR [ecx+8], ebp
$LN11@Insert@4:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	mov	esi, DWORD PTR [ebp+4]
	lea	ecx, DWORD PTR [ebp+4]
	mov	edx, ebp
	cmp	BYTE PTR [esi+20], al
	jne	$LN9@Insert@4
	npad	1
$LL10@Insert@4:

; 1213 : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

	mov	esi, DWORD PTR [ecx]
	mov	edi, DWORD PTR [esi+4]
	cmp	esi, DWORD PTR [edi]
	jne	$LN8@Insert@4

; 1214 : 				{	// fixup red-red in left subtree
; 1215 : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

	mov	edi, DWORD PTR [edi+8]

; 1216 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [edi+20], al
	jne	SHORT $LN7@Insert@4

; 1217 : 					{	// parent has two red children, blacken both
; 1218 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	edx, esi
	mov	BYTE PTR [edx+20], 1

; 1219 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [edi+20], 1

; 1220 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], al

; 1221 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 1222 : 					}
; 1223 : 				else

	jmp	$LN311@Insert@4
$LN7@Insert@4:

; 1224 : 					{	// parent has red and black children
; 1225 : 					if (_Pnode == _Right(_Parent(_Pnode)))

	cmp	edx, DWORD PTR [esi+8]
	jne	SHORT $LN106@Insert@4

; 1226 : 						{	// rotate right child to left
; 1227 : 						_Pnode = _Parent(_Pnode);

	mov	edx, esi

; 1228 : 						_Lrotate(_Pnode);

	mov	esi, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [edx+8], ecx
	mov	ecx, DWORD PTR [esi]
	cmp	BYTE PTR [ecx+21], al
	jne	SHORT $LN105@Insert@4
	mov	DWORD PTR [ecx+4], edx
$LN105@Insert@4:
	mov	edi, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	edx, DWORD PTR [edi+4]
	jne	SHORT $LN104@Insert@4
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN101@Insert@4
$LN104@Insert@4:
	mov	edi, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [edi]
	jne	SHORT $LN102@Insert@4
	mov	DWORD PTR [edi], esi
	jmp	SHORT $LN101@Insert@4
$LN102@Insert@4:
	mov	DWORD PTR [edi+8], esi
$LN101@Insert@4:
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [ecx], esi
$LN106@Insert@4:

; 1229 : 						}
; 1230 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	esi, DWORD PTR [ecx]
	mov	BYTE PTR [esi+20], 1

; 1231 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	esi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [esi+4]
	mov	BYTE PTR [esi+20], al

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

	mov	ecx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]
	mov	edi, DWORD PTR [esi+8]
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR [esi+8]
	cmp	BYTE PTR [edi+21], al
	jne	SHORT $LN168@Insert@4
	mov	DWORD PTR [edi+4], ecx
$LN168@Insert@4:
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	ecx, DWORD PTR [edi+4]
	jne	SHORT $LN167@Insert@4
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [esi+8], ecx

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN380@Insert@4

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

$LN167@Insert@4:
	mov	edi, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN165@Insert@4
	mov	DWORD PTR [edi+8], esi
	mov	DWORD PTR [esi+8], ecx

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN380@Insert@4

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

$LN165@Insert@4:
	mov	DWORD PTR [edi], esi
	mov	DWORD PTR [esi+8], ecx

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN380@Insert@4
$LN8@Insert@4:

; 1236 : 				{	// fixup red-red in right subtree
; 1237 : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

	mov	edi, DWORD PTR [edi]

; 1238 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [edi+20], al
	jne	SHORT $LN3@Insert@4

; 1239 : 					{	// parent has two red children, blacken both
; 1240 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	edx, esi
	mov	BYTE PTR [edx+20], 1

; 1241 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [edi+20], 1

; 1242 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], al

; 1243 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 1244 : 					}
; 1245 : 				else

	jmp	$LN311@Insert@4
$LN3@Insert@4:

; 1246 : 					{	// parent has red and black children
; 1247 : 					if (_Pnode == _Left(_Parent(_Pnode)))

	cmp	edx, DWORD PTR [esi]
	jne	SHORT $LN248@Insert@4

; 1248 : 						{	// rotate left child to right
; 1249 : 						_Pnode = _Parent(_Pnode);

	mov	edx, esi

; 1250 : 						_Rrotate(_Pnode);

	mov	esi, DWORD PTR [edx]
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [esi+8]
	cmp	BYTE PTR [ecx+21], al
	jne	SHORT $LN247@Insert@4
	mov	DWORD PTR [ecx+4], edx
$LN247@Insert@4:
	mov	edi, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	edx, DWORD PTR [edi+4]
	jne	SHORT $LN246@Insert@4
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN243@Insert@4
$LN246@Insert@4:
	mov	edi, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [edi+8]
	jne	SHORT $LN244@Insert@4
	mov	DWORD PTR [edi+8], esi
	jmp	SHORT $LN243@Insert@4
$LN244@Insert@4:
	mov	DWORD PTR [edi], esi
$LN243@Insert@4:
	mov	DWORD PTR [esi+8], edx
	mov	DWORD PTR [ecx], esi
$LN248@Insert@4:

; 1251 : 						}
; 1252 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	esi, DWORD PTR [ecx]
	mov	BYTE PTR [esi+20], 1

; 1253 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	esi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [esi+4]
	mov	BYTE PTR [esi+20], al

; 1254 : 					_Lrotate(_Parent(_Parent(_Pnode)));

	mov	ecx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx+8]
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [ecx+8], edi
	mov	edi, DWORD PTR [esi]
	cmp	BYTE PTR [edi+21], al
	jne	SHORT $LN310@Insert@4
	mov	DWORD PTR [edi+4], ecx
$LN310@Insert@4:
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ebx+24]
	cmp	ecx, DWORD PTR [edi+4]
	jne	SHORT $LN309@Insert@4
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN306@Insert@4
$LN309@Insert@4:
	mov	edi, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN307@Insert@4
	mov	DWORD PTR [edi], esi
	jmp	SHORT $LN306@Insert@4
$LN307@Insert@4:
	mov	DWORD PTR [edi+8], esi
$LN306@Insert@4:
	mov	DWORD PTR [esi], ecx
$LN380@Insert@4:
	mov	DWORD PTR [ecx+4], esi
$LN311@Insert@4:
	mov	esi, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [edx+4]
	cmp	BYTE PTR [esi+20], al
	je	$LL10@Insert@4
$LN9@Insert@4:

; 1255 : 					}
; 1256 : 				}
; 1257 : 
; 1258 : 		_Color(_Root()) = _Black;	// root is always black

	mov	edx, DWORD PTR [ebx+24]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+20], 1

; 1259 : 		return (_TREE_ITERATOR(_Newnode));

	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+96]

; 1260 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR __$EHRec$[esp+92]
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 84					; 00000054H
	ret	16					; 00000010H
$LN379@Insert@4:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z$0:
	lea	ecx, DWORD PTR $T154152[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
;	COMDAT ??0?$map@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> > >::map<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> > >, COMDAT
; _this$ = esi

; 103  : 		{	// construct empty map from defaults

	push	esi
	call	??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >

; 104  : 		}

	mov	eax, esi
	ret	0
??0?$map@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> > >::map<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT
$T154965 = -24						; size = 1
__Num$ = -24						; size = 4
$T154953 = -20						; size = 8
__Where$ = -20						; size = 16
?erase@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::erase, COMDAT
; _this$ = esi
; __Keyval$ = eax

; 949  : 		{	// erase and count all that match _Keyval

	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	edi

; 950  : 		_Pairii _Where = equal_range(_Keyval);

	push	eax
	push	esi
	lea	eax, DWORD PTR __Where$[esp+44]
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Eqrange

; 951  : 		size_type _Num = 0;
; 952  : 		_Distance(_Where.first, _Where.second, _Num);

	mov	ebx, DWORD PTR __Where$[esp+48]
	mov	ebp, DWORD PTR __Where$[esp+44]
	mov	edx, DWORD PTR __Where$[esp+40]
	mov	eax, DWORD PTR __Where$[esp+36]
	mov	DWORD PTR __Num$[esp+36], 0
	mov	ecx, DWORD PTR $T154965[esp+36]
	push	ecx
	push	ebx
	push	ebp
	push	edx
	push	eax
	lea	edi, DWORD PTR __Num$[esp+56]
	call	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::iterator,unsigned int>

; 953  : 		erase(_Where.first, _Where.second);

	mov	ecx, DWORD PTR __Where$[esp+60]
	mov	edx, DWORD PTR __Where$[esp+56]
	add	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T154953[esp+52]
	push	eax
	mov	eax, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::erase

; 954  : 		return (_Num);

	mov	eax, DWORD PTR __Num$[esp+36]

; 955  : 		}

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
?erase@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
$T154982 = -12						; size = 8
$T154980 = -12						; size = 8
__Where$101830 = -12					; size = 8
__Addleft$ = 8						; size = 1
_this$ = 8						; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::insert, COMDAT
; ___$ReturnUdt$ = edi

; 630  : 		{	// try to insert node with value _Val

	sub	esp, 16					; 00000010H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+16]
	push	ebp

; 631  : 		_Nodeptr _Trynode = _Root();

	mov	ebp, DWORD PTR [ebx+24]
	mov	eax, DWORD PTR [ebp+4]

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty
; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [eax+21], 0
	mov	cl, 1
	push	esi
	mov	BYTE PTR __Addleft$[esp+24], cl
	jne	SHORT $LN9@insert@2

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	ecx, DWORD PTR __Val$[esp+24]
	mov	edx, DWORD PTR [ecx]
$LL10@insert@2:
	cmp	edx, DWORD PTR [eax+12]
	mov	ebp, eax
	setb	cl
	mov	BYTE PTR __Addleft$[esp+24], cl
	test	cl, cl
	je	SHORT $LN13@insert@2

; 635  : 			{	// look for leaf to insert before (_Addleft) or after
; 636  : 			_Wherenode = _Trynode;
; 637  : 			_Addleft = _DEBUG_LT_PRED(this->comp,
; 638  : 				this->_Kfn(_Val), _Key(_Trynode));
; 639  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@insert@2
$LN13@insert@2:
	mov	eax, DWORD PTR [eax+8]
$LN14@insert@2:

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty
; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@insert@2
$LN9@insert@2:

; 640  : 			}
; 641  : 
; 642  : 		if (this->_Multi)
; 643  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 644  : 		else
; 645  : 			{	// insert only if unique
; 646  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);

	mov	eax, DWORD PTR [ebx]
	mov	edx, ebp
	mov	DWORD PTR __Where$101830[esp+32], edx
	mov	DWORD PTR __Where$101830[esp+28], eax

; 647  : 			if (!_Addleft)

	test	cl, cl
	je	SHORT $LN90@insert@2

; 648  : 				;	// need to test if insert after is okay
; 649  : 			else if (_Where == begin())

	mov	edx, DWORD PTR [ebx+24]
	mov	esi, DWORD PTR [edx]
	test	eax, eax
	je	SHORT $LN78@insert@2
	cmp	eax, eax
	je	SHORT $LN77@insert@2
$LN78@insert@2:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN77@insert@2:
	cmp	ebp, esi
	jne	SHORT $LN4@insert@2

; 650  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

	mov	eax, DWORD PTR __Val$[esp+24]
	push	eax
	push	1
	lea	ecx, DWORD PTR $T154980[esp+36]
	push	ecx
	push	ebx
	mov	ecx, ebp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi], edx
	mov	BYTE PTR [edi+8], 1

; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));

	mov	eax, edi

; 659  : 			}
; 660  : 		}

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN4@insert@2:

; 651  : 			else
; 652  : 				--_Where;	// need to test if insert before is okay

	lea	esi, DWORD PTR __Where$101830[esp+28]
	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::_Dec
	mov	edx, DWORD PTR __Where$101830[esp+32]
	mov	eax, DWORD PTR __Where$101830[esp+28]
$LN90@insert@2:

; 653  : 
; 654  : 			if (_DEBUG_LT_PRED(this->comp,

	mov	esi, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR __Val$[esp+24]
	cmp	esi, DWORD PTR [ecx]
	jae	SHORT $LN2@insert@2

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	push	ecx
	mov	ecx, DWORD PTR __Addleft$[esp+28]
	push	ecx
	lea	edx, DWORD PTR $T154982[esp+36]
	push	edx
	push	ebx
	mov	ecx, ebp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edi], ecx
	mov	BYTE PTR [edi+8], 1

; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));

	mov	DWORD PTR [edi+4], edx
	mov	eax, edi

; 659  : 			}
; 660  : 		}

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN2@insert@2:
	pop	esi
	pop	ebp
	mov	DWORD PTR [edi], eax
	mov	BYTE PTR [edi+8], 0
	mov	DWORD PTR [edi+4], edx
	mov	eax, edi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >, COMDAT
; _this$ = esi

; 103  : 		{	// construct empty map from defaults

	push	esi
	call	??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >

; 104  : 		}

	mov	eax, esi
	ret	0
??0?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABI@Z
_TEXT	SEGMENT
$T155248 = -24						; size = 1
__Num$ = -24						; size = 4
$T155236 = -20						; size = 8
__Where$ = -20						; size = 16
?erase@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::erase, COMDAT
; _this$ = esi
; __Keyval$ = eax

; 949  : 		{	// erase and count all that match _Keyval

	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	edi

; 950  : 		_Pairii _Where = equal_range(_Keyval);

	push	eax
	push	esi
	lea	eax, DWORD PTR __Where$[esp+44]
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Eqrange

; 951  : 		size_type _Num = 0;
; 952  : 		_Distance(_Where.first, _Where.second, _Num);

	mov	ebx, DWORD PTR __Where$[esp+48]
	mov	ebp, DWORD PTR __Where$[esp+44]
	mov	edx, DWORD PTR __Where$[esp+40]
	mov	eax, DWORD PTR __Where$[esp+36]
	mov	DWORD PTR __Num$[esp+36], 0
	mov	ecx, DWORD PTR $T155248[esp+36]
	push	ecx
	push	ebx
	push	ebp
	push	edx
	push	eax
	lea	edi, DWORD PTR __Num$[esp+56]
	call	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::iterator,unsigned int>

; 953  : 		erase(_Where.first, _Where.second);

	mov	ecx, DWORD PTR __Where$[esp+60]
	mov	edx, DWORD PTR __Where$[esp+56]
	add	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T155236[esp+52]
	push	eax
	mov	eax, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::erase

; 954  : 		return (_Num);

	mov	eax, DWORD PTR __Num$[esp+36]

; 955  : 		}

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
?erase@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
$T155265 = -12						; size = 8
$T155263 = -12						; size = 8
__Where$101713 = -12					; size = 8
__Addleft$ = 8						; size = 1
_this$ = 8						; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::insert, COMDAT
; ___$ReturnUdt$ = edi

; 630  : 		{	// try to insert node with value _Val

	sub	esp, 16					; 00000010H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+16]
	push	ebp

; 631  : 		_Nodeptr _Trynode = _Root();

	mov	ebp, DWORD PTR [ebx+24]
	mov	eax, DWORD PTR [ebp+4]

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty
; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [eax+21], 0
	mov	cl, 1
	push	esi
	mov	BYTE PTR __Addleft$[esp+24], cl
	jne	SHORT $LN9@insert@3

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	ecx, DWORD PTR __Val$[esp+24]
	mov	edx, DWORD PTR [ecx]
$LL10@insert@3:
	cmp	edx, DWORD PTR [eax+12]
	mov	ebp, eax
	setb	cl
	mov	BYTE PTR __Addleft$[esp+24], cl
	test	cl, cl
	je	SHORT $LN13@insert@3

; 635  : 			{	// look for leaf to insert before (_Addleft) or after
; 636  : 			_Wherenode = _Trynode;
; 637  : 			_Addleft = _DEBUG_LT_PRED(this->comp,
; 638  : 				this->_Kfn(_Val), _Key(_Trynode));
; 639  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@insert@3
$LN13@insert@3:
	mov	eax, DWORD PTR [eax+8]
$LN14@insert@3:

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty
; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@insert@3
$LN9@insert@3:

; 640  : 			}
; 641  : 
; 642  : 		if (this->_Multi)
; 643  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 644  : 		else
; 645  : 			{	// insert only if unique
; 646  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);

	mov	eax, DWORD PTR [ebx]
	mov	edx, ebp
	mov	DWORD PTR __Where$101713[esp+32], edx
	mov	DWORD PTR __Where$101713[esp+28], eax

; 647  : 			if (!_Addleft)

	test	cl, cl
	je	SHORT $LN90@insert@3

; 648  : 				;	// need to test if insert after is okay
; 649  : 			else if (_Where == begin())

	mov	edx, DWORD PTR [ebx+24]
	mov	esi, DWORD PTR [edx]
	test	eax, eax
	je	SHORT $LN78@insert@3
	cmp	eax, eax
	je	SHORT $LN77@insert@3
$LN78@insert@3:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN77@insert@3:
	cmp	ebp, esi
	jne	SHORT $LN4@insert@3

; 650  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

	mov	eax, DWORD PTR __Val$[esp+24]
	push	eax
	push	1
	lea	ecx, DWORD PTR $T155263[esp+36]
	push	ecx
	push	ebx
	mov	ecx, ebp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Insert
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi], edx
	mov	BYTE PTR [edi+8], 1

; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));

	mov	eax, edi

; 659  : 			}
; 660  : 		}

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN4@insert@3:

; 651  : 			else
; 652  : 				--_Where;	// need to test if insert before is okay

	lea	esi, DWORD PTR __Where$101713[esp+28]
	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::const_iterator::_Dec
	mov	edx, DWORD PTR __Where$101713[esp+32]
	mov	eax, DWORD PTR __Where$101713[esp+28]
$LN90@insert@3:

; 653  : 
; 654  : 			if (_DEBUG_LT_PRED(this->comp,

	mov	esi, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR __Val$[esp+24]
	cmp	esi, DWORD PTR [ecx]
	jae	SHORT $LN2@insert@3

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	push	ecx
	mov	ecx, DWORD PTR __Addleft$[esp+28]
	push	ecx
	lea	edx, DWORD PTR $T155265[esp+36]
	push	edx
	push	ebx
	mov	ecx, ebp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Insert
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edi], ecx
	mov	BYTE PTR [edi+8], 1

; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));

	mov	DWORD PTR [edi+4], edx
	mov	eax, edi

; 659  : 			}
; 660  : 		}

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN2@insert@3:
	pop	esi
	pop	ebp
	mov	DWORD PTR [edi], eax
	mov	BYTE PTR [edi+8], 0
	mov	DWORD PTR [edi+4], edx
	mov	eax, edi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
?insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??0?$map@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >::map<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >, COMDAT
; _this$ = esi

; 103  : 		{	// construct empty map from defaults

	push	esi
	call	??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >

; 104  : 		}

	mov	eax, esi
	ret	0
??0?$map@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >::map<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEIABI@Z
_TEXT	SEGMENT
$T155531 = -20						; size = 1
__Num$ = -20						; size = 4
$T155519 = -16						; size = 8
__Where$ = -16						; size = 16
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEIABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase, COMDAT
; _this$ = esi
; __Keyval$ = eax

; 949  : 		{	// erase and count all that match _Keyval

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 24					; 00000018H
	push	ebx
	push	edi

; 950  : 		_Pairii _Where = equal_range(_Keyval);

	push	eax
	push	esi
	lea	eax, DWORD PTR __Where$[esp+40]
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Eqrange

; 951  : 		size_type _Num = 0;
; 952  : 		_Distance(_Where.first, _Where.second, _Num);

	mov	ebx, DWORD PTR __Where$[esp+44]
	mov	edx, DWORD PTR __Where$[esp+40]
	mov	eax, DWORD PTR __Where$[esp+36]
	mov	DWORD PTR __Num$[esp+32], 0
	mov	ecx, DWORD PTR $T155531[esp+32]
	push	ecx
	mov	ecx, DWORD PTR __Where$[esp+36]
	push	ebx
	push	edx
	push	eax
	push	ecx
	lea	edi, DWORD PTR __Num$[esp+52]
	call	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator,unsigned int>

; 953  : 		erase(_Where.first, _Where.second);

	mov	edx, DWORD PTR __Where$[esp+60]
	mov	eax, DWORD PTR __Where$[esp+56]
	mov	ecx, DWORD PTR __Where$[esp+52]
	add	esp, 20					; 00000014H
	push	ebx
	push	edx
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T155519[esp+48]
	push	edx
	mov	eax, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase

; 954  : 		return (_Num);

	mov	eax, DWORD PTR __Num$[esp+32]

; 955  : 		}

	pop	edi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEIABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIH@2@@Z
_TEXT	SEGMENT
$T155547 = -12						; size = 8
$T155545 = -12						; size = 8
__Where$101607 = -12					; size = 8
__Addleft$ = 8						; size = 1
_this$ = 8						; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIH@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::insert, COMDAT
; ___$ReturnUdt$ = edi

; 630  : 		{	// try to insert node with value _Val

	sub	esp, 16					; 00000010H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+16]
	push	ebp

; 631  : 		_Nodeptr _Trynode = _Root();

	mov	ebp, DWORD PTR [ebx+24]
	mov	eax, DWORD PTR [ebp+4]

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty
; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [eax+21], 0
	mov	cl, 1
	push	esi
	mov	BYTE PTR __Addleft$[esp+24], cl
	jne	SHORT $LN9@insert@4

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	ecx, DWORD PTR __Val$[esp+24]
	mov	edx, DWORD PTR [ecx]
$LL10@insert@4:
	cmp	edx, DWORD PTR [eax+12]
	mov	ebp, eax
	setb	cl
	mov	BYTE PTR __Addleft$[esp+24], cl
	test	cl, cl
	je	SHORT $LN13@insert@4

; 635  : 			{	// look for leaf to insert before (_Addleft) or after
; 636  : 			_Wherenode = _Trynode;
; 637  : 			_Addleft = _DEBUG_LT_PRED(this->comp,
; 638  : 				this->_Kfn(_Val), _Key(_Trynode));
; 639  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@insert@4
$LN13@insert@4:
	mov	eax, DWORD PTR [eax+8]
$LN14@insert@4:

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty
; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@insert@4
$LN9@insert@4:

; 640  : 			}
; 641  : 
; 642  : 		if (this->_Multi)
; 643  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 644  : 		else
; 645  : 			{	// insert only if unique
; 646  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);

	mov	eax, DWORD PTR [ebx]
	mov	edx, ebp
	mov	DWORD PTR __Where$101607[esp+32], edx
	mov	DWORD PTR __Where$101607[esp+28], eax

; 647  : 			if (!_Addleft)

	test	cl, cl
	je	SHORT $LN90@insert@4

; 648  : 				;	// need to test if insert after is okay
; 649  : 			else if (_Where == begin())

	mov	edx, DWORD PTR [ebx+24]
	mov	esi, DWORD PTR [edx]
	test	eax, eax
	je	SHORT $LN78@insert@4
	cmp	eax, eax
	je	SHORT $LN77@insert@4
$LN78@insert@4:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN77@insert@4:
	cmp	ebp, esi
	jne	SHORT $LN4@insert@4

; 650  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

	mov	eax, DWORD PTR __Val$[esp+24]
	push	eax
	push	1
	lea	ecx, DWORD PTR $T155545[esp+36]
	push	ecx
	push	ebx
	mov	ecx, ebp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Insert
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi], edx
	mov	BYTE PTR [edi+8], 1

; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));

	mov	eax, edi

; 659  : 			}
; 660  : 		}

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN4@insert@4:

; 651  : 			else
; 652  : 				--_Where;	// need to test if insert before is okay

	lea	esi, DWORD PTR __Where$101607[esp+28]
	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Dec
	mov	edx, DWORD PTR __Where$101607[esp+32]
	mov	eax, DWORD PTR __Where$101607[esp+28]
$LN90@insert@4:

; 653  : 
; 654  : 			if (_DEBUG_LT_PRED(this->comp,

	mov	esi, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR __Val$[esp+24]
	cmp	esi, DWORD PTR [ecx]
	jae	SHORT $LN2@insert@4

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	push	ecx
	mov	ecx, DWORD PTR __Addleft$[esp+28]
	push	ecx
	lea	edx, DWORD PTR $T155547[esp+36]
	push	edx
	push	ebx
	mov	ecx, ebp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBIH@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Insert
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edi], ecx
	mov	BYTE PTR [edi+8], 1

; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));

	mov	DWORD PTR [edi+4], edx
	mov	eax, edi

; 659  : 			}
; 660  : 		}

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN2@insert@4:
	pop	esi
	pop	ebp
	mov	DWORD PTR [edi], eax
	mov	BYTE PTR [edi+8], 0
	mov	DWORD PTR [edi+4], edx
	mov	eax, edi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
?insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIH@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??0?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >, COMDAT
; _this$ = esi

; 103  : 		{	// construct empty map from defaults

	push	esi
	call	??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >

; 104  : 		}

	mov	eax, esi
	ret	0
??0?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\profiler.cpp
_TEXT	ENDS
;	COMDAT ?ThreadDestroyed@CProfiler@@UAGJI@Z
_TEXT	SEGMENT
tv288 = -20						; size = 4
_it$ = -16						; size = 8
$T155799 = -8						; size = 8
_this$ = 8						; size = 4
_threadID$ = 12						; size = 4
?ThreadDestroyed@CProfiler@@UAGJI@Z PROC		; CProfiler::ThreadDestroyed, COMDAT

; 483  : STDMETHODIMP CProfiler::ThreadDestroyed(ThreadID threadID) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi

; 484  : 	this->threadMapCriticalSection.Enter();

	mov	esi, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [esi+92]
	push	edi
	push	eax
	mov	DWORD PTR tv288[esp+36], eax
	call	DWORD PTR __imp__EnterCriticalSection@4

; 485  : 	DebugWriteLine(L"ThreadDestroyed %d", threadID);
; 486  : 	
; 487  : 	TThreadIDMap::iterator it = this->threadIDMap.find(threadID);

	lea	eax, DWORD PTR _threadID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[esp+36]
	lea	edi, DWORD PTR [esi+180]
	push	ecx
	call	?find@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::find

; 488  : 	
; 489  : 	if (it != this->threadIDMap.end()) {

	mov	ebx, DWORD PTR _it$[esp+32]
	mov	edx, DWORD PTR [edi+24]
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR $T155799[esp+36], edx
	test	ebx, ebx
	je	SHORT $LN31@ThreadDest
	cmp	ebx, eax
	je	SHORT $LN30@ThreadDest
$LN31@ThreadDest:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN30@ThreadDest:
	mov	eax, DWORD PTR _it$[esp+36]
	cmp	eax, DWORD PTR $T155799[esp+36]
	je	SHORT $LN4@ThreadDest

; 490  : 		ThreadInfo *data = it->second;

	test	ebx, ebx
	jne	SHORT $LN70@ThreadDest
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN58@ThreadDest:
	mov	ecx, DWORD PTR _it$[esp+36]
	cmp	ecx, DWORD PTR [ebx+24]
	jne	SHORT $LN45@ThreadDest
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN45@ThreadDest:
	mov	edx, DWORD PTR _it$[esp+36]
	mov	ebx, DWORD PTR [edx+16]

; 491  : 		
; 492  : 		this->unmanagedThreadIDMap.erase(data->unmanagedThreadId);

	add	esi, 212				; 000000d4H
	mov	eax, ebx
	call	?erase@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::erase

; 493  : 		this->threadIDMap.erase(threadID);

	lea	eax, DWORD PTR _threadID$[ebp]
	mov	esi, edi
	call	?erase@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEIABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::erase

; 494  : 		
; 495  : 		delete data;

	test	ebx, ebx
	je	SHORT $LN4@ThreadDest
	lea	ecx, DWORD PTR [ebx+8]
	call	DWORD PTR __imp_??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@ThreadDest:

; 496  : 	}
; 497  : 	
; 498  : 	this->threadMapCriticalSection.Leave();

	mov	eax, DWORD PTR tv288[esp+32]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 499  : 	return S_OK;
; 500  : }

	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN70@ThreadDest:

; 490  : 		ThreadInfo *data = it->second;

	mov	ebx, DWORD PTR [ebx]
	jmp	SHORT $LN58@ThreadDest
?ThreadDestroyed@CProfiler@@UAGJI@Z ENDP		; CProfiler::ThreadDestroyed
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ThreadCreated@CProfiler@@UAGJI@Z
_TEXT	SEGMENT
$T156019 = -20						; size = 8
_it$ = -20						; size = 8
$T156021 = -12						; size = 12
_this$ = 8						; size = 4
_threadID$ = 12						; size = 4
?ThreadCreated@CProfiler@@UAGJI@Z PROC			; CProfiler::ThreadCreated, COMDAT

; 463  : STDMETHODIMP CProfiler::ThreadCreated(ThreadID threadID) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi

; 464  : 	this->threadMapCriticalSection.Enter();

	mov	esi, DWORD PTR _this$[ebp]
	push	edi
	lea	ebx, DWORD PTR [esi+92]
	push	ebx
	call	DWORD PTR __imp__EnterCriticalSection@4

; 465  : 	DebugWriteLine(L"ThreadCreated %d", threadID);
; 466  : 	
; 467  : 	TThreadIDMap::iterator it = this->threadIDMap.find(threadID);

	lea	eax, DWORD PTR _threadID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[esp+36]
	lea	edi, DWORD PTR [esi+180]
	push	ecx
	call	?find@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::find

; 468  : 	
; 469  : 	if (it == this->threadIDMap.end()) {

	mov	ecx, DWORD PTR _it$[esp+32]
	mov	esi, DWORD PTR [edi+24]
	mov	eax, DWORD PTR [edi]
	test	ecx, ecx
	je	SHORT $LN30@ThreadCrea
	cmp	ecx, eax
	je	SHORT $LN29@ThreadCrea
$LN30@ThreadCrea:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN29@ThreadCrea:
	cmp	DWORD PTR _it$[esp+36], esi
	jne	SHORT $LN2@ThreadCrea

; 470  : 		ThreadInfo *data = new ThreadInfo();

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN5@ThreadCrea
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	jmp	SHORT $LN6@ThreadCrea
$LN5@ThreadCrea:
	xor	esi, esi
$LN6@ThreadCrea:

; 471  : 		
; 472  : 		data->managedThreadId = threadID;

	mov	eax, DWORD PTR _threadID$[ebp]

; 473  : 		
; 474  : 		this->threadIDMap.insert(TThreadIDPair(threadID, data));

	lea	edx, DWORD PTR $T156019[esp+32]
	push	edx
	push	edi
	lea	edi, DWORD PTR $T156021[esp+40]
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR $T156019[esp+40], eax
	mov	DWORD PTR $T156019[esp+44], esi
	call	?insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::insert
$LN2@ThreadCrea:

; 475  : 	} else {
; 476  : 		DebugWriteLine(L"ThreadCreated %d - did not create thread (already exists)", threadID);
; 477  : 	}
; 478  : 	
; 479  : 	this->threadMapCriticalSection.Leave();

	push	ebx
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 480  : 	return S_OK;
; 481  : }

	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?ThreadCreated@CProfiler@@UAGJI@Z ENDP			; CProfiler::ThreadCreated
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?FunctionUnloadStarted@CProfiler@@UAGJI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_functionID$ = 12					; size = 4
?FunctionUnloadStarted@CProfiler@@UAGJI@Z PROC		; CProfiler::FunctionUnloadStarted, COMDAT

; 454  : STDMETHODIMP CProfiler::FunctionUnloadStarted(FunctionID functionID) {

	push	esi

; 455  : 	mapFunctionCriticalSection.Enter();

	mov	esi, DWORD PTR _this$[esp]
	push	edi
	lea	edi, DWORD PTR [esi+68]
	push	edi
	call	DWORD PTR __imp__EnterCriticalSection@4

; 456  : 	DebugWriteLine(L"FunctionUnloadStarted %d", functionID);
; 457  : 	
; 458  : 	this->functionIDMap.erase(functionID);

	add	esi, 148				; 00000094H
	lea	eax, DWORD PTR _functionID$[esp+4]
	call	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEIABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase

; 459  : 	mapFunctionCriticalSection.Leave();

	push	edi
	call	DWORD PTR __imp__LeaveCriticalSection@4
	pop	edi

; 460  :     return S_OK;

	xor	eax, eax
	pop	esi

; 461  : }

	ret	8
?FunctionUnloadStarted@CProfiler@@UAGJI@Z ENDP		; CProfiler::FunctionUnloadStarted
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ThreadNameChanged@CProfiler@@UAGJIKQA_W@Z
_TEXT	SEGMENT
tv288 = -24						; size = 4
$T156142 = -20						; size = 8
_it$ = -20						; size = 8
$T156144 = -12						; size = 12
_this$ = 8						; size = 4
_threadID$ = 12						; size = 4
_cchName$ = 16						; size = 4
_name$ = 20						; size = 4
?ThreadNameChanged@CProfiler@@UAGJIKQA_W@Z PROC		; CProfiler::ThreadNameChanged, COMDAT

; 425  : STDMETHODIMP CProfiler::ThreadNameChanged(ThreadID threadID, ULONG cchName, WCHAR name[]) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi

; 426  : 	this->threadMapCriticalSection.Enter();

	mov	esi, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [esi+92]
	push	edi
	push	eax
	mov	DWORD PTR tv288[esp+44], eax
	call	DWORD PTR __imp__EnterCriticalSection@4

; 427  : 	DebugWriteLine(L"ThreadNameChanged %d, %s", threadID, name);
; 428  : 	
; 429  : 	TThreadIDMap::iterator it = this->threadIDMap.find(threadID);

	lea	eax, DWORD PTR _threadID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[esp+44]
	lea	edi, DWORD PTR [esi+180]
	push	ecx
	call	?find@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::find

; 430  : 	
; 431  : 	ThreadInfo *data;
; 432  : 	
; 433  : 	if (it != this->threadIDMap.end()) {

	mov	esi, DWORD PTR _it$[esp+40]
	mov	ebx, DWORD PTR [edi+24]
	mov	eax, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN32@ThreadName
	cmp	esi, eax
	je	SHORT $LN31@ThreadName
$LN32@ThreadName:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN31@ThreadName:
	cmp	DWORD PTR _it$[esp+44], ebx
	je	SHORT $LN2@ThreadName

; 434  : 		DebugWriteLine(L"Thread %d, %s exists", threadID, name);
; 435  : 		data = it->second;

	test	esi, esi
	jne	SHORT $LN72@ThreadName
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN59@ThreadName:
	mov	edx, DWORD PTR _it$[esp+44]
	cmp	edx, DWORD PTR [esi+24]
	jne	SHORT $LN46@ThreadName
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN46@ThreadName:
	mov	eax, DWORD PTR _it$[esp+44]
	mov	eax, DWORD PTR [eax+16]

; 436  : 		
; 437  : 		data->managedThreadId = threadID;

	mov	ecx, DWORD PTR _threadID$[ebp]

; 438  : 		data->threadName.assign(name, cchName);

	mov	edx, DWORD PTR _cchName$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR _name$[ebp]
	push	edx
	push	ecx
	lea	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z

; 439  : 	} else {

	jmp	SHORT $LN1@ThreadName
$LN72@ThreadName:

; 434  : 		DebugWriteLine(L"Thread %d, %s exists", threadID, name);
; 435  : 		data = it->second;

	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LN59@ThreadName
$LN2@ThreadName:

; 440  : 		DebugWriteLine(L"Thread %d, %s does not exist", threadID, name);
; 441  : 		data = new ThreadInfo();

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN5@ThreadName
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	jmp	SHORT $LN6@ThreadName
$LN5@ThreadName:
	xor	esi, esi
$LN6@ThreadName:

; 442  : 		
; 443  : 		data->managedThreadId = threadID;
; 444  : 		data->threadName.assign(name, cchName);

	mov	edx, DWORD PTR _cchName$[ebp]
	mov	eax, DWORD PTR _name$[ebp]
	mov	ebx, DWORD PTR _threadID$[ebp]
	push	edx
	push	eax
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+4], ebx
	call	DWORD PTR __imp_?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z

; 445  : 		
; 446  : 		this->threadIDMap.insert(TThreadIDPair(threadID, data));

	lea	ecx, DWORD PTR $T156142[esp+40]
	push	ecx
	push	edi
	lea	edi, DWORD PTR $T156144[esp+48]
	mov	DWORD PTR $T156142[esp+48], ebx
	mov	DWORD PTR $T156142[esp+52], esi
	call	?insert@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::insert
$LN1@ThreadName:

; 447  : 	}
; 448  : 			
; 449  : 	this->threadMapCriticalSection.Leave();

	mov	edx, DWORD PTR tv288[esp+40]
	push	edx
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 450  : 	return S_OK;
; 451  : }

	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ThreadNameChanged@CProfiler@@UAGJIKQA_W@Z ENDP		; CProfiler::ThreadNameChanged
_TEXT	ENDS
PUBLIC	??0CProfiler@@QAE@XZ				; CProfiler::CProfiler
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0CProfiler@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CProfiler@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CProfiler@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CProfiler@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CProfiler@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CProfiler@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CProfiler@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CProfiler@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CProfiler@@QAE@XZ$7
__ehfuncinfo$??0CProfiler@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??0CProfiler@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\profiler.cpp
xdata$x	ENDS
;	COMDAT ??0CProfiler@@QAE@XZ
_TEXT	SEGMENT
$T156400 = -24						; size = 4
$T156386 = -24						; size = 4
$T156371 = -24						; size = 4
$T156393 = -20						; size = 4
$T156379 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CProfiler@@QAE@XZ PROC				; CProfiler::CProfiler, COMDAT

; 242  : CProfiler::CProfiler() {

	push	-1
	push	__ehhandler$??0CProfiler@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	esi, DWORD PTR __imp__InitializeCriticalSectionAndSpinCount@8
	push	-2147482624				; 80000400H
	push	OFFSET ?profiler@@3VCProfiler@@A+20
	mov	DWORD PTR _this$[esp+36], OFFSET ?profiler@@3VCProfiler@@A ; profiler
	mov	DWORD PTR ?profiler@@3VCProfiler@@A, OFFSET ??_7CProfiler@@6B@
	call	esi
	test	eax, eax
	jne	SHORT $LN14@CProfiler
	push	OFFSET __TI2PAD
	lea	eax, DWORD PTR $T156371[esp+32]
	push	eax
	mov	DWORD PTR $T156371[esp+36], OFFSET ??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	call	__CxxThrowException@8
$LN53@CProfiler:
$LN14@CProfiler:
	push	edi
	push	-2147482624				; 80000400H
	xor	edi, edi
	push	OFFSET ?profiler@@3VCProfiler@@A+44
	mov	DWORD PTR __$EHRec$[esp+48], edi
	call	esi
	test	eax, eax
	jne	SHORT $LN18@CProfiler
	push	OFFSET __TI2PAD
	lea	ecx, DWORD PTR $T156379[esp+36]
	push	ecx
	mov	DWORD PTR $T156379[esp+40], OFFSET ??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	call	__CxxThrowException@8
$LN54@CProfiler:
$LN18@CProfiler:
	push	-2147482624				; 80000400H
	push	OFFSET ?profiler@@3VCProfiler@@A+68
	mov	BYTE PTR __$EHRec$[esp+48], 1
	call	esi
	test	eax, eax
	jne	SHORT $LN21@CProfiler
	push	OFFSET __TI2PAD
	lea	edx, DWORD PTR $T156386[esp+36]
	push	edx
	mov	DWORD PTR $T156386[esp+40], OFFSET ??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	call	__CxxThrowException@8
$LN55@CProfiler:
$LN21@CProfiler:
	push	-2147482624				; 80000400H
	push	OFFSET ?profiler@@3VCProfiler@@A+92
	mov	BYTE PTR __$EHRec$[esp+48], 2
	call	esi
	test	eax, eax
	jne	SHORT $LN24@CProfiler
	push	OFFSET __TI2PAD
	lea	eax, DWORD PTR $T156393[esp+36]
	push	eax
	mov	DWORD PTR $T156393[esp+40], OFFSET ??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	call	__CxxThrowException@8
$LN56@CProfiler:
$LN24@CProfiler:
	push	-2147482624				; 80000400H
	push	OFFSET ?profiler@@3VCProfiler@@A+116
	mov	BYTE PTR __$EHRec$[esp+48], 3
	call	esi
	test	eax, eax
	jne	SHORT $LN27@CProfiler
	push	OFFSET __TI2PAD
	lea	ecx, DWORD PTR $T156400[esp+36]
	push	ecx
	mov	DWORD PTR $T156400[esp+40], OFFSET ??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	call	__CxxThrowException@8
$LN57@CProfiler:
$LN27@CProfiler:
	push	OFFSET ?profiler@@3VCProfiler@@A+148
	mov	BYTE PTR __$EHRec$[esp+44], 4
	call	??0?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIH@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
	push	OFFSET ?profiler@@3VCProfiler@@A+180
	mov	BYTE PTR __$EHRec$[esp+44], 5
	call	??0?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >
	push	OFFSET ?profiler@@3VCProfiler@@A+212
	mov	BYTE PTR __$EHRec$[esp+44], 6
	call	??0?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >
	push	OFFSET ?profiler@@3VCProfiler@@A+244
	mov	BYTE PTR __$EHRec$[esp+44], 7
	call	??0?$_Tree@V?$_Tmap_traits@IVHandlerInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVHandlerInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >::_Tree<std::_Tmap_traits<unsigned int,HandlerInfo,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,HandlerInfo> >,0> >

; 243  : 	this->pICorProfilerInfo = nullptr;
; 244  : 	this->pICorProfilerInfo2 = nullptr;
; 245  : 	this->sigReader = nullptr;
; 246  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR ?profiler@@3VCProfiler@@A+4, edi
	mov	DWORD PTR ?profiler@@3VCProfiler@@A+8, edi
	mov	DWORD PTR ?profiler@@3VCProfiler@@A+144, edi
	pop	edi
	mov	eax, OFFSET ?profiler@@3VCProfiler@@A	; profiler
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 24					; 00000018H
	ret	0
$LN52@CProfiler:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CProfiler@@QAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	jmp	??1CriticalSection@@QAE@XZ		; CriticalSection::~CriticalSection
__unwindfunclet$??0CProfiler@@QAE@XZ$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	jmp	??1CriticalSection@@QAE@XZ		; CriticalSection::~CriticalSection
__unwindfunclet$??0CProfiler@@QAE@XZ$2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	jmp	??1CriticalSection@@QAE@XZ		; CriticalSection::~CriticalSection
__unwindfunclet$??0CProfiler@@QAE@XZ$3:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	jmp	??1CriticalSection@@QAE@XZ		; CriticalSection::~CriticalSection
__unwindfunclet$??0CProfiler@@QAE@XZ$4:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 116				; 00000074H
	jmp	??1CriticalSection@@QAE@XZ		; CriticalSection::~CriticalSection
__unwindfunclet$??0CProfiler@@QAE@XZ$5:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 148				; 00000094H
	push	eax
	call	??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ
	ret	0
__unwindfunclet$??0CProfiler@@QAE@XZ$6:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 180				; 000000b4H
	push	eax
	call	??1?$map@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@@std@@QAE@XZ
	ret	0
__unwindfunclet$??0CProfiler@@QAE@XZ$7:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 212				; 000000d4H
	push	eax
	call	??1?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAE@XZ
	ret	0
__ehhandler$??0CProfiler@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0CProfiler@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CProfiler@@QAE@XZ ENDP				; CProfiler::CProfiler
PUBLIC	?FunctionLeaveGlobal@@YIXXZ			; FunctionLeaveGlobal
; Function compile flags: /Ogtpy
;	COMDAT ?FunctionLeaveGlobal@@YIXXZ
_TEXT	SEGMENT
?FunctionLeaveGlobal@@YIXXZ PROC			; FunctionLeaveGlobal, COMDAT

; 137  : 	ThreadLocalData *data = getThreadLocalData();

	mov	eax, DWORD PTR ?tls_index@@3KA		; tls_index
	push	esi
	push	eax
	call	DWORD PTR __imp__TlsGetValue@4
	mov	esi, eax

; 138  : 
; 139  : 	profiler.EnterLock(data);

	call	?EnterLock@CProfiler@@QAEXPAUThreadLocalData@@@Z ; CProfiler::EnterLock

; 140  : 	
; 141  : 	if (!data->active)

	mov	cl, BYTE PTR [esi+8]
	test	cl, cl
	je	SHORT $LN16@FunctionLe

; 142  : 		goto EXIT;
; 143  : 
; 144  : 	if (data->stack.empty()) {

	mov	edx, DWORD PTR [esi+24]
	cmp	edx, DWORD PTR [esi+20]
	jb	SHORT $LN16@FunctionLe
	push	edi

; 145  : 		//DebugWriteLine(L"FunctionLeaveGlobal (but stack was empty)");
; 146  : 	} else {
; 147  : 		StackEntry &stackTop = data->stack.top();

	mov	edi, edx

; 148  : 		//DebugWriteLine(L"FunctionLeaveGlobal %d", stackTop.function->Id);
; 149  : 		stackTop.frameCount--;

	add	DWORD PTR [edi+16], -1

; 150  : 		if (stackTop.frameCount == 0) {

	jne	SHORT $LN18@FunctionLe

; 151  : 			stackTop.function->TimeSpent += (__rdtsc() - stackTop.startTime);

	mov	ecx, DWORD PTR [edi]
	rdtsc
	sub	eax, DWORD PTR [edi+8]
	sbb	edx, DWORD PTR [edi+12]
	add	DWORD PTR [ecx+8], eax
	adc	DWORD PTR [ecx+12], edx

; 152  : 			data->stack.pop();

	add	DWORD PTR [esi+24], -24			; ffffffe8H
$LN18@FunctionLe:
	pop	edi
$LN16@FunctionLe:

; 153  : 		}
; 154  : 	}
; 155  : 	
; 156  : EXIT:
; 157  : 	data->inLock = 0;

	mov	DWORD PTR [esi+4], 0
$EXIT$99144:
	pop	esi

; 158  : }

	ret	0
?FunctionLeaveGlobal@@YIXXZ ENDP			; FunctionLeaveGlobal
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 8
$T157459 = -12						; size = 12
$T157458 = -12						; size = 8
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
__Val$ = 16						; size = 4
__Where$ = 20						; size = 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::insert, COMDAT

; 664  : 		{	// try to insert node with value _Val using _Where as a hint

	sub	esp, 24					; 00000018H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+24]

; 665  : 
; 666  :  #if _HAS_ITERATOR_DEBUGGING
; 667  : 		if (_Where._Mycont != this)
; 668  : 			_DEBUG_ERROR("map/set insert iterator outside range");
; 669  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 670  : 
; 671  : 		const_iterator _Next;
; 672  : 
; 673  : 		if (size() == 0)

	cmp	DWORD PTR [ebx+28], 0

; 674  : 			return (_Insert(true, _Myhead, _Val));	// insert into empty tree

	mov	ecx, DWORD PTR [ebx+24]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+28]
	push	esi
	push	edi
	jne	SHORT $LN32@insert@5
	mov	eax, DWORD PTR __Val$[esp+36]
	push	eax
	push	1
	push	ebp
	push	ebx
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert

; 745  : 				}
; 746  : 			}
; 747  : 
; 748  : 		return (insert(_Val).first);	// try usual insert if all else fails

	mov	eax, ebp

; 749  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
$LN32@insert@5:

; 675  : 		else if (this->_Multi)
; 676  : 			{	// insert even if duplicate
; 677  : 			if (_Where == begin())
; 678  : 				{	// insert at beginning if before first element
; 679  : 				if (!_DEBUG_LT_PRED(this->comp,
; 680  : 					_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 681  : 					return (_Insert(true, _Where._Mynode(), _Val));
; 682  : 				}
; 683  : 			else if (_Where == end())
; 684  : 				{	// insert at end if after last element
; 685  : 				if (!_DEBUG_LT_PRED(this->comp,
; 686  : 					this->_Kfn(_Val), _Key(_Rmost())))
; 687  : 					return (_Insert(false, _Rmost(), _Val));
; 688  : 				}
; 689  : 			else if (!_DEBUG_LT_PRED(this->comp,
; 690  : 				_Key(_Where._Mynode()), this->_Kfn(_Val))
; 691  : 				&& !_DEBUG_LT_PRED(this->comp,
; 692  : 					this->_Kfn(_Val), _Key((--(_Next = _Where))._Mynode())))
; 693  : 				{	// insert before _Where
; 694  : 				if (_Isnil(_Right(_Next._Mynode())))
; 695  : 					return (_Insert(false, _Next._Mynode(), _Val));
; 696  : 				else
; 697  : 					return (_Insert(true, _Where._Mynode(), _Val));
; 698  : 				}
; 699  : 			else if (!_DEBUG_LT_PRED(this->comp,
; 700  : 				this->_Kfn(_Val), _Key(_Where._Mynode()))
; 701  : 				&& (++(_Next = _Where) == end()
; 702  : 					|| !_DEBUG_LT_PRED(this->comp,
; 703  : 						_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 704  : 				{	// insert after _Where
; 705  : 				if (_Isnil(_Right(_Where._Mynode())))
; 706  : 					return (_Insert(false, _Where._Mynode(), _Val));
; 707  : 				else
; 708  : 					return (_Insert(true, _Next._Mynode(), _Val));
; 709  : 				}
; 710  : 			}
; 711  : 		else
; 712  : 			{	// insert only if unique
; 713  : 			if (_Where == begin())

	mov	eax, DWORD PTR __Where$[esp+36]
	mov	esi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ebx]
	mov	edi, DWORD PTR __imp___invalid_parameter_noinfo
	test	eax, eax
	je	SHORT $LN254@insert@5
	cmp	eax, ecx
	je	SHORT $LN253@insert@5
$LN254@insert@5:
	call	edi
	mov	eax, DWORD PTR __Where$[esp+36]
$LN253@insert@5:
	mov	ecx, DWORD PTR __Where$[esp+40]
	cmp	ecx, esi
	jne	SHORT $LN14@insert@5

; 714  : 				{	// insert at beginning if before first element
; 715  : 				if (_DEBUG_LT_PRED(this->comp,

	mov	eax, DWORD PTR __Val$[esp+36]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+12]
	jae	$LN1@insert@5

; 716  : 					this->_Kfn(_Val), _Key(_Where._Mynode())))
; 717  : 					return (_Insert(true, _Where._Mynode(), _Val));

	push	eax
	push	1
	push	ebp
	push	ebx
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert

; 745  : 				}
; 746  : 			}
; 747  : 
; 748  : 		return (insert(_Val).first);	// try usual insert if all else fails

	mov	eax, ebp

; 749  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
$LN14@insert@5:

; 718  : 				}
; 719  : 			else if (_Where == end())

	mov	esi, DWORD PTR [ebx+24]
	mov	edx, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN297@insert@5
	cmp	eax, edx
	je	SHORT $LN296@insert@5
$LN297@insert@5:
	call	edi
	mov	ecx, DWORD PTR __Where$[esp+40]
	mov	eax, DWORD PTR __Where$[esp+36]
$LN296@insert@5:
	cmp	ecx, esi
	jne	SHORT $LN11@insert@5

; 720  : 				{	// insert at end if after last element
; 721  : 				if (_DEBUG_LT_PRED(this->comp,

	mov	eax, DWORD PTR [ebx+24]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Val$[esp+36]
	cmp	edx, DWORD PTR [eax]
	jae	$LN414@insert@5

; 722  : 					_Key(_Rmost()), this->_Kfn(_Val)))
; 723  : 					return (_Insert(false, _Rmost(), _Val));

	mov	edx, eax
	push	edx
$LN417@insert@5:
	push	0
	push	ebp
	push	ebx
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert

; 745  : 				}
; 746  : 			}
; 747  : 
; 748  : 		return (insert(_Val).first);	// try usual insert if all else fails

	mov	eax, ebp

; 749  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
$LN11@insert@5:

; 724  : 				}
; 725  : 			else if (_DEBUG_LT_PRED(this->comp,
; 726  : 				this->_Kfn(_Val), _Key(_Where._Mynode()))
; 727  : 				&& _DEBUG_LT_PRED(this->comp,

	mov	edi, DWORD PTR __Val$[esp+36]
	mov	edx, DWORD PTR [edi]
	cmp	DWORD PTR [ecx+12], edx
	jbe	SHORT $LN416@insert@5
	lea	esi, DWORD PTR __Next$[esp+40]
	mov	DWORD PTR __Next$[esp+40], eax
	mov	DWORD PTR __Next$[esp+44], ecx
	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::_Dec
	mov	edx, DWORD PTR [edi]
	mov	ecx, DWORD PTR __Next$[esp+44]
	cmp	DWORD PTR [ecx+12], edx
	jae	SHORT $LN413@insert@5

; 728  : 					_Key((--(_Next = _Where))._Mynode()), this->_Kfn(_Val)))
; 729  : 				{	// insert before _Where
; 730  : 				if (_Isnil(_Right(_Next._Mynode())))

	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0

; 731  : 					return (_Insert(false, _Next._Mynode(), _Val));

	push	edi
	jne	SHORT $LN417@insert@5

; 732  : 				else
; 733  : 					return (_Insert(true, _Where._Mynode(), _Val));

	mov	ecx, DWORD PTR __Where$[esp+44]
	push	1
	push	ebp
	push	ebx
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert

; 745  : 				}
; 746  : 			}
; 747  : 
; 748  : 		return (insert(_Val).first);	// try usual insert if all else fails

	mov	eax, ebp

; 749  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
$LN413@insert@5:

; 732  : 				else
; 733  : 					return (_Insert(true, _Where._Mynode(), _Val));

	mov	ecx, DWORD PTR __Where$[esp+40]
	mov	eax, DWORD PTR __Where$[esp+36]

; 734  : 				}
; 735  : 			else if (_DEBUG_LT_PRED(this->comp,
; 736  : 				_Key(_Where._Mynode()), this->_Kfn(_Val))
; 737  : 				&& (++(_Next = _Where) == end()
; 738  : 					|| _DEBUG_LT_PRED(this->comp,

	cmp	DWORD PTR [ecx+12], edx
$LN416@insert@5:
	jae	$LN414@insert@5
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR __Next$[esp+44], ecx
	mov	ecx, DWORD PTR [ebx+24]
	lea	esi, DWORD PTR __Next$[esp+40]
	mov	DWORD PTR __Next$[esp+40], eax
	mov	DWORD PTR $T157458[esp+44], ecx
	mov	DWORD PTR $T157458[esp+40], edx
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::_Inc
	lea	esi, DWORD PTR $T157458[esp+40]
	lea	edi, DWORD PTR __Next$[esp+40]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::const_iterator::operator==
	mov	ecx, DWORD PTR __Next$[esp+44]
	test	al, al
	jne	SHORT $LN3@insert@5
	mov	eax, DWORD PTR __Val$[esp+36]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+12]
	jae	SHORT $LN414@insert@5
$LN3@insert@5:

; 739  : 						this->_Kfn(_Val), _Key(_Next._Mynode()))))
; 740  : 				{	// insert after _Where
; 741  : 				if (_Isnil(_Right(_Where._Mynode())))

	mov	eax, DWORD PTR __Where$[esp+40]
	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN2@insert@5

; 742  : 					return (_Insert(false, _Where._Mynode(), _Val));

	mov	ecx, DWORD PTR __Val$[esp+36]
	push	ecx
	push	0
	push	ebp
	push	ebx
	mov	ecx, eax
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert

; 745  : 				}
; 746  : 			}
; 747  : 
; 748  : 		return (insert(_Val).first);	// try usual insert if all else fails

	mov	eax, ebp

; 749  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
$LN2@insert@5:

; 743  : 				else
; 744  : 					return (_Insert(true, _Next._Mynode(), _Val));

	mov	edx, DWORD PTR __Val$[esp+36]
	push	edx
	push	1
	push	ebp
	push	ebx
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::_Insert

; 745  : 				}
; 746  : 			}
; 747  : 
; 748  : 		return (insert(_Val).first);	// try usual insert if all else fails

	mov	eax, ebp

; 749  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
$LN414@insert@5:

; 743  : 				else
; 744  : 					return (_Insert(true, _Next._Mynode(), _Val));

	mov	eax, DWORD PTR __Val$[esp+36]
$LN1@insert@5:

; 745  : 				}
; 746  : 			}
; 747  : 
; 748  : 		return (insert(_Val).first);	// try usual insert if all else fails

	push	eax
	push	ebx
	lea	edi, DWORD PTR $T157459[esp+48]
	call	?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::insert
	mov	ecx, DWORD PTR [eax]

; 749  : 		}

	pop	edi
	mov	DWORD PTR [ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	pop	esi
	mov	DWORD PTR [ebp+4], edx
	mov	eax, ebp
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??A?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAEAAPAVThreadInfo@@ABK@Z
_TEXT	SEGMENT
$T158407 = -20						; size = 8
$T158406 = -20						; size = 8
$T158410 = -12						; size = 8
_this$ = 8						; size = 4
__Keyval$ = 12						; size = 4
??A?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAEAAPAVThreadInfo@@ABK@Z PROC ; std::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::operator[], COMDAT

; 168  : 		{	// find element matching _Keyval or insert with default mapped

	mov	edx, DWORD PTR __Keyval$[esp-4]
	sub	esp, 20					; 00000014H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+20]

; 169  : 		iterator _Where = this->lower_bound(_Keyval);

	mov	ecx, DWORD PTR [ebx+24]
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	jne	SHORT $LN9@operator@34
	mov	ecx, DWORD PTR [edx]
	npad	1
$LL10@operator@34:
	cmp	DWORD PTR [eax+12], ecx
	jae	SHORT $LN8@operator@34
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN7@operator@34
$LN8@operator@34:
	mov	edi, eax
	mov	eax, DWORD PTR [eax]
$LN7@operator@34:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@operator@34
$LN9@operator@34:
	mov	esi, DWORD PTR [ebx]

; 170  : 		if (_Where == this->end()
; 171  : 			|| this->comp(_Keyval, this->_Key(_Where._Mynode())))

	mov	eax, DWORD PTR [ebx+24]
	mov	ebp, DWORD PTR __imp___invalid_parameter_noinfo
	mov	DWORD PTR $T158406[esp+40], eax
	test	esi, esi
	je	SHORT $LN68@operator@34
	cmp	esi, esi
	je	SHORT $LN67@operator@34
$LN68@operator@34:
	call	ebp
	mov	edx, DWORD PTR __Keyval$[esp+32]
	mov	ebp, DWORD PTR __imp___invalid_parameter_noinfo
$LN67@operator@34:
	cmp	edi, DWORD PTR $T158406[esp+40]
	je	SHORT $LN1@operator@34
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [edi+12]
	jae	SHORT $LN2@operator@34
$LN1@operator@34:

; 172  : 			_Where = this->insert(_Where,
; 173  : 				value_type(_Keyval, mapped_type()));

	mov	edx, DWORD PTR [edx]
	push	edi
	push	esi
	lea	eax, DWORD PTR $T158407[esp+44]
	push	eax
	lea	ecx, DWORD PTR $T158410[esp+48]
	push	ecx
	push	ebx
	mov	DWORD PTR $T158407[esp+56], edx
	mov	DWORD PTR $T158407[esp+60], 0
	call	?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::insert
	mov	esi, DWORD PTR [eax]
	mov	edi, DWORD PTR [eax+4]
$LN2@operator@34:

; 174  : 		return ((*_Where).second);

	test	esi, esi
	jne	SHORT $LN111@operator@34
	call	ebp
$LN105@operator@34:
	cmp	edi, DWORD PTR [esi+24]
	jne	SHORT $LN112@operator@34
	call	ebp
$LN112@operator@34:
	lea	eax, DWORD PTR [edi+16]

; 175  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
$LN111@operator@34:

; 174  : 		return ((*_Where).second);

	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LN105@operator@34
??A?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAEAAPAVThreadInfo@@ABK@Z ENDP ; std::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::operator[]
; Function compile flags: /Ogtpy
; File e:\program\c#\sharpdevelop5\src\addins\analysis\profiler\hook\profiler.cpp
_TEXT	ENDS
;	COMDAT ?ExceptionUnwindFunctionLeave@CProfiler@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ExceptionUnwindFunctionLeave@CProfiler@@UAGJXZ PROC	; CProfiler::ExceptionUnwindFunctionLeave, COMDAT

; 508  : 	DebugWriteLine(L"ExceptionUnwindFunctionLeave");
; 509  : 	FunctionLeaveGlobal();

	mov	eax, DWORD PTR ?tls_index@@3KA		; tls_index
	push	esi
	push	eax
	call	DWORD PTR __imp__TlsGetValue@4
	mov	esi, eax
	call	?EnterLock@CProfiler@@QAEXPAUThreadLocalData@@@Z ; CProfiler::EnterLock
	mov	cl, BYTE PTR [esi+8]
	test	cl, cl
	je	SHORT $LN18@ExceptionU
	mov	edx, DWORD PTR [esi+24]
	cmp	edx, DWORD PTR [esi+20]
	jb	SHORT $LN18@ExceptionU
	push	edi
	mov	edi, edx
	add	DWORD PTR [edi+16], -1
	jne	SHORT $LN20@ExceptionU
	mov	ecx, DWORD PTR [edi]
	rdtsc
	sub	eax, DWORD PTR [edi+8]
	sbb	edx, DWORD PTR [edi+12]
	add	DWORD PTR [ecx+8], eax
	adc	DWORD PTR [ecx+12], edx
	add	DWORD PTR [esi+24], -24			; ffffffe8H
$LN20@ExceptionU:
	pop	edi
$LN18@ExceptionU:
	mov	DWORD PTR [esi+4], 0

; 510  : 	return S_OK;

	xor	eax, eax
$EXIT$158773:
	pop	esi

; 511  : }

	ret	4
?ExceptionUnwindFunctionLeave@CProfiler@@UAGJXZ ENDP	; CProfiler::ExceptionUnwindFunctionLeave
_TEXT	ENDS
PUBLIC	?LogString@CProfiler@@QAAXPA_WZZ		; CProfiler::LogString
; Function compile flags: /Ogtpy
;	COMDAT ?LogString@CProfiler@@QAAXPA_WZZ
_TEXT	SEGMENT
_szBuffer$ = -16384					; size = 16384
_pszFmtString$ = 8					; size = 4
?LogString@CProfiler@@QAAXPA_WZZ PROC			; CProfiler::LogString, COMDAT
; _this$ = edi

; 377  : void CProfiler::LogString(WCHAR *pszFmtString, ...) {

	mov	eax, 16384				; 00004000H
	call	__chkstk

; 378  : 	WCHAR szBuffer[2 * 4096];
; 379  : 
; 380  : 	va_list args;
; 381  : 	va_start( args, pszFmtString );
; 382  : 	vswprintf_s(szBuffer, 2 * 4096, pszFmtString, args );

	mov	ecx, DWORD PTR _pszFmtString$[esp+16380]
	push	esi
	lea	eax, DWORD PTR _pszFmtString$[esp+16388]
	push	eax
	push	ecx
	lea	edx, DWORD PTR _szBuffer$[esp+16396]
	push	8192					; 00002000H
	push	edx
	call	DWORD PTR __imp__vswprintf_s
	add	esp, 16					; 00000010H

; 383  : 	va_end( args );
; 384  : 	
; 385  : 	DebugWriteLine(szBuffer);
; 386  : 	nativeToManagedCriticalSection.Enter();

	lea	esi, DWORD PTR [edi+20]
	push	esi
	call	DWORD PTR __imp__EnterCriticalSection@4

; 387  : 	nativeToManagedBuffer->WriteString(szBuffer);

	lea	eax, DWORD PTR _szBuffer$[esp+16388]
	push	eax
	mov	eax, DWORD PTR [edi+16]
	call	?WriteString@CCircularBuffer@@QAEHPA_W@Z ; CCircularBuffer::WriteString

; 388  : 	nativeToManagedCriticalSection.Leave();

	push	esi
	call	DWORD PTR __imp__LeaveCriticalSection@4
	pop	esi

; 389  : }

	add	esp, 16384				; 00004000H
	ret	0
?LogString@CProfiler@@QAAXPA_WZZ ENDP			; CProfiler::LogString
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Shutdown@CProfiler@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Shutdown@CProfiler@@UAGJXZ PROC			; CProfiler::Shutdown, COMDAT

; 305  : STDMETHODIMP CProfiler::Shutdown() {

	push	edi

; 306  : 	LogString(L"Shutdown...");

	mov	edi, DWORD PTR _this$[esp]
	push	OFFSET ??_C@_1BI@LJPPCMFK@?$AAS?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?4?$AA?4?$AA?4?$AA?$AA@
	call	?LogString@CProfiler@@QAAXPA_WZZ	; CProfiler::LogString
	add	esp, 4

; 307  : 
; 308  :     return S_OK;

	xor	eax, eax
	pop	edi

; 309  : }

	ret	4
?Shutdown@CProfiler@@UAGJXZ ENDP			; CProfiler::Shutdown
_TEXT	ENDS
PUBLIC	?CreateNewRoot@CProfiler@@QAEPAUFunctionInfo@@XZ ; CProfiler::CreateNewRoot
; Function compile flags: /Ogtpy
;	COMDAT ?CreateNewRoot@CProfiler@@QAEPAUFunctionInfo@@XZ
_TEXT	SEGMENT
_newRoot$ = -8						; size = 4
$T158798 = -4						; size = 4
?CreateNewRoot@CProfiler@@QAEPAUFunctionInfo@@XZ PROC	; CProfiler::CreateNewRoot, COMDAT

; 216  : FunctionInfo *CProfiler::CreateNewRoot() {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 217  : 	rootElementCriticalSection.Enter();

	push	OFFSET ?profiler@@3VCProfiler@@A+44
	call	DWORD PTR __imp__EnterCriticalSection@4

; 218  : 	FunctionInfo *oldRoot = sharedMemoryHeader->RootFuncInfo;

	mov	eax, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	mov	esi, DWORD PTR [eax+36]

; 219  : 	FunctionInfo *newRoot = nullptr;
; 220  : 	FunctionInfo *newThreadRoot = oldRoot->GetOrAddChild(getNewPosFunctionID(), newRoot);

	lea	ecx, DWORD PTR _newRoot$[esp+28]
	push	ecx
	mov	DWORD PTR _newRoot$[esp+32], 0
	call	?getNewPosFunctionID@@YAHXZ		; getNewPosFunctionID
	push	eax
	push	esi
	call	?GetOrAddChild@FunctionInfo@@QAEPAU1@HAAPAU1@@Z ; FunctionInfo::GetOrAddChild
	mov	ebx, eax

; 221  : 	if (newRoot != nullptr) {

	mov	eax, DWORD PTR _newRoot$[esp+28]
	test	eax, eax
	je	SHORT $LN8@CreateNewR

; 222  : 		sharedMemoryHeader->RootFuncInfo = newRoot;

	mov	ecx, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	mov	DWORD PTR [ecx+36], eax

; 223  : 		FreeFunctionInfo(oldRoot);

	mov	eax, DWORD PTR [esi+20]
	lea	eax, DWORD PTR [eax*4+28]
	mov	edx, 374152163				; 164d1be3H
	mul	edx
	and	edx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+edx*4+64]
	npad	2
$LL10@CreateNewR:
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ecx
	mov	edi, esi
	mov	ebp, edx
	mov	eax, ecx
	lock	 cmpxchg DWORD PTR [ebp], edi
	cmp	eax, ecx
	jne	SHORT $LL10@CreateNewR
$LN8@CreateNewR:

; 224  : 	}
; 225  : 	rootElementCriticalSection.Leave();

	push	OFFSET ?profiler@@3VCProfiler@@A+44
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 226  : 	
; 227  : 	ThreadInfo *data = this->unmanagedThreadIDMap[GetCurrentThreadId()];

	mov	esi, DWORD PTR __imp__GetCurrentThreadId@0
	call	esi
	mov	DWORD PTR $T158798[esp+28], eax
	lea	eax, DWORD PTR $T158798[esp+28]
	push	eax
	push	OFFSET ?profiler@@3VCProfiler@@A+212
	call	??A?$map@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@@std@@QAEAAPAVThreadInfo@@ABK@Z ; std::map<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> > >::operator[]
	mov	eax, DWORD PTR [eax]

; 228  : 	
; 229  : 	data->functionInfoId = newThreadRoot->Id;

	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR [eax+36], ecx

; 230  : 		
; 231  : 	LogString(L"mapthread %d 0 \"Thread#%d\" \"%s\"", newThreadRoot->Id, GetCurrentThreadId(), data->threadName.c_str());

	cmp	DWORD PTR [eax+32], 8
	jb	SHORT $LN25@CreateNewR
	mov	eax, DWORD PTR [eax+12]
	jmp	SHORT $LN26@CreateNewR
$LN25@CreateNewR:
	add	eax, 12					; 0000000cH
$LN26@CreateNewR:
	push	eax
	call	esi
	mov	edx, DWORD PTR [ebx]
	push	eax
	push	edx
	push	OFFSET ??_C@_1EA@LIAAHHAL@?$AAm?$AAa?$AAp?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA0?$AA?5?$AA?$CC?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CD?$AA?$CF?$AAd?$AA?$CC?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$AA@
	mov	edi, OFFSET ?profiler@@3VCProfiler@@A	; profiler
	call	?LogString@CProfiler@@QAAXPA_WZZ	; CProfiler::LogString
	add	esp, 16					; 00000010H

; 232  : 	
; 233  : 	return newThreadRoot;
; 234  : }

	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	0
?CreateNewRoot@CProfiler@@QAEPAUFunctionInfo@@XZ ENDP	; CProfiler::CreateNewRoot
_TEXT	ENDS
PUBLIC	?MapFunction@CProfiler@@QAEIIPAPB_W@Z		; CProfiler::MapFunction
; Function compile flags: /Ogtpy
;	COMDAT ?MapFunction@CProfiler@@QAEIIPAPB_W@Z
_TEXT	SEGMENT
_asmMetaData$158967 = -52				; size = 4
$T158868 = -52						; size = 12
$T158865 = -52						; size = 8
tv320 = -40						; size = 4
_funcToken$158965 = -36					; size = 4
$T158866 = -36						; size = 8
_it$ = -36						; size = 8
_signature$99363 = -28					; size = 28
_functionID$ = 8					; size = 4
_sigOutput$ = 12					; size = 4
?MapFunction@CProfiler@@QAEIIPAPB_W@Z PROC		; CProfiler::MapFunction, COMDAT
; _this$ = esi

; 189  : UINT_PTR CProfiler::MapFunction(FunctionID functionID, const WCHAR **sigOutput) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 56					; 00000038H
	push	ebx

; 190  : 	mapFunctionCriticalSection.Enter();

	lea	eax, DWORD PTR [esi+68]
	push	edi
	push	eax
	mov	DWORD PTR tv320[esp+68], eax
	call	DWORD PTR __imp__EnterCriticalSection@4

; 191  : 	int clientData = 0;
; 192  : 	
; 193  : 	TFunctionIDMap::iterator it = this->functionIDMap.find(functionID);

	lea	eax, DWORD PTR _functionID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[esp+68]
	lea	edi, DWORD PTR [esi+148]
	push	ecx
	call	?find@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::find

; 194  : 	if (it == this->functionIDMap.end()) {

	mov	ebx, DWORD PTR _it$[esp+64]
	mov	edx, DWORD PTR [edi+24]
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR $T158865[esp+68], edx
	test	ebx, ebx
	je	SHORT $LN32@MapFunctio
	cmp	ebx, eax
	je	SHORT $LN31@MapFunctio
$LN32@MapFunctio:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN31@MapFunctio:
	mov	eax, DWORD PTR _it$[esp+68]
	cmp	eax, DWORD PTR $T158865[esp+68]
	jne	$LN5@MapFunctio

; 195  : 		DebugWriteLine(L"Creating new ID");
; 196  : 		if (sigReader->IsNetInternal(functionID))

	mov	eax, DWORD PTR [esi+144]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _funcToken$158965[esp+64]
	push	edx
	lea	edx, DWORD PTR _asmMetaData$158967[esp+68]
	push	edx
	mov	edx, DWORD PTR _functionID$[ebp]
	push	OFFSET _IID_IMetaDataAssemblyImport
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+76]
	call	eax
	test	eax, eax
	jl	SHORT $LN4@MapFunctio
	mov	eax, DWORD PTR _asmMetaData$158967[esp+64]
	test	eax, eax
	je	SHORT $LN4@MapFunctio
	call	?IsFrameworkAssembly@@YA_NPAUIMetaDataAssemblyImport@@@Z ; IsFrameworkAssembly
	test	al, al
	je	SHORT $LN4@MapFunctio

; 197  : 			clientData = -getNewPosFunctionID(); // negative series

	call	?getNewPosFunctionID@@YAHXZ		; getNewPosFunctionID
	mov	ebx, eax
	neg	ebx

; 198  : 		else

	jmp	SHORT $LN3@MapFunctio
$LN4@MapFunctio:

; 199  : 			clientData = getNewPosFunctionID(); // positive series

	call	?getNewPosFunctionID@@YAHXZ		; getNewPosFunctionID
	mov	ebx, eax
$LN3@MapFunctio:

; 200  : 		this->functionIDMap.insert(TFunctionIDPair(functionID, clientData));

	mov	ecx, DWORD PTR _functionID$[ebp]
	lea	edx, DWORD PTR $T158866[esp+64]
	push	edx
	push	edi
	lea	edi, DWORD PTR $T158868[esp+72]
	mov	DWORD PTR $T158866[esp+72], ecx
	mov	DWORD PTR $T158866[esp+76], ebx
	call	?insert@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIH@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::insert

; 201  : 
; 202  : 		// send to host
; 203  : 		std::wstring signature = sigReader->Parse(functionID);

	mov	edi, DWORD PTR _functionID$[ebp]
	mov	ecx, DWORD PTR [esi+144]
	push	edi
	lea	eax, DWORD PTR _signature$99363[esp+68]
	push	eax
	push	ecx
	call	?Parse@SignatureReader@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z ; SignatureReader::Parse

; 204  : 		if (sigOutput != nullptr)

	mov	ecx, DWORD PTR _sigOutput$[ebp]
	mov	edx, 8
	test	ecx, ecx
	je	SHORT $LN2@MapFunctio

; 205  : 			*sigOutput = sigReader->fullName.c_str();

	mov	eax, DWORD PTR [esi+144]
	add	eax, 4420				; 00001144H
	cmp	DWORD PTR [eax+24], edx
	jb	SHORT $LN51@MapFunctio
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN52@MapFunctio
$LN51@MapFunctio:
	add	eax, 4
$LN52@MapFunctio:
	mov	DWORD PTR [ecx], eax
$LN2@MapFunctio:

; 206  : 		LogString(L"map %d %Id %s", clientData, functionID, signature.c_str());

	mov	eax, DWORD PTR _signature$99363[esp+68]
	cmp	DWORD PTR _signature$99363[esp+88], edx
	jae	SHORT $LN58@MapFunctio
	lea	eax, DWORD PTR _signature$99363[esp+68]
$LN58@MapFunctio:
	push	eax
	push	edi
	push	ebx
	push	OFFSET ??_C@_1BM@IMNIDHAD@?$AAm?$AAa?$AAp?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAI?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AA@
	mov	edi, esi
	call	?LogString@CProfiler@@QAAXPA_WZZ	; CProfiler::LogString
	add	esp, 16					; 00000010H

; 207  : 	} else {

	lea	ecx, DWORD PTR _signature$99363[esp+64]
	call	DWORD PTR __imp_??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ

; 210  : 	}
; 211  : 	mapFunctionCriticalSection.Leave();

	mov	ecx, DWORD PTR tv320[esp+64]
	push	ecx
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 212  : 	
; 213  : 	return clientData;

	mov	eax, ebx

; 214  : }

	pop	edi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN5@MapFunctio:

; 208  : 		DebugWriteLine(L"using old ID");
; 209  : 		clientData = it->second;

	test	ebx, ebx
	jne	SHORT $LN85@MapFunctio
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN78@MapFunctio:
	mov	edx, DWORD PTR _it$[esp+68]
	cmp	edx, DWORD PTR [ebx+24]
	jne	SHORT $LN65@MapFunctio
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN65@MapFunctio:

; 210  : 	}
; 211  : 	mapFunctionCriticalSection.Leave();

	mov	ecx, DWORD PTR tv320[esp+64]
	mov	eax, DWORD PTR _it$[esp+68]
	mov	ebx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 214  : }

	pop	edi
	mov	eax, ebx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN85@MapFunctio:

; 208  : 		DebugWriteLine(L"using old ID");
; 209  : 		clientData = it->second;

	mov	ebx, DWORD PTR [ebx]
	jmp	SHORT $LN78@MapFunctio
?MapFunction@CProfiler@@QAEIIPAPB_W@Z ENDP		; CProfiler::MapFunction
_TEXT	ENDS
PUBLIC	?FunctionMapper@CProfiler@@SGIIPAH@Z		; CProfiler::FunctionMapper
; Function compile flags: /Ogtpy
;	COMDAT ?FunctionMapper@CProfiler@@SGIIPAH@Z
_TEXT	SEGMENT
_functionID$ = 8					; size = 4
___formal$ = 12						; size = 4
?FunctionMapper@CProfiler@@SGIIPAH@Z PROC		; CProfiler::FunctionMapper, COMDAT

; 186  : 	return profiler.MapFunction(functionID, nullptr);

	mov	eax, DWORD PTR _functionID$[esp-4]
	push	esi
	push	0
	push	eax
	mov	esi, OFFSET ?profiler@@3VCProfiler@@A	; profiler
	call	?MapFunction@CProfiler@@QAEIIPAPB_W@Z	; CProfiler::MapFunction
	pop	esi

; 187  : }

	ret	8
?FunctionMapper@CProfiler@@SGIIPAH@Z ENDP		; CProfiler::FunctionMapper
_TEXT	ENDS
PUBLIC	?FunctionTailcallGlobal@@YIXXZ			; FunctionTailcallGlobal
; Function compile flags: /Ogtpy
;	COMDAT ?FunctionTailcallGlobal@@YIXXZ
_TEXT	SEGMENT
?FunctionTailcallGlobal@@YIXXZ PROC			; FunctionTailcallGlobal, COMDAT

; 161  : 	DebugWriteLine(L"FunctionTailcallGlobal");
; 162  : 	// handle tail calls A->B as leave A, enter B, ...
; 163  : 	FunctionLeaveGlobal();

	mov	eax, DWORD PTR ?tls_index@@3KA		; tls_index
	push	esi
	push	eax
	call	DWORD PTR __imp__TlsGetValue@4
	mov	esi, eax
	call	?EnterLock@CProfiler@@QAEXPAUThreadLocalData@@@Z ; CProfiler::EnterLock
	mov	cl, BYTE PTR [esi+8]
	test	cl, cl
	je	SHORT $LN18@FunctionTa
	mov	edx, DWORD PTR [esi+24]
	cmp	edx, DWORD PTR [esi+20]
	jb	SHORT $LN18@FunctionTa
	push	edi
	mov	edi, edx
	add	DWORD PTR [edi+16], -1
	jne	SHORT $LN20@FunctionTa
	mov	ecx, DWORD PTR [edi]
	rdtsc
	sub	eax, DWORD PTR [edi+8]
	sbb	edx, DWORD PTR [edi+12]
	add	DWORD PTR [ecx+8], eax
	adc	DWORD PTR [ecx+12], edx
	add	DWORD PTR [esi+24], -24			; ffffffe8H
$LN20@FunctionTa:
	pop	edi
$LN18@FunctionTa:
	mov	DWORD PTR [esi+4], 0
$EXIT$159132:
	pop	esi

; 164  : 	
; 165  : 	// FunctionTailcallGlobal call will be followed by FunctionEnterGlobal for new function
; 166  : }

	ret	0
?FunctionTailcallGlobal@@YIXXZ ENDP			; FunctionTailcallGlobal
_TEXT	ENDS
PUBLIC	?FunctionEnterCreateNewRoot@@YAXPAUThreadLocalData@@AB_K@Z ; FunctionEnterCreateNewRoot
; Function compile flags: /Ogtpy
;	COMDAT ?FunctionEnterCreateNewRoot@@YAXPAUThreadLocalData@@AB_K@Z
_TEXT	SEGMENT
$T159145 = -24						; size = 24
_data$ = 8						; size = 4
?FunctionEnterCreateNewRoot@@YAXPAUThreadLocalData@@AB_K@Z PROC ; FunctionEnterCreateNewRoot, COMDAT
; _tsc$ = eax

; 55   : __declspec(noinline) void FunctionEnterCreateNewRoot(ThreadLocalData *data, const ULONGLONG &tsc) {

	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi

; 56   : 	DebugWriteLine(L"Creating new root");
; 57   : 	// first function call on this thread
; 58   : 	// create a new root node for this thread
; 59   : 	data->stack.push(StackEntry(profiler.CreateNewRoot(), tsc));

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]
	call	?CreateNewRoot@CProfiler@@QAEPAUFunctionInfo@@XZ ; CProfiler::CreateNewRoot
	mov	ebp, esi
	mov	esi, DWORD PTR _data$[esp+36]
	add	DWORD PTR [esi+24], 24			; 00000018H
	add	esi, 20					; 00000014H
	mov	ebx, eax
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+8]
	jne	SHORT $LN5@FunctionEn
	call	?Enlarge@?$LightweightStack@UStackEntry@@@@QAEXXZ ; LightweightStack<StackEntry>::Enlarge
$LN5@FunctionEn:
	mov	esi, DWORD PTR [esi+4]
	mov	eax, DWORD PTR $T159145[esp+44]
	mov	ecx, DWORD PTR $T159145[esp+60]
	mov	DWORD PTR [esi], ebx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], ebp
	mov	DWORD PTR [esi+12], edi
	mov	eax, 1

; 60   : 	DebugWriteLine(L"Created new root");
; 61   : }

	pop	edi
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], ecx
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
?FunctionEnterCreateNewRoot@@YAXPAUThreadLocalData@@AB_K@Z ENDP ; FunctionEnterCreateNewRoot
; Function compile flags: /Ogtpy
;	COMDAT ?ThreadAssignedToOSThread@CProfiler@@UAGJIK@Z
_TEXT	SEGMENT
tv352 = -32						; size = 4
_it$ = -28						; size = 8
$T159286 = -20						; size = 8
_it2$ = -20						; size = 8
$T159288 = -12						; size = 12
$T159285 = -12						; size = 8
$T159284 = -12						; size = 8
_this$ = 8						; size = 4
_managedThreadID$ = 12					; size = 4
_osThreadID$ = 16					; size = 4
?ThreadAssignedToOSThread@CProfiler@@UAGJIK@Z PROC	; CProfiler::ThreadAssignedToOSThread, COMDAT

; 401  : STDMETHODIMP CProfiler::ThreadAssignedToOSThread(ThreadID managedThreadID, DWORD osThreadID) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 36					; 00000024H
	push	ebx

; 402  : 	this->threadMapCriticalSection.Enter();

	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	lea	eax, DWORD PTR [ebx+92]
	push	edi
	push	eax
	mov	DWORD PTR tv352[esp+52], eax
	call	DWORD PTR __imp__EnterCriticalSection@4

; 403  : 	DebugWriteLine(L"ThreadAssignedToOSThread %d, %d", managedThreadID, osThreadID);
; 404  : 	
; 405  : 	TThreadIDMap::iterator it = this->threadIDMap.find(managedThreadID);

	lea	eax, DWORD PTR _managedThreadID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[esp+52]
	lea	esi, DWORD PTR [ebx+180]
	push	ecx
	mov	edi, esi
	call	?find@?$_Tree@V?$_Tmap_traits@IPAVThreadInfo@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ThreadInfo *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ThreadInfo *> >,0> >::find

; 406  : 	TUThreadIDMap::iterator it2 = this->unmanagedThreadIDMap.find(osThreadID);

	lea	edx, DWORD PTR _osThreadID$[ebp]
	push	edx
	lea	eax, DWORD PTR _it2$[esp+52]
	lea	edi, DWORD PTR [ebx+212]
	push	eax
	call	?find@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::find

; 407  : 	
; 408  : 	if (it != this->threadIDMap.end() && it2 == this->unmanagedThreadIDMap.end()) {

	mov	ecx, DWORD PTR [esi+24]
	mov	eax, DWORD PTR [esi]
	mov	esi, DWORD PTR _it$[esp+48]
	mov	DWORD PTR $T159284[esp+52], ecx
	test	esi, esi
	je	SHORT $LN30@ThreadAssi
	cmp	esi, eax
	je	SHORT $LN29@ThreadAssi
$LN30@ThreadAssi:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN29@ThreadAssi:
	mov	edx, DWORD PTR _it$[esp+52]
	cmp	edx, DWORD PTR $T159284[esp+52]
	je	$LN2@ThreadAssi
	mov	eax, DWORD PTR [edi+24]
	mov	ecx, DWORD PTR _it2$[esp+48]
	mov	DWORD PTR $T159285[esp+52], eax
	mov	eax, DWORD PTR [edi]
	test	ecx, ecx
	je	SHORT $LN59@ThreadAssi
	cmp	ecx, eax
	je	SHORT $LN58@ThreadAssi
$LN59@ThreadAssi:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN58@ThreadAssi:
	mov	ecx, DWORD PTR $T159285[esp+52]
	cmp	DWORD PTR _it2$[esp+52], ecx
	jne	SHORT $LN2@ThreadAssi

; 409  : 		ThreadInfo *data = it->second;

	test	esi, esi
	jne	SHORT $LN97@ThreadAssi
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN86@ThreadAssi:
	mov	edx, DWORD PTR _it$[esp+52]
	cmp	edx, DWORD PTR [esi+24]
	jne	SHORT $LN73@ThreadAssi
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN73@ThreadAssi:
	mov	eax, DWORD PTR _it$[esp+52]
	mov	eax, DWORD PTR [eax+16]

; 410  : 		
; 411  : 		data->managedThreadId = managedThreadID;

	mov	ecx, DWORD PTR _managedThreadID$[ebp]

; 412  : 		data->unmanagedThreadId = osThreadID;
; 413  : 		
; 414  : 		this->unmanagedThreadIDMap.insert(TUThreadIDPair(osThreadID, data));

	lea	edx, DWORD PTR $T159286[esp+48]
	push	edx
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR _osThreadID$[ebp]
	push	edi
	lea	edi, DWORD PTR $T159288[esp+56]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR $T159286[esp+56], ecx
	mov	DWORD PTR $T159286[esp+60], eax
	call	?insert@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo *> >,0> >::insert

; 418  : 		return E_FAIL;
; 419  : 	}
; 420  : 	
; 421  : 	this->threadMapCriticalSection.Leave();

	mov	eax, DWORD PTR tv352[esp+48]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 422  : 	return S_OK;

	xor	eax, eax

; 423  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN97@ThreadAssi:

; 409  : 		ThreadInfo *data = it->second;

	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LN86@ThreadAssi
$LN2@ThreadAssi:

; 415  : 	} else {
; 416  : 		DebugWriteLine(L"Thread %d (%d) already exists in map!", managedThreadID, osThreadID);
; 417  : 		LogString(L"error-Thread %d (%d) already exists in map!-", managedThreadID, osThreadID);

	mov	ecx, DWORD PTR _osThreadID$[ebp]
	mov	edx, DWORD PTR _managedThreadID$[ebp]
	push	ecx
	push	edx
	push	OFFSET ??_C@_1FK@PMAJBODM@?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?9?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi@
	mov	edi, ebx
	call	?LogString@CProfiler@@QAAXPA_WZZ	; CProfiler::LogString
	add	esp, 12					; 0000000cH

; 423  : }

	pop	edi
	pop	esi
	mov	eax, -2147467259			; 80004005H
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ThreadAssignedToOSThread@CProfiler@@UAGJIK@Z ENDP	; CProfiler::ThreadAssignedToOSThread
_TEXT	ENDS
PUBLIC	?FunctionEnterGlobal@@YIXH@Z			; FunctionEnterGlobal
; Function compile flags: /Ogtpy
;	COMDAT ?FunctionEnterGlobal@@YIXH@Z
_TEXT	SEGMENT
_newParent$99123 = -36					; size = 4
$T159584 = -32						; size = 8
$T159585 = -24						; size = 24
?FunctionEnterGlobal@@YIXH@Z PROC			; FunctionEnterGlobal, COMDAT
; _functionID$ = ecx

; 76   : ASSEMBLER_CALLBACK FunctionEnterGlobal(int functionID) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 40					; 00000028H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	ebp, ecx

; 77   : 	ThreadLocalData *data = getThreadLocalData();

	mov	eax, DWORD PTR ?tls_index@@3KA		; tls_index
	push	eax
	call	DWORD PTR __imp__TlsGetValue@4
	mov	edi, eax

; 78   : 	
; 79   : 	if (data == nullptr) {

	xor	ebx, ebx
	cmp	edi, ebx
	jne	SHORT $LN11@FunctionEn@2

; 80   : 		data = AttachToThread();

	call	?add@LightweightList@@QAEPAUThreadLocalData@@XZ ; LightweightList::add
	mov	ecx, DWORD PTR ?tls_index@@3KA		; tls_index
	mov	edi, eax
	push	edi
	push	ecx
	call	DWORD PTR __imp__TlsSetValue@8

; 81   : 		profiler.EnterLock(data);

	mov	eax, edi
	call	?EnterLock@CProfiler@@QAEXPAUThreadLocalData@@@Z ; CProfiler::EnterLock

; 82   : 		FunctionEnterCreateNewRoot(data, __rdtsc());

	rdtsc
	mov	DWORD PTR $T159584[esp+56], eax
	push	edi
	lea	eax, DWORD PTR $T159584[esp+60]
	mov	DWORD PTR $T159584[esp+64], edx
	call	?FunctionEnterCreateNewRoot@@YAXPAUThreadLocalData@@AB_K@Z ; FunctionEnterCreateNewRoot
	add	esp, 4

; 83   : 	} else

	jmp	SHORT $LN10@FunctionEn@2
$LN11@FunctionEn@2:

; 84   : 		profiler.EnterLock(data);

	call	?EnterLock@CProfiler@@QAEXPAUThreadLocalData@@@Z ; CProfiler::EnterLock
$LN10@FunctionEn@2:

; 85   : 		
; 86   : 	if (!data->active)

	mov	dl, BYTE PTR [edi+8]
	test	dl, dl
	je	SHORT $LN37@FunctionEn@2

; 87   : 		goto EXIT;
; 88   : 
; 89   : 	// this call allows GetOrAddChild to update the value at the top of the stack
; 90   : 	// if the FunctionInfo is resized
; 91   : 	FunctionInfo *f = data->stack.top().function;
; 92   : 	
; 93   : 	if ((sharedMemoryHeader->doNotProfileDotnetInternals && functionID < 0 && f->Id < 0) || (sharedMemoryHeader->combineRecursiveFunction && functionID == f->Id)) {

	mov	ecx, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	mov	eax, DWORD PTR [edi+24]
	mov	esi, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+48], bl
	je	SHORT $LN5@FunctionEn@2
	cmp	ebp, ebx
	jge	SHORT $LN5@FunctionEn@2
	cmp	DWORD PTR [esi], ebx
	jl	SHORT $LN6@FunctionEn@2
$LN5@FunctionEn@2:
	cmp	BYTE PTR [ecx+49], bl
	je	SHORT $LN7@FunctionEn@2
	cmp	ebp, DWORD PTR [esi]
	jne	SHORT $LN7@FunctionEn@2
$LN6@FunctionEn@2:

; 94   : 		data->stack.top().frameCount++;

	inc	DWORD PTR [eax+16]
$LN37@FunctionEn@2:

; 119  : 	}
; 120  : EXIT:
; 121  : 	data->inLock = 0;

	mov	DWORD PTR [edi+4], ebx
$EXIT$99116:

; 122  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@FunctionEn@2:

; 95   : 	} else {
; 96   : 		//DebugWriteLine(L"FunctionEnterGlobal %d, current stack top=%d", functionID, f->Id);
; 97   : 		FunctionInfo *newParent = nullptr;
; 98   : 		FunctionInfo *child = f->GetOrAddChild(functionID, newParent);

	lea	eax, DWORD PTR _newParent$99123[esp+56]
	push	eax
	push	ebp
	push	esi
	mov	DWORD PTR _newParent$99123[esp+68], ebx
	call	?GetOrAddChild@FunctionInfo@@QAEPAU1@HAAPAU1@@Z ; FunctionInfo::GetOrAddChild
	mov	ebp, eax

; 99   : 		if (newParent != nullptr) {

	mov	eax, DWORD PTR _newParent$99123[esp+56]
	cmp	eax, ebx
	je	SHORT $LN3@FunctionEn@2

; 100  : 			// f was moved to newParent
; 101  : 			// update stack:
; 102  : 			data->stack.top().function = newParent;

	mov	ecx, DWORD PTR [edi+24]
	mov	DWORD PTR [ecx], eax

; 103  : 			// update parent of f:
; 104  : 			if (data->stack.hasAtLeastTwoElements()) {

	mov	edx, DWORD PTR [edi+24]

; 105  : 				//DebugWriteLine("Updating parent of parent");
; 106  : 				data->stack.belowTop().function->AddOrUpdateChild(newParent);

	push	eax
	cmp	edx, DWORD PTR [edi+20]
	jbe	SHORT $LN2@FunctionEn@2
	mov	eax, edx
	mov	edx, DWORD PTR [eax-24]
	call	?AddOrUpdateChild@FunctionInfo@@QAEXPAU1@@Z ; FunctionInfo::AddOrUpdateChild

; 107  : 				data->stack.belowTop().function->Check();
; 108  : 			} else {

	jmp	SHORT $LN1@FunctionEn@2
$LN2@FunctionEn@2:

; 109  : 				DebugWriteLine(L"Updating parent of parent (root)");
; 110  : 				profiler.MovedRootChild(newParent);

	call	?MovedRootChild@CProfiler@@QAEXPAUFunctionInfo@@@Z ; CProfiler::MovedRootChild
$LN1@FunctionEn@2:

; 111  : 			}
; 112  : 			FreeFunctionInfo(f);

	call	?FreeFunctionInfo@@YAXPAUFunctionInfo@@@Z ; FreeFunctionInfo
$LN3@FunctionEn@2:

; 113  : 		}
; 114  : 		
; 115  : 		// Set the stats for this function
; 116  : 		child->CallCount++;
; 117  : 		
; 118  : 		data->stack.push(StackEntry(child, __rdtsc()));

	rdtsc
	mov	ecx, 1
	add	DWORD PTR [ebp+4], ecx
	add	DWORD PTR [edi+24], 24			; 00000018H
	lea	esi, DWORD PTR [edi+20]
	mov	ebx, eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR $T159585[esp+68], edx
	mov	DWORD PTR $T159585[esp+72], ecx
	cmp	eax, DWORD PTR [esi+8]
	jne	SHORT $LN34@FunctionEn@2
	call	?Enlarge@?$LightweightStack@UStackEntry@@@@QAEXXZ ; LightweightStack<StackEntry>::Enlarge
$LN34@FunctionEn@2:
	mov	esi, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR $T159585[esp+60]
	mov	edx, DWORD PTR $T159585[esp+68]
	mov	eax, DWORD PTR $T159585[esp+72]
	mov	DWORD PTR [esi], ebp
	mov	DWORD PTR [esi+4], ecx
	mov	ecx, DWORD PTR $T159585[esp+76]
	mov	DWORD PTR [esi+8], ebx
	mov	DWORD PTR [esi+12], edx
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], ecx

; 119  : 	}
; 120  : EXIT:
; 121  : 	data->inLock = 0;

	mov	DWORD PTR [edi+4], 0

; 122  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?FunctionEnterGlobal@@YIXH@Z ENDP			; FunctionEnterGlobal
; Function compile flags: /Ogtpy
;	COMDAT ?Initialize@CProfiler@@UAGJPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pICorProfilerInfoUnk$ = 12				; size = 4
?Initialize@CProfiler@@UAGJPAUIUnknown@@@Z PROC		; CProfiler::Initialize, COMDAT

; 251  : STDMETHODIMP CProfiler::Initialize(IUnknown *pICorProfilerInfoUnk) {

	push	ebp
	push	esi
	push	edi

; 252  : 	#ifdef DEBUG
; 253  : 	MessageBox(nullptr, TEXT("CProfiler::Initialize - Attach debugger now!"), TEXT("Attach debugger"), MB_OK);
; 254  : 	//__debugbreak();
; 255  : 	#endif
; 256  : 
; 257  : 	// Have to disable the profiler, if this process starts other .NET processes (e. g. run a project in SharpDevelop)
; 258  : 	SetEnvironmentVariable("COR_ENABLE_PROFILING", "0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	OFFSET ??_C@_0BF@IEBMFIMJ@COR_ENABLE_PROFILING?$AA@
	call	DWORD PTR __imp__SetEnvironmentVariableA@8

; 259  : 	
; 260  : 	InitializeCommunication();

	mov	esi, DWORD PTR _this$[esp+8]
	mov	edi, esi
	call	?InitializeCommunication@CProfiler@@AAEHXZ ; CProfiler::InitializeCommunication

; 261  : 
; 262  : 	// log that we are initializing
; 263  : 	LogString(L"Initializing...");

	push	OFFSET ??_C@_1CA@CPAJBOA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AA@
	call	?LogString@CProfiler@@QAAXPA_WZZ	; CProfiler::LogString

; 264  : 	
; 265  : 	sharedMemoryHeader->mallocator.initialize((byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->HeapOffset, (byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->HeapOffset + sharedMemoryHeader->HeapLength);

	mov	eax, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	mov	edi, DWORD PTR [eax+24]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, edi
	add	ecx, edx
	mov	DWORD PTR [eax+60], ecx
	add	edx, edi
	mov	DWORD PTR [eax+52], edx
	mov	DWORD PTR [eax+56], edx

; 266  : 	
; 267  : 	stackAllocator.initialize((byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->ThreadDataOffset, (byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->ThreadDataOffset + sharedMemoryHeader->ThreadDataLength);

	mov	ecx, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [ecx+8]
	mov	edi, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, edi
	add	ecx, edx
	add	edx, edi
	add	esp, 4

; 268  : 
; 269  : 	sharedMemoryHeader->RootFuncInfo = CreateFunctionInfo(0, 0);

	add	eax, 52					; 00000034H
	mov	DWORD PTR ?stackAllocator@@3UfastAllocator@@A, edx
	push	eax
	mov	edi, 40					; 00000028H
	mov	DWORD PTR ?stackAllocator@@3UfastAllocator@@A+4, edx
	mov	DWORD PTR ?stackAllocator@@3UfastAllocator@@A+8, ecx
	call	?malloc@?$freeListAllocator@UFunctionInfoAllocationSize@@@@QAEPAXI@Z ; freeListAllocator<FunctionInfoAllocationSize>::malloc
	mov	edx, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader

; 270  : 
; 271  : 	// get the ICorProfilerInfo interface
; 272  :     HRESULT hr = pICorProfilerInfoUnk->QueryInterface(IID_ICorProfilerInfo, (LPVOID*)&pICorProfilerInfo);

	mov	edi, DWORD PTR _pICorProfilerInfoUnk$[esp+8]
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+20], 3
	lea	ebp, DWORD PTR [esi+4]
	push	ebp
	mov	DWORD PTR [edx+36], eax
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax]
	push	OFFSET _IID_ICorProfilerInfo
	push	edi
	call	ecx

; 273  :     if (FAILED(hr))

	test	eax, eax
	jge	SHORT $LN6@Initialize@2
	pop	edi
	pop	esi

; 274  :         return E_FAIL;

	mov	eax, -2147467259			; 80004005H
	pop	ebp

; 302  : }

	ret	8
$LN6@Initialize@2:

; 275  : 	// determine if this object implements ICorProfilerInfo2
; 276  :     hr = pICorProfilerInfoUnk->QueryInterface(IID_ICorProfilerInfo2, (LPVOID*)&pICorProfilerInfo2);

	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx]
	push	ebx
	lea	ebx, DWORD PTR [esi+8]
	push	ebx
	push	OFFSET _IID_ICorProfilerInfo2
	push	edi
	call	eax

; 277  :     if (FAILED(hr))

	test	eax, eax
	jge	SHORT $LN5@Initialize@2

; 278  : 	{
; 279  : 		LogString(L"FATAL ERROR: Unsupported .NET version needs to be at least 2.0!");

	push	OFFSET ??_C@_1IA@ICOEBLFH@?$AAF?$AAA?$AAT?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AA?4?$AAN?$AAE?$AAT?$AA?5?$AAv?$AAe@
	mov	edi, esi
	call	?LogString@CProfiler@@QAAXPA_WZZ	; CProfiler::LogString
	add	esp, 4

; 280  : 		this->pICorProfilerInfo2 = nullptr;

	mov	DWORD PTR [ebx], 0
	pop	ebx
	pop	edi
	pop	esi

; 281  : 		return E_FAIL;

	mov	eax, -2147467259			; 80004005H
	pop	ebp

; 302  : }

	ret	8
$LN5@Initialize@2:

; 282  : 	}
; 283  : 
; 284  : 	// Indicate which events we're interested in.
; 285  : 	hr = SetEventMask();

	mov	edx, DWORD PTR ?sharedMemoryHeader@@3PAUSharedMemoryHeader@@A ; sharedMemoryHeader
	cmp	BYTE PTR [edx+50], 0
	mov	ecx, 16781889				; 01001241H
	je	SHORT $LN27@Initialize@2
	mov	ecx, 16781925				; 01001265H
$LN27@Initialize@2:
	mov	eax, DWORD PTR [ebp]
	mov	edx, DWORD PTR [eax]
	push	ecx
	push	eax
	mov	eax, DWORD PTR [edx+64]
	call	eax

; 286  :     if (FAILED(hr))

	test	eax, eax
	jge	SHORT $LN4@Initialize@2

; 287  :         LogString(L"Error setting the event mask");

	push	OFFSET ??_C@_1DK@JNGEKABN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AA@
	mov	edi, esi
	call	?LogString@CProfiler@@QAAXPA_WZZ	; CProfiler::LogString
	add	esp, 4
$LN4@Initialize@2:

; 288  : 
; 289  : 	// set the enter, leave and tailcall hooks
; 290  : 	hr = pICorProfilerInfo2->SetEnterLeaveFunctionHooks2(FunctionEnterNaked, FunctionLeaveNaked, FunctionTailcallNaked);

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+148]
	push	OFFSET ?FunctionTailcallNaked@@YAXIII@Z	; FunctionTailcallNaked
	push	OFFSET ?FunctionLeaveNaked@@YAXIIIPAU_COR_PRF_FUNCTION_ARGUMENT_RANGE@@@Z ; FunctionLeaveNaked
	push	OFFSET ?FunctionEnterNaked@@YAXIIIPAU_COR_PRF_FUNCTION_ARGUMENT_INFO@@@Z ; FunctionEnterNaked
	push	eax
	call	edx

; 291  : 	if (SUCCEEDED(hr))

	test	eax, eax
	jl	SHORT $LN30@Initialize@2

; 292  : 		hr = pICorProfilerInfo2->SetFunctionIDMapper(FunctionMapper);

	mov	ebx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+72]
	push	OFFSET ?FunctionMapper@CProfiler@@SGIIPAH@Z ; CProfiler::FunctionMapper
	push	ebx
	call	ecx

; 293  : 	// report our success or failure to the log file
; 294  :     if (FAILED(hr))

	test	eax, eax
	jge	SHORT $LN2@Initialize@2
$LN30@Initialize@2:

; 295  :         LogString(L"Error setting the enter, leave and tailcall hooks");

	push	OFFSET ??_C@_1GE@MBLADCNK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?0?$AA?5?$AAl?$AAe?$AAa?$AAv?$AAe?$AA?5?$AAa@

; 296  : 	else

	jmp	SHORT $LN32@Initialize@2
$LN2@Initialize@2:

; 297  : 		LogString(L"Successfully initialized profiling" );

	push	OFFSET ??_C@_1EG@BIFPEPFJ@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5?$AAp?$AAr?$AAo?$AAf?$AAi?$AAl?$AAi@
$LN32@Initialize@2:
	mov	edi, esi
	call	?LogString@CProfiler@@QAAXPA_WZZ	; CProfiler::LogString
	add	esp, 4

; 298  : 
; 299  : 	this->sigReader = new SignatureReader(this->pICorProfilerInfo);

	push	4448					; 00001160H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN9@Initialize@2
	mov	edx, DWORD PTR [ebp]
	push	edx
	push	eax
	call	??0SignatureReader@@QAE@PAUICorProfilerInfo@@@Z ; SignatureReader::SignatureReader
	pop	ebx
	pop	edi
	mov	DWORD PTR [esi+144], eax
	pop	esi

; 300  : 	
; 301  :     return S_OK;

	xor	eax, eax
	pop	ebp

; 302  : }

	ret	8
$LN9@Initialize@2:
	pop	ebx

; 298  : 
; 299  : 	this->sigReader = new SignatureReader(this->pICorProfilerInfo);

	xor	eax, eax
	pop	edi
	mov	DWORD PTR [esi+144], eax
	pop	esi
	pop	ebp

; 302  : }

	ret	8
?Initialize@CProfiler@@UAGJPAUIUnknown@@@Z ENDP		; CProfiler::Initialize
END
